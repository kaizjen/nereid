/* ThemeChooser.svelte generated by Svelte v3.48.0 */
import {
	SvelteComponentDev,
	add_location,
	add_render_callback,
	append_dev,
	append_styles,
	attr_dev,
	create_component,
	create_in_transition,
	destroy_component,
	detach_dev,
	dispatch_dev,
	element,
	init,
	insert_dev,
	is_function,
	mount_component,
	noop,
	safe_not_equal,
	space,
	text,
	transition_in,
	transition_out,
	validate_slots
} from "nereid://.svelte/internal/index.mjs";

import { TextBlock, Button } from "../modules/fluent-svelte/index.js";
import { fly } from "nereid://.svelte/transition/index.mjs";
const file = "ThemeChooser.svelte";

function add_css(target) {
	append_styles(target, "svelte-c9u6vc", ".main.svelte-c9u6vc{width:-webkit-fill-available;height:-webkit-fill-available;z-index:-1;padding-inline:200px;--themer-box:30px;--th-light:linear-gradient(308deg, #f9f9f996, #ffffff);--th-dark:linear-gradient(123deg, black, #00000094);--th-system:linear-gradient(var(--fds-accent-default), #ffffff57)\r\n  }.head.svelte-c9u6vc{-webkit-app-region:drag;padding-top:20px;margin-bottom:50px;padding-left:200px}footer.svelte-c9u6vc{display:flex;align-items:center;bottom:0;position:absolute;width:100%;padding-block:8px;justify-content:flex-end}@media(prefers-color-scheme: dark){footer.svelte-c9u6vc{background:black}}@media(prefers-color-scheme: light){footer.svelte-c9u6vc{background:#cacaca}}.options.svelte-c9u6vc{margin-top:20px;display:flex;justify-content:space-evenly}.column.svelte-c9u6vc{display:flex;flex-direction:column}.surface.svelte-c9u6vc{display:flex;justify-content:center;align-items:center;padding:30px}.themer.svelte-c9u6vc{box-shadow:black 3px 4px 14px 0px;padding:var(--themer-box);border-radius:8px}.themer.white.svelte-c9u6vc{background:var(--th-light)}.themer.dark.svelte-c9u6vc{background:var(--th-dark)}.themer.half.svelte-c9u6vc{background:var(--th-system)}.note.svelte-c9u6vc{margin-top:50px;font-size:small;color:gray;font-style:italic}\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiVGhlbWVDaG9vc2VyLnN2ZWx0ZSIsInNvdXJjZXMiOlsiVGhlbWVDaG9vc2VyLnN2ZWx0ZSJdLCJzb3VyY2VzQ29udGVudCI6WyI8c3R5bGU+XHJcbiAgLm1haW4ge1xyXG4gICAgd2lkdGg6IC13ZWJraXQtZmlsbC1hdmFpbGFibGU7XHJcbiAgICBoZWlnaHQ6IC13ZWJraXQtZmlsbC1hdmFpbGFibGU7XHJcbiAgICB6LWluZGV4OiAtMTtcclxuICAgIHBhZGRpbmctaW5saW5lOiAyMDBweDtcclxuXHJcbiAgICAtLXRoZW1lci1ib3g6IDMwcHg7XHJcbiAgICAtLXRoLWxpZ2h0OiBsaW5lYXItZ3JhZGllbnQoMzA4ZGVnLCAjZjlmOWY5OTYsICNmZmZmZmYpO1xyXG4gICAgLS10aC1kYXJrOiBsaW5lYXItZ3JhZGllbnQoMTIzZGVnLCBibGFjaywgIzAwMDAwMDk0KTtcclxuICAgIC0tdGgtc3lzdGVtOiBsaW5lYXItZ3JhZGllbnQodmFyKC0tZmRzLWFjY2VudC1kZWZhdWx0KSwgI2ZmZmZmZjU3KVxyXG4gIH1cclxuICAuaGVhZCB7XHJcbiAgICAtd2Via2l0LWFwcC1yZWdpb246IGRyYWc7XHJcbiAgICBwYWRkaW5nLXRvcDogMjBweDtcclxuICAgIG1hcmdpbi1ib3R0b206IDUwcHg7XHJcbiAgICBwYWRkaW5nLWxlZnQ6IDIwMHB4O1xyXG4gIH1cclxuICBmb290ZXIge1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgICBib3R0b206IDA7XHJcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIHBhZGRpbmctYmxvY2s6IDhweDtcclxuICAgIGp1c3RpZnktY29udGVudDogZmxleC1lbmQ7XHJcbiAgfVxyXG4gIEBtZWRpYSAocHJlZmVycy1jb2xvci1zY2hlbWU6IGRhcmspIHtcclxuICAgIGZvb3RlciB7XHJcbiAgICAgIGJhY2tncm91bmQ6IGJsYWNrO1xyXG4gICAgfVxyXG4gIH1cclxuICBAbWVkaWEgKHByZWZlcnMtY29sb3Itc2NoZW1lOiBsaWdodCkge1xyXG4gICAgZm9vdGVyIHtcclxuICAgICAgYmFja2dyb3VuZDogI2NhY2FjYTtcclxuICAgIH1cclxuICB9XHJcbiAgLm9wdGlvbnMge1xyXG4gICAgbWFyZ2luLXRvcDogMjBweDtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWV2ZW5seTtcclxuICB9XHJcbiAgLmNvbHVtbiB7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICB9XHJcbiAgLnN1cmZhY2Uge1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgIHBhZGRpbmc6IDMwcHg7XHJcbiAgfVxyXG4gIC50aGVtZXIge1xyXG4gICAgYm94LXNoYWRvdzogYmxhY2sgM3B4IDRweCAxNHB4IDBweDtcclxuICAgIHBhZGRpbmc6IHZhcigtLXRoZW1lci1ib3gpO1xyXG4gICAgYm9yZGVyLXJhZGl1czogOHB4O1xyXG4gIH1cclxuICAudGhlbWVyLndoaXRlIHtcclxuICAgIGJhY2tncm91bmQ6IHZhcigtLXRoLWxpZ2h0KTtcclxuICB9XHJcbiAgLnRoZW1lci5kYXJrIHtcclxuICAgIGJhY2tncm91bmQ6IHZhcigtLXRoLWRhcmspO1xyXG4gIH1cclxuICAudGhlbWVyLmhhbGYge1xyXG4gICAgYmFja2dyb3VuZDogdmFyKC0tdGgtc3lzdGVtKTtcclxuICB9XHJcbiAgLm5vdGUge1xyXG4gICAgbWFyZ2luLXRvcDogNTBweDtcclxuICAgIGZvbnQtc2l6ZTogc21hbGw7XHJcbiAgICBjb2xvcjogZ3JheTtcclxuICAgIGZvbnQtc3R5bGU6IGl0YWxpYztcclxuICB9XHJcbjwvc3R5bGU+XHJcbjxzY3JpcHQ+XHJcbiAgaW1wb3J0IHsgVGV4dEJsb2NrLCBCdXR0b24gfSBmcm9tIFwiZmx1ZW50LXN2ZWx0ZVwiO1xyXG4gIGltcG9ydCB7IGZseSB9IGZyb20gXCJzdmVsdGUvdHJhbnNpdGlvblwiO1xyXG5cclxuICBleHBvcnQgbGV0IG5leHQ7XHJcbiAgZXhwb3J0IGxldCBjb25maWc7XHJcblxyXG4gIGNvbnN0IHsgdCB9ID0gd2luZG93Lm5lcmVpZC5pMThuO1xyXG5cclxuICBsZXQgY3VycmVudFRoZW1lID0gY29uZmlnLnVpLnRoZW1lO1xyXG5cclxuICBmdW5jdGlvbiBzZXRUaGVtZUYodGhlbWUpIHtcclxuICAgIHJldHVybiBmdW5jdGlvbiAoKSB7XHJcbiAgICAgIGNvbmZpZy51aS50aGVtZSA9IHRoZW1lO1xyXG4gICAgICB3aW5kb3cubmVyZWlkLnVzZXJkYXRhLmNvbmZpZy5zZXQoY29uZmlnKVxyXG4gICAgICBjdXJyZW50VGhlbWUgPSB0aGVtZVxyXG4gICAgfVxyXG4gIH1cclxuPC9zY3JpcHQ+XHJcblxyXG5cclxuPGRpdiBjbGFzcz1cImhlYWRcIj5cclxuICA8VGV4dEJsb2NrIHZhcmlhbnQ9XCJ0aXRsZUxhcmdlXCI+e3QoJ3BhZ2VzLndlbGNvbWUudGhlbWVzLnRpdGxlJyl9PC9UZXh0QmxvY2s+XHJcbjwvZGl2PlxyXG48ZGl2IGNsYXNzPVwibWFpblwiIGluOmZseT17eyB4OiA0MDAgfX0+XHJcbiAgPGRpdiBjbGFzcz1cIm5vdGVcIj5cclxuICAgIHt0KCdwYWdlcy53ZWxjb21lLnRoZW1lcy5ub3RlJyl9XHJcbiAgPC9kaXY+XHJcblxyXG4gIDxkaXYgY2xhc3M9XCJvcHRpb25zXCI+XHJcbiAgICA8QnV0dG9uIG9uOmNsaWNrPXtzZXRUaGVtZUYoJ2xpZ2h0Jyl9IHN0eWxlPXtjdXJyZW50VGhlbWUgPT0gJ2xpZ2h0JyA/IFwiYm9yZGVyLWNvbG9yOiB2YXIoLS1mZHMtYWNjZW50LWRlZmF1bHQpXCIgOiAnJ30+XHJcbiAgICAgIDxkaXYgY2xhc3M9XCJjb2x1bW5cIj5cclxuICAgICAgICA8ZGl2IGNsYXNzPVwic3VyZmFjZVwiPlxyXG4gICAgICAgICAgPGRpdiBjbGFzcz1cInRoZW1lciB3aGl0ZVwiPjwvZGl2PlxyXG4gICAgICAgIDwvZGl2PlxyXG4gICAgICAgIHt0KCdwYWdlcy53ZWxjb21lLnRoZW1lcy5saWdodCcpfVxyXG4gICAgICA8L2Rpdj5cclxuICAgIDwvQnV0dG9uPlxyXG4gICAgPEJ1dHRvbiBvbjpjbGljaz17c2V0VGhlbWVGKCdkYXJrJyl9IHN0eWxlPXtjdXJyZW50VGhlbWUgPT0gJ2RhcmsnID8gXCJib3JkZXItY29sb3I6IHZhcigtLWZkcy1hY2NlbnQtZGVmYXVsdClcIiA6ICcnfT5cclxuICAgICAgPGRpdiBjbGFzcz1cImNvbHVtblwiPlxyXG4gICAgICAgIDxkaXYgY2xhc3M9XCJzdXJmYWNlXCI+XHJcbiAgICAgICAgICA8ZGl2IGNsYXNzPVwidGhlbWVyIGRhcmtcIj48L2Rpdj5cclxuICAgICAgICA8L2Rpdj5cclxuICAgICAgICB7dCgncGFnZXMud2VsY29tZS50aGVtZXMuZGFyaycpfVxyXG4gICAgICA8L2Rpdj5cclxuICAgIDwvQnV0dG9uPlxyXG4gICAgPEJ1dHRvbiBvbjpjbGljaz17c2V0VGhlbWVGKCdzeXN0ZW0nKX0gc3R5bGU9e2N1cnJlbnRUaGVtZSA9PSAnc3lzdGVtJyA/IFwiYm9yZGVyLWNvbG9yOiB2YXIoLS1mZHMtYWNjZW50LWRlZmF1bHQpXCIgOiAnJ30+XHJcbiAgICAgIDxkaXYgY2xhc3M9XCJjb2x1bW5cIj5cclxuICAgICAgICA8ZGl2IGNsYXNzPVwic3VyZmFjZVwiPlxyXG4gICAgICAgICAgPGRpdiBjbGFzcz1cInRoZW1lciBoYWxmXCI+PC9kaXY+XHJcbiAgICAgICAgPC9kaXY+XHJcbiAgICAgICAge3QoJ3BhZ2VzLndlbGNvbWUudGhlbWVzLnN5c3RlbScpfVxyXG4gICAgICA8L2Rpdj5cclxuICAgIDwvQnV0dG9uPlxyXG4gIDwvZGl2PlxyXG5cclxuPC9kaXY+XHJcbjxmb290ZXI+XHJcbiAgPEJ1dHRvbiBvbjpjbGljaz17bmV4dH0+XHJcbiAgICB7dCgncGFnZXMud2VsY29tZS5jb21tb24ubmV4dCcpfVxyXG4gIDwvQnV0dG9uPlxyXG48L2Zvb3Rlcj4iXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQ0UsS0FBSyxjQUFDLENBQUMsQUFDTCxLQUFLLENBQUUsc0JBQXNCLENBQzdCLE1BQU0sQ0FBRSxzQkFBc0IsQ0FDOUIsT0FBTyxDQUFFLEVBQUUsQ0FDWCxjQUFjLENBQUUsS0FBSyxDQUVyQixZQUFZLENBQUUsSUFBSSxDQUNsQixVQUFVLENBQUUsMkNBQTJDLENBQ3ZELFNBQVMsQ0FBRSx5Q0FBeUMsQ0FDcEQsV0FBVyxDQUFFO0VBQ2YsQ0FBQyxBQUNELEtBQUssY0FBQyxDQUFDLEFBQ0wsa0JBQWtCLENBQUUsSUFBSSxDQUN4QixXQUFXLENBQUUsSUFBSSxDQUNqQixhQUFhLENBQUUsSUFBSSxDQUNuQixZQUFZLENBQUUsS0FBSyxBQUNyQixDQUFDLEFBQ0QsTUFBTSxjQUFDLENBQUMsQUFDTixPQUFPLENBQUUsSUFBSSxDQUNiLFdBQVcsQ0FBRSxNQUFNLENBQ25CLE1BQU0sQ0FBRSxDQUFDLENBQ1QsUUFBUSxDQUFFLFFBQVEsQ0FDbEIsS0FBSyxDQUFFLElBQUksQ0FDWCxhQUFhLENBQUUsR0FBRyxDQUNsQixlQUFlLENBQUUsUUFBUSxBQUMzQixDQUFDLEFBQ0QsTUFBTSxBQUFDLHVCQUF1QixJQUFJLENBQUMsQUFBQyxDQUFDLEFBQ25DLE1BQU0sY0FBQyxDQUFDLEFBQ04sVUFBVSxDQUFFLEtBQUssQUFDbkIsQ0FBQyxBQUNILENBQUMsQUFDRCxNQUFNLEFBQUMsdUJBQXVCLEtBQUssQ0FBQyxBQUFDLENBQUMsQUFDcEMsTUFBTSxjQUFDLENBQUMsQUFDTixVQUFVLENBQUUsT0FBTyxBQUNyQixDQUFDLEFBQ0gsQ0FBQyxBQUNELFFBQVEsY0FBQyxDQUFDLEFBQ1IsVUFBVSxDQUFFLElBQUksQ0FDaEIsT0FBTyxDQUFFLElBQUksQ0FDYixlQUFlLENBQUUsWUFBWSxBQUMvQixDQUFDLEFBQ0QsT0FBTyxjQUFDLENBQUMsQUFDUCxPQUFPLENBQUUsSUFBSSxDQUNiLGNBQWMsQ0FBRSxNQUFNLEFBQ3hCLENBQUMsQUFDRCxRQUFRLGNBQUMsQ0FBQyxBQUNSLE9BQU8sQ0FBRSxJQUFJLENBQ2IsZUFBZSxDQUFFLE1BQU0sQ0FDdkIsV0FBVyxDQUFFLE1BQU0sQ0FDbkIsT0FBTyxDQUFFLElBQUksQUFDZixDQUFDLEFBQ0QsT0FBTyxjQUFDLENBQUMsQUFDUCxVQUFVLENBQUUsS0FBSyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FDbEMsT0FBTyxDQUFFLElBQUksWUFBWSxDQUFDLENBQzFCLGFBQWEsQ0FBRSxHQUFHLEFBQ3BCLENBQUMsQUFDRCxPQUFPLE1BQU0sY0FBQyxDQUFDLEFBQ2IsVUFBVSxDQUFFLElBQUksVUFBVSxDQUFDLEFBQzdCLENBQUMsQUFDRCxPQUFPLEtBQUssY0FBQyxDQUFDLEFBQ1osVUFBVSxDQUFFLElBQUksU0FBUyxDQUFDLEFBQzVCLENBQUMsQUFDRCxPQUFPLEtBQUssY0FBQyxDQUFDLEFBQ1osVUFBVSxDQUFFLElBQUksV0FBVyxDQUFDLEFBQzlCLENBQUMsQUFDRCxLQUFLLGNBQUMsQ0FBQyxBQUNMLFVBQVUsQ0FBRSxJQUFJLENBQ2hCLFNBQVMsQ0FBRSxLQUFLLENBQ2hCLEtBQUssQ0FBRSxJQUFJLENBQ1gsVUFBVSxDQUFFLE1BQU0sQUFDcEIsQ0FBQyJ9 */");
}

// (96:2) <TextBlock variant="titleLarge">
function create_default_slot_4(ctx) {
	let t_1_value = /*t*/ ctx[2]('pages.welcome.themes.title') + "";
	let t_1;

	const block = {
		c: function create() {
			t_1 = text(t_1_value);
		},
		m: function mount(target, anchor) {
			insert_dev(target, t_1, anchor);
		},
		p: noop,
		d: function destroy(detaching) {
			if (detaching) detach_dev(t_1);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_default_slot_4.name,
		type: "slot",
		source: "(96:2) <TextBlock variant=\\\"titleLarge\\\">",
		ctx
	});

	return block;
}

// (104:4) <Button on:click={setThemeF('light')} style={currentTheme == 'light' ? "border-color: var(--fds-accent-default)" : ''}>
function create_default_slot_3(ctx) {
	let div2;
	let div1;
	let div0;
	let t0;
	let t1_value = /*t*/ ctx[2]('pages.welcome.themes.light') + "";
	let t1;

	const block = {
		c: function create() {
			div2 = element("div");
			div1 = element("div");
			div0 = element("div");
			t0 = space();
			t1 = text(t1_value);
			attr_dev(div0, "class", "themer white svelte-c9u6vc");
			add_location(div0, file, 106, 10, 2406);
			attr_dev(div1, "class", "surface svelte-c9u6vc");
			add_location(div1, file, 105, 8, 2373);
			attr_dev(div2, "class", "column svelte-c9u6vc");
			add_location(div2, file, 104, 6, 2343);
		},
		m: function mount(target, anchor) {
			insert_dev(target, div2, anchor);
			append_dev(div2, div1);
			append_dev(div1, div0);
			append_dev(div2, t0);
			append_dev(div2, t1);
		},
		p: noop,
		d: function destroy(detaching) {
			if (detaching) detach_dev(div2);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_default_slot_3.name,
		type: "slot",
		source: "(104:4) <Button on:click={setThemeF('light')} style={currentTheme == 'light' ? \\\"border-color: var(--fds-accent-default)\\\" : ''}>",
		ctx
	});

	return block;
}

// (112:4) <Button on:click={setThemeF('dark')} style={currentTheme == 'dark' ? "border-color: var(--fds-accent-default)" : ''}>
function create_default_slot_2(ctx) {
	let div2;
	let div1;
	let div0;
	let t0;
	let t1_value = /*t*/ ctx[2]('pages.welcome.themes.dark') + "";
	let t1;

	const block = {
		c: function create() {
			div2 = element("div");
			div1 = element("div");
			div0 = element("div");
			t0 = space();
			t1 = text(t1_value);
			attr_dev(div0, "class", "themer dark svelte-c9u6vc");
			add_location(div0, file, 114, 10, 2720);
			attr_dev(div1, "class", "surface svelte-c9u6vc");
			add_location(div1, file, 113, 8, 2687);
			attr_dev(div2, "class", "column svelte-c9u6vc");
			add_location(div2, file, 112, 6, 2657);
		},
		m: function mount(target, anchor) {
			insert_dev(target, div2, anchor);
			append_dev(div2, div1);
			append_dev(div1, div0);
			append_dev(div2, t0);
			append_dev(div2, t1);
		},
		p: noop,
		d: function destroy(detaching) {
			if (detaching) detach_dev(div2);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_default_slot_2.name,
		type: "slot",
		source: "(112:4) <Button on:click={setThemeF('dark')} style={currentTheme == 'dark' ? \\\"border-color: var(--fds-accent-default)\\\" : ''}>",
		ctx
	});

	return block;
}

// (120:4) <Button on:click={setThemeF('system')} style={currentTheme == 'system' ? "border-color: var(--fds-accent-default)" : ''}>
function create_default_slot_1(ctx) {
	let div2;
	let div1;
	let div0;
	let t0;
	let t1_value = /*t*/ ctx[2]('pages.welcome.themes.system') + "";
	let t1;

	const block = {
		c: function create() {
			div2 = element("div");
			div1 = element("div");
			div0 = element("div");
			t0 = space();
			t1 = text(t1_value);
			attr_dev(div0, "class", "themer half svelte-c9u6vc");
			add_location(div0, file, 122, 10, 3036);
			attr_dev(div1, "class", "surface svelte-c9u6vc");
			add_location(div1, file, 121, 8, 3003);
			attr_dev(div2, "class", "column svelte-c9u6vc");
			add_location(div2, file, 120, 6, 2973);
		},
		m: function mount(target, anchor) {
			insert_dev(target, div2, anchor);
			append_dev(div2, div1);
			append_dev(div1, div0);
			append_dev(div2, t0);
			append_dev(div2, t1);
		},
		p: noop,
		d: function destroy(detaching) {
			if (detaching) detach_dev(div2);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_default_slot_1.name,
		type: "slot",
		source: "(120:4) <Button on:click={setThemeF('system')} style={currentTheme == 'system' ? \\\"border-color: var(--fds-accent-default)\\\" : ''}>",
		ctx
	});

	return block;
}

// (132:2) <Button on:click={next}>
function create_default_slot(ctx) {
	let t_1_value = /*t*/ ctx[2]('pages.welcome.common.next') + "";
	let t_1;

	const block = {
		c: function create() {
			t_1 = text(t_1_value);
		},
		m: function mount(target, anchor) {
			insert_dev(target, t_1, anchor);
		},
		p: noop,
		d: function destroy(detaching) {
			if (detaching) detach_dev(t_1);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_default_slot.name,
		type: "slot",
		source: "(132:2) <Button on:click={next}>",
		ctx
	});

	return block;
}

function create_fragment(ctx) {
	let div0;
	let textblock;
	let t0;
	let div3;
	let div1;
	let t2;
	let div2;
	let button0;
	let t3;
	let button1;
	let t4;
	let button2;
	let div3_intro;
	let t5;
	let footer;
	let button3;
	let current;

	textblock = new TextBlock({
			props: {
				variant: "titleLarge",
				$$slots: { default: [create_default_slot_4] },
				$$scope: { ctx }
			},
			$$inline: true
		});

	button0 = new Button({
			props: {
				style: /*currentTheme*/ ctx[1] == 'light'
				? "border-color: var(--fds-accent-default)"
				: '',
				$$slots: { default: [create_default_slot_3] },
				$$scope: { ctx }
			},
			$$inline: true
		});

	button0.$on("click", /*setThemeF*/ ctx[3]('light'));

	button1 = new Button({
			props: {
				style: /*currentTheme*/ ctx[1] == 'dark'
				? "border-color: var(--fds-accent-default)"
				: '',
				$$slots: { default: [create_default_slot_2] },
				$$scope: { ctx }
			},
			$$inline: true
		});

	button1.$on("click", /*setThemeF*/ ctx[3]('dark'));

	button2 = new Button({
			props: {
				style: /*currentTheme*/ ctx[1] == 'system'
				? "border-color: var(--fds-accent-default)"
				: '',
				$$slots: { default: [create_default_slot_1] },
				$$scope: { ctx }
			},
			$$inline: true
		});

	button2.$on("click", /*setThemeF*/ ctx[3]('system'));

	button3 = new Button({
			props: {
				$$slots: { default: [create_default_slot] },
				$$scope: { ctx }
			},
			$$inline: true
		});

	button3.$on("click", function () {
		if (is_function(/*next*/ ctx[0])) /*next*/ ctx[0].apply(this, arguments);
	});

	const block = {
		c: function create() {
			div0 = element("div");
			create_component(textblock.$$.fragment);
			t0 = space();
			div3 = element("div");
			div1 = element("div");
			div1.textContent = `${/*t*/ ctx[2]('pages.welcome.themes.note')}`;
			t2 = space();
			div2 = element("div");
			create_component(button0.$$.fragment);
			t3 = space();
			create_component(button1.$$.fragment);
			t4 = space();
			create_component(button2.$$.fragment);
			t5 = space();
			footer = element("footer");
			create_component(button3.$$.fragment);
			attr_dev(div0, "class", "head svelte-c9u6vc");
			add_location(div0, file, 94, 0, 1966);
			attr_dev(div1, "class", "note svelte-c9u6vc");
			add_location(div1, file, 98, 2, 2117);
			attr_dev(div2, "class", "options svelte-c9u6vc");
			add_location(div2, file, 102, 2, 2189);
			attr_dev(div3, "class", "main svelte-c9u6vc");
			add_location(div3, file, 97, 0, 2075);
			attr_dev(footer, "class", "svelte-c9u6vc");
			add_location(footer, file, 130, 0, 3178);
		},
		l: function claim(nodes) {
			throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option");
		},
		m: function mount(target, anchor) {
			insert_dev(target, div0, anchor);
			mount_component(textblock, div0, null);
			insert_dev(target, t0, anchor);
			insert_dev(target, div3, anchor);
			append_dev(div3, div1);
			append_dev(div3, t2);
			append_dev(div3, div2);
			mount_component(button0, div2, null);
			append_dev(div2, t3);
			mount_component(button1, div2, null);
			append_dev(div2, t4);
			mount_component(button2, div2, null);
			insert_dev(target, t5, anchor);
			insert_dev(target, footer, anchor);
			mount_component(button3, footer, null);
			current = true;
		},
		p: function update(new_ctx, [dirty]) {
			ctx = new_ctx;
			const textblock_changes = {};

			if (dirty & /*$$scope*/ 32) {
				textblock_changes.$$scope = { dirty, ctx };
			}

			textblock.$set(textblock_changes);
			const button0_changes = {};

			if (dirty & /*currentTheme*/ 2) button0_changes.style = /*currentTheme*/ ctx[1] == 'light'
			? "border-color: var(--fds-accent-default)"
			: '';

			if (dirty & /*$$scope*/ 32) {
				button0_changes.$$scope = { dirty, ctx };
			}

			button0.$set(button0_changes);
			const button1_changes = {};

			if (dirty & /*currentTheme*/ 2) button1_changes.style = /*currentTheme*/ ctx[1] == 'dark'
			? "border-color: var(--fds-accent-default)"
			: '';

			if (dirty & /*$$scope*/ 32) {
				button1_changes.$$scope = { dirty, ctx };
			}

			button1.$set(button1_changes);
			const button2_changes = {};

			if (dirty & /*currentTheme*/ 2) button2_changes.style = /*currentTheme*/ ctx[1] == 'system'
			? "border-color: var(--fds-accent-default)"
			: '';

			if (dirty & /*$$scope*/ 32) {
				button2_changes.$$scope = { dirty, ctx };
			}

			button2.$set(button2_changes);
			const button3_changes = {};

			if (dirty & /*$$scope*/ 32) {
				button3_changes.$$scope = { dirty, ctx };
			}

			button3.$set(button3_changes);
		},
		i: function intro(local) {
			if (current) return;
			transition_in(textblock.$$.fragment, local);
			transition_in(button0.$$.fragment, local);
			transition_in(button1.$$.fragment, local);
			transition_in(button2.$$.fragment, local);

			if (!div3_intro) {
				add_render_callback(() => {
					div3_intro = create_in_transition(div3, fly, { x: 400 });
					div3_intro.start();
				});
			}

			transition_in(button3.$$.fragment, local);
			current = true;
		},
		o: function outro(local) {
			transition_out(textblock.$$.fragment, local);
			transition_out(button0.$$.fragment, local);
			transition_out(button1.$$.fragment, local);
			transition_out(button2.$$.fragment, local);
			transition_out(button3.$$.fragment, local);
			current = false;
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(div0);
			destroy_component(textblock);
			if (detaching) detach_dev(t0);
			if (detaching) detach_dev(div3);
			destroy_component(button0);
			destroy_component(button1);
			destroy_component(button2);
			if (detaching) detach_dev(t5);
			if (detaching) detach_dev(footer);
			destroy_component(button3);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

function instance($$self, $$props, $$invalidate) {
	let { $$slots: slots = {}, $$scope } = $$props;
	validate_slots('ThemeChooser', slots, []);
	let { next } = $$props;
	let { config } = $$props;
	const { t } = window.nereid.i18n;
	let currentTheme = config.ui.theme;

	function setThemeF(theme) {
		return function () {
			$$invalidate(4, config.ui.theme = theme, config);
			window.nereid.userdata.config.set(config);
			$$invalidate(1, currentTheme = theme);
		};
	}

	const writable_props = ['next', 'config'];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== '$$' && key !== 'slot') console.warn(`<ThemeChooser> was created with unknown prop '${key}'`);
	});

	$$self.$$set = $$props => {
		if ('next' in $$props) $$invalidate(0, next = $$props.next);
		if ('config' in $$props) $$invalidate(4, config = $$props.config);
	};

	$$self.$capture_state = () => ({
		TextBlock,
		Button,
		fly,
		next,
		config,
		t,
		currentTheme,
		setThemeF
	});

	$$self.$inject_state = $$props => {
		if ('next' in $$props) $$invalidate(0, next = $$props.next);
		if ('config' in $$props) $$invalidate(4, config = $$props.config);
		if ('currentTheme' in $$props) $$invalidate(1, currentTheme = $$props.currentTheme);
	};

	if ($$props && "$$inject" in $$props) {
		$$self.$inject_state($$props.$$inject);
	}

	return [next, currentTheme, t, setThemeF, config];
}

class ThemeChooser extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance, create_fragment, safe_not_equal, { next: 0, config: 4 }, add_css);

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "ThemeChooser",
			options,
			id: create_fragment.name
		});

		const { ctx } = this.$$;
		const props = options.props || {};

		if (/*next*/ ctx[0] === undefined && !('next' in props)) {
			console.warn("<ThemeChooser> was created without expected prop 'next'");
		}

		if (/*config*/ ctx[4] === undefined && !('config' in props)) {
			console.warn("<ThemeChooser> was created without expected prop 'config'");
		}
	}

	get next() {
		throw new Error("<ThemeChooser>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set next(value) {
		throw new Error("<ThemeChooser>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get config() {
		throw new Error("<ThemeChooser>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set config(value) {
		throw new Error("<ThemeChooser>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}
}

export default ThemeChooser;