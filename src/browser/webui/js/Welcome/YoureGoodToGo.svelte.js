/* YoureGoodToGo.svelte generated by Svelte v3.48.0 */
import {
	SvelteComponentDev,
	add_location,
	add_render_callback,
	append_dev,
	append_styles,
	attr_dev,
	create_component,
	create_in_transition,
	destroy_component,
	detach_dev,
	dispatch_dev,
	element,
	init,
	insert_dev,
	mount_component,
	noop,
	safe_not_equal,
	space,
	text,
	transition_in,
	transition_out,
	validate_slots
} from "nereid://.svelte/internal/index.mjs";

import { Button, TextBlock } from "../modules/fluent-svelte/index.js";
import { scale } from "nereid://.svelte/transition/index.mjs";
const file = "YoureGoodToGo.svelte";

function add_css(target) {
	append_styles(target, "svelte-1oadws8", ".center.svelte-1oadws8{display:flex;justify-content:center;align-items:center;height:100%;width:100%;position:absolute}.content.svelte-1oadws8{padding:8px;text-align:center}\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiWW91cmVHb29kVG9Hby5zdmVsdGUiLCJzb3VyY2VzIjpbIllvdXJlR29vZFRvR28uc3ZlbHRlIl0sInNvdXJjZXNDb250ZW50IjpbIjxzdHlsZT5cclxuICAuY2VudGVyIHtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgICBoZWlnaHQ6IDEwMCU7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICB9XHJcbiAgLmNvbnRlbnQge1xyXG4gICAgcGFkZGluZzogOHB4O1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gIH1cclxuPC9zdHlsZT5cclxuXHJcbjxzY3JpcHQ+XHJcbiAgaW1wb3J0IHsgQnV0dG9uLCBUZXh0QmxvY2sgfSBmcm9tIFwiZmx1ZW50LXN2ZWx0ZVwiO1xyXG4gIGltcG9ydCB7IHNjYWxlIH0gZnJvbSBcInN2ZWx0ZS90cmFuc2l0aW9uXCI7XHJcblxyXG4gIGV4cG9ydCBsZXQgbmV4dDtcclxuXHJcbiAgY29uc3QgeyB0IH0gPSB3aW5kb3cubmVyZWlkLmkxOG47XHJcblxyXG4gIGFzeW5jIGZ1bmN0aW9uIGdvb2RieWUoKSB7XHJcbiAgICBhd2FpdCBuZXh0KCk7XHJcbiAgICBhd2FpdCBuZXJlaWQudmlldy5sZWF2ZUZ1bGxXaW5kb3dWaWV3KClcclxuICAgIHdpbmRvdy5sb2NhdGlvbiA9ICduZXJlaWQ6Ly9uZXd0YWInXHJcbiAgfVxyXG48L3NjcmlwdD5cclxuXHJcbjxkaXYgY2xhc3M9XCJjZW50ZXJcIiBpbjpzY2FsZT17eyBzdGFydDogMC44LCBkdXJhdGlvbjogMjAwIH19PlxyXG4gIDxkaXYgY2xhc3M9XCJjb250ZW50XCI+XHJcbiAgICA8VGV4dEJsb2NrIHZhcmlhbnQ9XCJkaXNwbGF5XCIgc3R5bGU9XCJtYXJnaW4tYm90dG9tOiA1MHB4O1wiPlxyXG4gICAgICB7dCgncGFnZXMud2VsY29tZS5maW5hbC5tZXNzYWdlJyl9XHJcbiAgICA8L1RleHRCbG9jaz48YnI+XHJcbiAgICA8QnV0dG9uIHZhcmlhbnQ9XCJoeXBlcmxpbmtcIiBvbjpjbGljaz17Z29vZGJ5ZX0+e3QoJ3BhZ2VzLndlbGNvbWUuZmluYWwubW90aXZhdGlvbmFsQnV0dG9uJyl9PC9CdXR0b24+XHJcbiAgPC9kaXY+XHJcbjwvZGl2PiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFDRSxPQUFPLGVBQUMsQ0FBQyxBQUNQLE9BQU8sQ0FBRSxJQUFJLENBQ2IsZUFBZSxDQUFFLE1BQU0sQ0FDdkIsV0FBVyxDQUFFLE1BQU0sQ0FDbkIsTUFBTSxDQUFFLElBQUksQ0FDWixLQUFLLENBQUUsSUFBSSxDQUNYLFFBQVEsQ0FBRSxRQUFRLEFBQ3BCLENBQUMsQUFDRCxRQUFRLGVBQUMsQ0FBQyxBQUNSLE9BQU8sQ0FBRSxHQUFHLENBQ1osVUFBVSxDQUFFLE1BQU0sQUFDcEIsQ0FBQyJ9 */");
}

// (33:4) <TextBlock variant="display" style="margin-bottom: 50px;">
function create_default_slot_1(ctx) {
	let t0_value = /*t*/ ctx[0]('pages.welcome.final.message') + "";
	let t0;
	let t1;

	const block = {
		c: function create() {
			t0 = text(t0_value);
			t1 = space();
		},
		m: function mount(target, anchor) {
			insert_dev(target, t0, anchor);
			insert_dev(target, t1, anchor);
		},
		p: noop,
		d: function destroy(detaching) {
			if (detaching) detach_dev(t0);
			if (detaching) detach_dev(t1);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_default_slot_1.name,
		type: "slot",
		source: "(33:4) <TextBlock variant=\\\"display\\\" style=\\\"margin-bottom: 50px;\\\">",
		ctx
	});

	return block;
}

// (36:4) <Button variant="hyperlink" on:click={goodbye}>
function create_default_slot(ctx) {
	let t_1_value = /*t*/ ctx[0]('pages.welcome.final.motivationalButton') + "";
	let t_1;

	const block = {
		c: function create() {
			t_1 = text(t_1_value);
		},
		m: function mount(target, anchor) {
			insert_dev(target, t_1, anchor);
		},
		p: noop,
		d: function destroy(detaching) {
			if (detaching) detach_dev(t_1);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_default_slot.name,
		type: "slot",
		source: "(36:4) <Button variant=\\\"hyperlink\\\" on:click={goodbye}>",
		ctx
	});

	return block;
}

function create_fragment(ctx) {
	let div1;
	let div0;
	let textblock;
	let br;
	let t_1;
	let button;
	let div1_intro;
	let current;

	textblock = new TextBlock({
			props: {
				variant: "display",
				style: "margin-bottom: 50px;",
				$$slots: { default: [create_default_slot_1] },
				$$scope: { ctx }
			},
			$$inline: true
		});

	button = new Button({
			props: {
				variant: "hyperlink",
				$$slots: { default: [create_default_slot] },
				$$scope: { ctx }
			},
			$$inline: true
		});

	button.$on("click", /*goodbye*/ ctx[1]);

	const block = {
		c: function create() {
			div1 = element("div");
			div0 = element("div");
			create_component(textblock.$$.fragment);
			br = element("br");
			t_1 = space();
			create_component(button.$$.fragment);
			add_location(br, file, 34, 16, 776);
			attr_dev(div0, "class", "content svelte-1oadws8");
			add_location(div0, file, 31, 2, 631);
			attr_dev(div1, "class", "center svelte-1oadws8");
			add_location(div1, file, 30, 0, 566);
		},
		l: function claim(nodes) {
			throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option");
		},
		m: function mount(target, anchor) {
			insert_dev(target, div1, anchor);
			append_dev(div1, div0);
			mount_component(textblock, div0, null);
			append_dev(div0, br);
			append_dev(div0, t_1);
			mount_component(button, div0, null);
			current = true;
		},
		p: function update(ctx, [dirty]) {
			const textblock_changes = {};

			if (dirty & /*$$scope*/ 8) {
				textblock_changes.$$scope = { dirty, ctx };
			}

			textblock.$set(textblock_changes);
			const button_changes = {};

			if (dirty & /*$$scope*/ 8) {
				button_changes.$$scope = { dirty, ctx };
			}

			button.$set(button_changes);
		},
		i: function intro(local) {
			if (current) return;
			transition_in(textblock.$$.fragment, local);
			transition_in(button.$$.fragment, local);

			if (!div1_intro) {
				add_render_callback(() => {
					div1_intro = create_in_transition(div1, scale, { start: 0.8, duration: 200 });
					div1_intro.start();
				});
			}

			current = true;
		},
		o: function outro(local) {
			transition_out(textblock.$$.fragment, local);
			transition_out(button.$$.fragment, local);
			current = false;
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(div1);
			destroy_component(textblock);
			destroy_component(button);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

function instance($$self, $$props, $$invalidate) {
	let { $$slots: slots = {}, $$scope } = $$props;
	validate_slots('YoureGoodToGo', slots, []);
	let { next } = $$props;
	const { t } = window.nereid.i18n;

	async function goodbye() {
		await next();
		await nereid.view.leaveFullWindowView();
		window.location = 'nereid://newtab';
	}

	const writable_props = ['next'];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== '$$' && key !== 'slot') console.warn(`<YoureGoodToGo> was created with unknown prop '${key}'`);
	});

	$$self.$$set = $$props => {
		if ('next' in $$props) $$invalidate(2, next = $$props.next);
	};

	$$self.$capture_state = () => ({
		Button,
		TextBlock,
		scale,
		next,
		t,
		goodbye
	});

	$$self.$inject_state = $$props => {
		if ('next' in $$props) $$invalidate(2, next = $$props.next);
	};

	if ($$props && "$$inject" in $$props) {
		$$self.$inject_state($$props.$$inject);
	}

	return [t, goodbye, next];
}

class YoureGoodToGo extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance, create_fragment, safe_not_equal, { next: 2 }, add_css);

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "YoureGoodToGo",
			options,
			id: create_fragment.name
		});

		const { ctx } = this.$$;
		const props = options.props || {};

		if (/*next*/ ctx[2] === undefined && !('next' in props)) {
			console.warn("<YoureGoodToGo> was created without expected prop 'next'");
		}
	}

	get next() {
		throw new Error("<YoureGoodToGo>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set next(value) {
		throw new Error("<YoureGoodToGo>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}
}

export default YoureGoodToGo;