/* about.svelte generated by Svelte v3.48.0 */
import {
	SvelteComponentDev,
	add_location,
	append_dev,
	append_styles,
	attr_dev,
	create_component,
	destroy_component,
	detach_dev,
	dispatch_dev,
	element,
	init,
	insert_dev,
	listen_dev,
	mount_component,
	noop,
	run_all,
	safe_not_equal,
	space,
	src_url_equal,
	text,
	transition_in,
	transition_out,
	validate_slots
} from "nereid://.svelte/internal/index.mjs";

import Header from "./common/Header.svelte.js";
import * as Icons from "./icons.js";
import { Expander } from "./modules/fluent-svelte/index.js";
const file = "about.svelte";

function add_css(target) {
	append_styles(target, "svelte-1r6w7vw", ".head.svelte-1r6w7vw{padding-inline:20px}.scaled-logo.svelte-1r6w7vw{transform:scale(0.8);display:flex;justify-content:center;user-select:none}section.svelte-1r6w7vw{background:var(--fds-solid-background-base);padding-block:20px;padding-inline:20%}h2.svelte-1r6w7vw{text-align:center}td.svelte-1r6w7vw{padding-right:12px}.licenses.svelte-1r6w7vw{text-align:center}.otherlicenses.svelte-1r6w7vw{padding-inline:20%;margin-bottom:40px}pre.svelte-1r6w7vw{user-select:text}\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */");
}

// (62:2) <Header name="about">
function create_default_slot_7(ctx) {
	let icons_about;
	let current;
	icons_about = new Icons.About({ $$inline: true });

	const block = {
		c: function create() {
			create_component(icons_about.$$.fragment);
		},
		m: function mount(target, anchor) {
			mount_component(icons_about, target, anchor);
			current = true;
		},
		i: function intro(local) {
			if (current) return;
			transition_in(icons_about.$$.fragment, local);
			current = true;
		},
		o: function outro(local) {
			transition_out(icons_about.$$.fragment, local);
			current = false;
		},
		d: function destroy(detaching) {
			destroy_component(icons_about, detaching);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_default_slot_7.name,
		type: "slot",
		source: "(62:2) <Header name=\\\"about\\\">",
		ctx
	});

	return block;
}

// (114:2) <Expander>
function create_default_slot_6(ctx) {
	let t_1;

	const block = {
		c: function create() {
			t_1 = text("Svelte");
		},
		m: function mount(target, anchor) {
			insert_dev(target, t_1, anchor);
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(t_1);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_default_slot_6.name,
		type: "slot",
		source: "(114:2) <Expander>",
		ctx
	});

	return block;
}

// (116:4) <svelte:fragment slot="content">
function create_content_slot_6(ctx) {
	let pre;

	const block = {
		c: function create() {
			pre = element("pre");
			pre.textContent = "Copyright (c) 2016-22 [these people](https://github.com/sveltejs/svelte/graphs/contributors)\r\n\r\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\r\n\r\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n      ";
			attr_dev(pre, "class", "svelte-1r6w7vw");
			add_location(pre, file, 116, 6, 2820);
		},
		m: function mount(target, anchor) {
			insert_dev(target, pre, anchor);
		},
		p: noop,
		d: function destroy(detaching) {
			if (detaching) detach_dev(pre);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_content_slot_6.name,
		type: "slot",
		source: "(116:4) <svelte:fragment slot=\\\"content\\\">",
		ctx
	});

	return block;
}

// (128:2) <Expander>
function create_default_slot_5(ctx) {
	let t_1;

	const block = {
		c: function create() {
			t_1 = text("argv-parse");
		},
		m: function mount(target, anchor) {
			insert_dev(target, t_1, anchor);
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(t_1);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_default_slot_5.name,
		type: "slot",
		source: "(128:2) <Expander>",
		ctx
	});

	return block;
}

// (130:4) <svelte:fragment slot="content">
function create_content_slot_5(ctx) {
	let pre;

	const block = {
		c: function create() {
			pre = element("pre");
			pre.textContent = "Copyright (c) 2016, Paul C Pederson <paul.c.pederson@gmail.com>\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any purpose with or without fee is hereby granted, provided that the above copyright notice and this permission notice appear in all copies.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\r\n      ";
			attr_dev(pre, "class", "svelte-1r6w7vw");
			add_location(pre, file, 130, 6, 4078);
		},
		m: function mount(target, anchor) {
			insert_dev(target, pre, anchor);
		},
		p: noop,
		d: function destroy(detaching) {
			if (detaching) detach_dev(pre);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_content_slot_5.name,
		type: "slot",
		source: "(130:4) <svelte:fragment slot=\\\"content\\\">",
		ctx
	});

	return block;
}

// (140:2) <Expander>
function create_default_slot_4(ctx) {
	let t_1;

	const block = {
		c: function create() {
			t_1 = text("fs-extra");
		},
		m: function mount(target, anchor) {
			insert_dev(target, t_1, anchor);
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(t_1);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_default_slot_4.name,
		type: "slot",
		source: "(140:2) <Expander>",
		ctx
	});

	return block;
}

// (142:4) <svelte:fragment slot="content">
function create_content_slot_4(ctx) {
	let pre;

	const block = {
		c: function create() {
			pre = element("pre");
			pre.textContent = "(The MIT License)\r\n\r\nCopyright (c) 2011-2017 JP Richardson\r\n\r\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files\r\n(the 'Software'), to deal in the Software without restriction, including without limitation the rights to use, copy, modify,\r\n merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is\r\n furnished to do so, subject to the following conditions:\r\n\r\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\r\n\r\nTHE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE\r\nWARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS\r\nOR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,\r\n ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n";
			attr_dev(pre, "class", "svelte-1r6w7vw");
			add_location(pre, file, 142, 6, 4983);
		},
		m: function mount(target, anchor) {
			insert_dev(target, pre, anchor);
		},
		p: noop,
		d: function destroy(detaching) {
			if (detaching) detach_dev(pre);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_content_slot_4.name,
		type: "slot",
		source: "(142:4) <svelte:fragment slot=\\\"content\\\">",
		ctx
	});

	return block;
}

// (162:2) <Expander>
function create_default_slot_3(ctx) {
	let t_1;

	const block = {
		c: function create() {
			t_1 = text("fuse.js");
		},
		m: function mount(target, anchor) {
			insert_dev(target, t_1, anchor);
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(t_1);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_default_slot_3.name,
		type: "slot",
		source: "(162:2) <Expander>",
		ctx
	});

	return block;
}

// (164:4) <svelte:fragment slot="content">
function create_content_slot_3(ctx) {
	let pre;

	const block = {
		c: function create() {
			pre = element("pre");

			pre.textContent = `                                 Apache License
                           Version 2.0, January 2004
                        http://www.apache.org/licenses/

   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION

   1. Definitions.

      "License" shall mean the terms and conditions for use, reproduction,
      and distribution as defined by Sections 1 through 9 of this document.

      "Licensor" shall mean the copyright owner or entity authorized by
      the copyright owner that is granting the License.

      "Legal Entity" shall mean the union of the acting entity and all
      other entities that control, are controlled by, or are under common
      control with that entity. For the purposes of this definition,
      "control" means (i) the power, direct or indirect, to cause the
      direction or management of such entity, whether by contract or
      otherwise, or (ii) ownership of fifty percent (50%) or more of the
      outstanding shares, or (iii) beneficial ownership of such entity.

      "You" (or "Your") shall mean an individual or Legal Entity
      exercising permissions granted by this License.

      "Source" form shall mean the preferred form for making modifications,
      including but not limited to software source code, documentation
      source, and configuration files.

      "Object" form shall mean any form resulting from mechanical
      transformation or translation of a Source form, including but
      not limited to compiled object code, generated documentation,
      and conversions to other media types.

      "Work" shall mean the work of authorship, whether in Source or
      Object form, made available under the License, as indicated by a
      copyright notice that is included in or attached to the work
      (an example is provided in the Appendix below).

      "Derivative Works" shall mean any work, whether in Source or Object
      form, that is based on (or derived from) the Work and for which the
      editorial revisions, annotations, elaborations, or other modifications
      represent, as a whole, an original work of authorship. For the purposes
      of this License, Derivative Works shall not include works that remain
      separable from, or merely link (or bind by name) to the interfaces of,
      the Work and Derivative Works thereof.

      "Contribution" shall mean any work of authorship, including
      the original version of the Work and any modifications or additions
      to that Work or Derivative Works thereof, that is intentionally
      submitted to Licensor for inclusion in the Work by the copyright owner
      or by an individual or Legal Entity authorized to submit on behalf of
      the copyright owner. For the purposes of this definition, "submitted"
      means any form of electronic, verbal, or written communication sent
      to the Licensor or its representatives, including but not limited to
      communication on electronic mailing lists, source code control systems,
      and issue tracking systems that are managed by, or on behalf of, the
      Licensor for the purpose of discussing and improving the Work, but
      excluding communication that is conspicuously marked or otherwise
      designated in writing by the copyright owner as "Not a Contribution."

      "Contributor" shall mean Licensor and any individual or Legal Entity
      on behalf of whom a Contribution has been received by Licensor and
      subsequently incorporated within the Work.

   2. Grant of Copyright License. Subject to the terms and conditions of
      this License, each Contributor hereby grants to You a perpetual,
      worldwide, non-exclusive, no-charge, royalty-free, irrevocable
      copyright license to reproduce, prepare Derivative Works of,
      publicly display, publicly perform, sublicense, and distribute the
      Work and such Derivative Works in Source or Object form.

   3. Grant of Patent License. Subject to the terms and conditions of
      this License, each Contributor hereby grants to You a perpetual,
      worldwide, non-exclusive, no-charge, royalty-free, irrevocable
      (except as stated in this section) patent license to make, have made,
      use, offer to sell, sell, import, and otherwise transfer the Work,
      where such license applies only to those patent claims licensable
      by such Contributor that are necessarily infringed by their
      Contribution(s) alone or by combination of their Contribution(s)
      with the Work to which such Contribution(s) was submitted. If You
      institute patent litigation against any entity (including a
      cross-claim or counterclaim in a lawsuit) alleging that the Work
      or a Contribution incorporated within the Work constitutes direct
      or contributory patent infringement, then any patent licenses
      granted to You under this License for that Work shall terminate
      as of the date such litigation is filed.

   4. Redistribution. You may reproduce and distribute copies of the
      Work or Derivative Works thereof in any medium, with or without
      modifications, and in Source or Object form, provided that You
      meet the following conditions:

      (a) You must give any other recipients of the Work or
          Derivative Works a copy of this License; and

      (b) You must cause any modified files to carry prominent notices
          stating that You changed the files; and

      (c) You must retain, in the Source form of any Derivative Works
          that You distribute, all copyright, patent, trademark, and
          attribution notices from the Source form of the Work,
          excluding those notices that do not pertain to any part of
          the Derivative Works; and

      (d) If the Work includes a "NOTICE" text file as part of its
          distribution, then any Derivative Works that You distribute must
          include a readable copy of the attribution notices contained
          within such NOTICE file, excluding those notices that do not
          pertain to any part of the Derivative Works, in at least one
          of the following places: within a NOTICE text file distributed
          as part of the Derivative Works; within the Source form or
          documentation, if provided along with the Derivative Works; or,
          within a display generated by the Derivative Works, if and
          wherever such third-party notices normally appear. The contents
          of the NOTICE file are for informational purposes only and
          do not modify the License. You may add Your own attribution
          notices within Derivative Works that You distribute, alongside
          or as an addendum to the NOTICE text from the Work, provided
          that such additional attribution notices cannot be construed
          as modifying the License.

      You may add Your own copyright statement to Your modifications and
      may provide additional or different license terms and conditions
      for use, reproduction, or distribution of Your modifications, or
      for any such Derivative Works as a whole, provided Your use,
      reproduction, and distribution of the Work otherwise complies with
      the conditions stated in this License.

   5. Submission of Contributions. Unless You explicitly state otherwise,
      any Contribution intentionally submitted for inclusion in the Work
      by You to the Licensor shall be under the terms and conditions of
      this License, without any additional terms or conditions.
      Notwithstanding the above, nothing herein shall supersede or modify
      the terms of any separate license agreement you may have executed
      with Licensor regarding such Contributions.

   6. Trademarks. This License does not grant permission to use the trade
      names, trademarks, service marks, or product names of the Licensor,
      except as required for reasonable and customary use in describing the
      origin of the Work and reproducing the content of the NOTICE file.

   7. Disclaimer of Warranty. Unless required by applicable law or
      agreed to in writing, Licensor provides the Work (and each
      Contributor provides its Contributions) on an "AS IS" BASIS,
      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
      implied, including, without limitation, any warranties or conditions
      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A
      PARTICULAR PURPOSE. You are solely responsible for determining the
      appropriateness of using or redistributing the Work and assume any
      risks associated with Your exercise of permissions under this License.

   8. Limitation of Liability. In no event and under no legal theory,
      whether in tort (including negligence), contract, or otherwise,
      unless required by applicable law (such as deliberate and grossly
      negligent acts) or agreed to in writing, shall any Contributor be
      liable to You for damages, including any direct, indirect, special,
      incidental, or consequential damages of any character arising as a
      result of this License or out of the use or inability to use the
      Work (including but not limited to damages for loss of goodwill,
      work stoppage, computer failure or malfunction, or any and all
      other commercial damages or losses), even if such Contributor
      has been advised of the possibility of such damages.

   9. Accepting Warranty or Additional Liability. While redistributing
      the Work or Derivative Works thereof, You may choose to offer,
      and charge a fee for, acceptance of support, warranty, indemnity,
      or other liability obligations and/or rights consistent with this
      License. However, in accepting such obligations, You may act only
      on Your own behalf and on Your sole responsibility, not on behalf
      of any other Contributor, and only if You agree to indemnify,
      defend, and hold each Contributor harmless for any liability
      incurred by, or claims asserted against, such Contributor by reason
      of your accepting any such warranty or additional liability.

   END OF TERMS AND CONDITIONS

   APPENDIX: How to apply the Apache License to your work.

      To apply the Apache License to your work, attach the following
      boilerplate notice, with the fields enclosed by brackets "${'{}'}"
      replaced with your own identifying information. (Don't include
      the brackets!)  The text should be enclosed in the appropriate
      comment syntax for the file format. We also recommend that a
      file or class name and description of purpose be included on the
      same "printed page" as the copyright notice for easier
      identification within third-party archives.

   Copyright 2017 Kirollos Risk

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
`;

			attr_dev(pre, "class", "svelte-1r6w7vw");
			add_location(pre, file, 164, 6, 6207);
		},
		m: function mount(target, anchor) {
			insert_dev(target, pre, anchor);
		},
		p: noop,
		d: function destroy(detaching) {
			if (detaching) detach_dev(pre);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_content_slot_3.name,
		type: "slot",
		source: "(164:4) <svelte:fragment slot=\\\"content\\\">",
		ctx
	});

	return block;
}

// (370:2) <Expander>
function create_default_slot_2(ctx) {
	let t_1;

	const block = {
		c: function create() {
			t_1 = text("i18next");
		},
		m: function mount(target, anchor) {
			insert_dev(target, t_1, anchor);
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(t_1);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_default_slot_2.name,
		type: "slot",
		source: "(370:2) <Expander>",
		ctx
	});

	return block;
}

// (372:4) <svelte:fragment slot="content">
function create_content_slot_2(ctx) {
	let pre;

	const block = {
		c: function create() {
			pre = element("pre");
			pre.textContent = "The MIT License (MIT)\r\n\r\nCopyright (c) 2022 i18next\r\n\r\nPermission is hereby granted, free of charge, to any person obtaining a copy\r\nof this software and associated documentation files (the \"Software\"), to deal\r\nin the Software without restriction, including without limitation the rights\r\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\ncopies of the Software, and to permit persons to whom the Software is\r\nfurnished to do so, subject to the following conditions:\r\n\r\nThe above copyright notice and this permission notice shall be included in all\r\ncopies or substantial portions of the Software.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\nSOFTWARE.\r\n";
			attr_dev(pre, "class", "svelte-1r6w7vw");
			add_location(pre, file, 372, 6, 17880);
		},
		m: function mount(target, anchor) {
			insert_dev(target, pre, anchor);
		},
		p: noop,
		d: function destroy(detaching) {
			if (detaching) detach_dev(pre);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_content_slot_2.name,
		type: "slot",
		source: "(372:4) <svelte:fragment slot=\\\"content\\\">",
		ctx
	});

	return block;
}

// (398:2) <Expander>
function create_default_slot_1(ctx) {
	let t_1;

	const block = {
		c: function create() {
			t_1 = text("JSON5");
		},
		m: function mount(target, anchor) {
			insert_dev(target, t_1, anchor);
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(t_1);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_default_slot_1.name,
		type: "slot",
		source: "(398:2) <Expander>",
		ctx
	});

	return block;
}

// (400:4) <svelte:fragment slot="content">
function create_content_slot_1(ctx) {
	let pre;

	const block = {
		c: function create() {
			pre = element("pre");
			pre.textContent = "MIT License\r\n\r\nCopyright (c) 2012-2018 Aseem Kishore, and [others].\r\n\r\nPermission is hereby granted, free of charge, to any person obtaining a copy\r\nof this software and associated documentation files (the \"Software\"), to deal\r\nin the Software without restriction, including without limitation the rights\r\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\ncopies of the Software, and to permit persons to whom the Software is\r\nfurnished to do so, subject to the following conditions:\r\n\r\nThe above copyright notice and this permission notice shall be included in all\r\ncopies or substantial portions of the Software.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\nSOFTWARE.\r\n\r\n[others]: https://github.com/json5/json5/contributors\r\n";
			attr_dev(pre, "class", "svelte-1r6w7vw");
			add_location(pre, file, 400, 6, 19098);
		},
		m: function mount(target, anchor) {
			insert_dev(target, pre, anchor);
		},
		p: noop,
		d: function destroy(detaching) {
			if (detaching) detach_dev(pre);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_content_slot_1.name,
		type: "slot",
		source: "(400:4) <svelte:fragment slot=\\\"content\\\">",
		ctx
	});

	return block;
}

// (428:2) <Expander>
function create_default_slot(ctx) {
	let t_1;

	const block = {
		c: function create() {
			t_1 = text("ISO-639-1 (npm package)");
		},
		m: function mount(target, anchor) {
			insert_dev(target, t_1, anchor);
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(t_1);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_default_slot.name,
		type: "slot",
		source: "(428:2) <Expander>",
		ctx
	});

	return block;
}

// (430:4) <svelte:fragment slot="content">
function create_content_slot(ctx) {
	let pre;

	const block = {
		c: function create() {
			pre = element("pre");
			pre.textContent = "This software is licensed under the MIT License.\r\n\r\nCopyright(c) by Mei Qingguang\r\n\r\nPermission is hereby granted, free of charge, to any person obtaining a copy\r\nof this software and associated documentation files (the \"Software\"), to deal\r\nin the Software without restriction, including without limitation the rights\r\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\ncopies of the Software, and to permit persons to whom the Software is\r\nfurnished to do so, subject to the following conditions:\r\n\r\nThe above copyright notice and this permission notice shall be included in\r\nall copies or substantial portions of the Software.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\nTHE SOFTWARE.\r\n";
			attr_dev(pre, "class", "svelte-1r6w7vw");
			add_location(pre, file, 430, 6, 20407);
		},
		m: function mount(target, anchor) {
			insert_dev(target, pre, anchor);
		},
		p: noop,
		d: function destroy(detaching) {
			if (detaching) detach_dev(pre);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_content_slot.name,
		type: "slot",
		source: "(430:4) <svelte:fragment slot=\\\"content\\\">",
		ctx
	});

	return block;
}

function create_fragment(ctx) {
	let title_value;
	let t0;
	let div0;
	let header;
	let t1;
	let div1;
	let img0;
	let img0_src_value;
	let t2;
	let img1;
	let img1_src_value;
	let t3;
	let h2;
	let t5;
	let section0;
	let b0;
	let t7;
	let ul;
	let li0;
	let t10;
	let li1;
	let t13;
	let li2;
	let t16;
	let br0;
	let t17;
	let table;
	let tr0;
	let td0;
	let t19;
	let td1;
	let b1;
	let t21;
	let tr1;
	let td2;
	let t23;
	let td3;
	let b2;
	let t25;
	let tr2;
	let td4;
	let t27;
	let td5;
	let b3;
	let t29;
	let div2;
	let p0;
	let i;

	let raw_value = /*tt*/ ctx[1]('FOSSNotice', {
		electron: `<a target="_blank" href="https://electronjs.org">Electron</a>`,
		chromium: `<a target="_blank" href="https://chromium.org">Chromium</a>`,
		escapeValue: false
	}) + "";

	let t30;
	let a0;
	let t31_value = /*tt*/ ctx[1]('licenses.electron') + "";
	let t31;
	let br1;
	let t32;
	let a1;
	let t33_value = /*tt*/ ctx[1]('licenses.chromium') + "";
	let t33;
	let t34;
	let div3;
	let h3;
	let t36;
	let expander0;
	let t37;
	let expander1;
	let t38;
	let expander2;
	let t39;
	let expander3;
	let t40;
	let expander4;
	let t41;
	let expander5;
	let t42;
	let expander6;
	let t43;
	let section1;
	let p1;
	let t44;
	let a2;
	let br2;
	let t46;
	let a3;
	let current;
	let mounted;
	let dispose;
	document.title = title_value = /*t*/ ctx[0]('common.about');

	header = new Header({
			props: {
				name: "about",
				$$slots: { default: [create_default_slot_7] },
				$$scope: { ctx }
			},
			$$inline: true
		});

	expander0 = new Expander({
			props: {
				$$slots: {
					content: [create_content_slot_6],
					default: [create_default_slot_6]
				},
				$$scope: { ctx }
			},
			$$inline: true
		});

	expander1 = new Expander({
			props: {
				$$slots: {
					content: [create_content_slot_5],
					default: [create_default_slot_5]
				},
				$$scope: { ctx }
			},
			$$inline: true
		});

	expander2 = new Expander({
			props: {
				$$slots: {
					content: [create_content_slot_4],
					default: [create_default_slot_4]
				},
				$$scope: { ctx }
			},
			$$inline: true
		});

	expander3 = new Expander({
			props: {
				$$slots: {
					content: [create_content_slot_3],
					default: [create_default_slot_3]
				},
				$$scope: { ctx }
			},
			$$inline: true
		});

	expander4 = new Expander({
			props: {
				$$slots: {
					content: [create_content_slot_2],
					default: [create_default_slot_2]
				},
				$$scope: { ctx }
			},
			$$inline: true
		});

	expander5 = new Expander({
			props: {
				$$slots: {
					content: [create_content_slot_1],
					default: [create_default_slot_1]
				},
				$$scope: { ctx }
			},
			$$inline: true
		});

	expander6 = new Expander({
			props: {
				$$slots: {
					content: [create_content_slot],
					default: [create_default_slot]
				},
				$$scope: { ctx }
			},
			$$inline: true
		});

	const block = {
		c: function create() {
			t0 = space();
			div0 = element("div");
			create_component(header.$$.fragment);
			t1 = space();
			div1 = element("div");
			img0 = element("img");
			t2 = space();
			img1 = element("img");
			t3 = space();
			h2 = element("h2");

			h2.textContent = `${/*tt*/ ctx[1]('nereidVersion', {
				version: /*about*/ ctx[2].versions.nereid
			})}`;

			t5 = space();
			section0 = element("section");
			b0 = element("b");
			b0.textContent = `${/*tt*/ ctx[1]('otherVersions')}`;
			t7 = space();
			ul = element("ul");
			li0 = element("li");
			li0.textContent = `Electron: ${/*about*/ ctx[2].versions.electron}`;
			t10 = space();
			li1 = element("li");
			li1.textContent = `Chromium: ${/*about*/ ctx[2].versions.chrome}`;
			t13 = space();
			li2 = element("li");
			li2.textContent = `Node.js: ${/*about*/ ctx[2].versions.node}`;
			t16 = space();
			br0 = element("br");
			t17 = space();
			table = element("table");
			tr0 = element("tr");
			td0 = element("td");
			td0.textContent = `${/*tt*/ ctx[1]('paths.userData')}`;
			t19 = space();
			td1 = element("td");
			b1 = element("b");
			b1.textContent = `${/*about*/ ctx[2].paths.userData}`;
			t21 = space();
			tr1 = element("tr");
			td2 = element("td");
			td2.textContent = `${/*tt*/ ctx[1]('paths.app')}`;
			t23 = space();
			td3 = element("td");
			b2 = element("b");
			b2.textContent = `${/*about*/ ctx[2].paths.appPath}`;
			t25 = space();
			tr2 = element("tr");
			td4 = element("td");
			td4.textContent = `${/*tt*/ ctx[1]('paths.cache')}`;
			t27 = space();
			td5 = element("td");
			b3 = element("b");
			b3.textContent = `${/*about*/ ctx[2].paths.cache}`;
			t29 = space();
			div2 = element("div");
			p0 = element("p");
			i = element("i");
			t30 = space();
			a0 = element("a");
			t31 = text(t31_value);
			br1 = element("br");
			t32 = space();
			a1 = element("a");
			t33 = text(t33_value);
			t34 = space();
			div3 = element("div");
			h3 = element("h3");
			h3.textContent = `${/*tt*/ ctx[1]('otherLicenses')}`;
			t36 = space();
			create_component(expander0.$$.fragment);
			t37 = space();
			create_component(expander1.$$.fragment);
			t38 = space();
			create_component(expander2.$$.fragment);
			t39 = space();
			create_component(expander3.$$.fragment);
			t40 = space();
			create_component(expander4.$$.fragment);
			t41 = space();
			create_component(expander5.$$.fragment);
			t42 = space();
			create_component(expander6.$$.fragment);
			t43 = space();
			section1 = element("section");
			p1 = element("p");
			t44 = text("Copyright © 2022 ");
			a2 = element("a");
			a2.textContent = "wheezard";
			br2 = element("br");
			t46 = text("\r\n    Nereid's source code is available at ");
			a3 = element("a");
			a3.textContent = "https://github.com/wheezard/nereid";
			attr_dev(div0, "class", "head svelte-1r6w7vw");
			add_location(div0, file, 60, 0, 1300);
			if (!src_url_equal(img0.src, img0_src_value = "//res/n-icon.svg")) attr_dev(img0, "src", img0_src_value);
			attr_dev(img0, "alt", "");
			add_location(img0, file, 67, 2, 1418);
			if (!src_url_equal(img1.src, img1_src_value = "//res/n-logo.svg")) attr_dev(img1, "src", img1_src_value);
			attr_dev(img1, "alt", "");
			add_location(img1, file, 68, 2, 1459);
			attr_dev(div1, "class", "scaled-logo svelte-1r6w7vw");
			add_location(div1, file, 66, 0, 1389);
			attr_dev(h2, "class", "svelte-1r6w7vw");
			add_location(h2, file, 71, 0, 1508);
			add_location(b0, file, 76, 2, 1597);
			add_location(li0, file, 78, 4, 1639);
			add_location(li1, file, 79, 4, 1689);
			add_location(li2, file, 80, 4, 1737);
			add_location(ul, file, 77, 2, 1629);
			add_location(br0, file, 82, 2, 1789);
			attr_dev(td0, "class", "svelte-1r6w7vw");
			add_location(td0, file, 85, 6, 1822);
			add_location(b1, file, 86, 10, 1865);
			attr_dev(td1, "class", "svelte-1r6w7vw");
			add_location(td1, file, 86, 6, 1861);
			add_location(tr0, file, 84, 4, 1810);
			attr_dev(td2, "class", "svelte-1r6w7vw");
			add_location(td2, file, 89, 6, 1928);
			add_location(b2, file, 90, 10, 1966);
			attr_dev(td3, "class", "svelte-1r6w7vw");
			add_location(td3, file, 90, 6, 1962);
			add_location(tr1, file, 88, 4, 1916);
			attr_dev(td4, "class", "svelte-1r6w7vw");
			add_location(td4, file, 93, 6, 2028);
			add_location(b3, file, 94, 10, 2068);
			attr_dev(td5, "class", "svelte-1r6w7vw");
			add_location(td5, file, 94, 6, 2064);
			add_location(tr2, file, 92, 4, 2016);
			add_location(table, file, 83, 2, 1797);
			attr_dev(section0, "class", "svelte-1r6w7vw");
			add_location(section0, file, 75, 0, 1584);
			add_location(i, file, 100, 5, 2167);
			add_location(p0, file, 100, 2, 2164);
			attr_dev(a0, "href", /*electronLicense*/ ctx[3]);
			add_location(a0, file, 107, 2, 2415);
			add_location(br1, file, 107, 128, 2541);
			attr_dev(a1, "href", /*chromiumLicense*/ ctx[4]);
			add_location(a1, file, 108, 2, 2549);
			attr_dev(div2, "class", "licenses svelte-1r6w7vw");
			add_location(div2, file, 99, 0, 2138);
			add_location(h3, file, 112, 2, 2718);
			attr_dev(div3, "class", "otherlicenses svelte-1r6w7vw");
			add_location(div3, file, 111, 0, 2687);
			attr_dev(a2, "href", "https://github.com/wheezard");
			add_location(a2, file, 459, 26, 21655);
			add_location(br2, file, 459, 76, 21705);
			attr_dev(a3, "href", "https://github.com/wheezard/nereid");
			add_location(a3, file, 460, 41, 21752);
			attr_dev(p1, "align", "center");
			add_location(p1, file, 458, 2, 21609);
			attr_dev(section1, "class", "svelte-1r6w7vw");
			add_location(section1, file, 457, 0, 21596);
		},
		l: function claim(nodes) {
			throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option");
		},
		m: function mount(target, anchor) {
			insert_dev(target, t0, anchor);
			insert_dev(target, div0, anchor);
			mount_component(header, div0, null);
			insert_dev(target, t1, anchor);
			insert_dev(target, div1, anchor);
			append_dev(div1, img0);
			append_dev(div1, t2);
			append_dev(div1, img1);
			insert_dev(target, t3, anchor);
			insert_dev(target, h2, anchor);
			insert_dev(target, t5, anchor);
			insert_dev(target, section0, anchor);
			append_dev(section0, b0);
			append_dev(section0, t7);
			append_dev(section0, ul);
			append_dev(ul, li0);
			append_dev(ul, t10);
			append_dev(ul, li1);
			append_dev(ul, t13);
			append_dev(ul, li2);
			append_dev(section0, t16);
			append_dev(section0, br0);
			append_dev(section0, t17);
			append_dev(section0, table);
			append_dev(table, tr0);
			append_dev(tr0, td0);
			append_dev(tr0, t19);
			append_dev(tr0, td1);
			append_dev(td1, b1);
			append_dev(table, t21);
			append_dev(table, tr1);
			append_dev(tr1, td2);
			append_dev(tr1, t23);
			append_dev(tr1, td3);
			append_dev(td3, b2);
			append_dev(table, t25);
			append_dev(table, tr2);
			append_dev(tr2, td4);
			append_dev(tr2, t27);
			append_dev(tr2, td5);
			append_dev(td5, b3);
			insert_dev(target, t29, anchor);
			insert_dev(target, div2, anchor);
			append_dev(div2, p0);
			append_dev(p0, i);
			i.innerHTML = raw_value;
			append_dev(div2, t30);
			append_dev(div2, a0);
			append_dev(a0, t31);
			append_dev(div2, br1);
			append_dev(div2, t32);
			append_dev(div2, a1);
			append_dev(a1, t33);
			insert_dev(target, t34, anchor);
			insert_dev(target, div3, anchor);
			append_dev(div3, h3);
			append_dev(div3, t36);
			mount_component(expander0, div3, null);
			append_dev(div3, t37);
			mount_component(expander1, div3, null);
			append_dev(div3, t38);
			mount_component(expander2, div3, null);
			append_dev(div3, t39);
			mount_component(expander3, div3, null);
			append_dev(div3, t40);
			mount_component(expander4, div3, null);
			append_dev(div3, t41);
			mount_component(expander5, div3, null);
			append_dev(div3, t42);
			mount_component(expander6, div3, null);
			insert_dev(target, t43, anchor);
			insert_dev(target, section1, anchor);
			append_dev(section1, p1);
			append_dev(p1, t44);
			append_dev(p1, a2);
			append_dev(p1, br2);
			append_dev(p1, t46);
			append_dev(p1, a3);
			current = true;

			if (!mounted) {
				dispose = [
					listen_dev(a0, "click", openF(/*electronLicense*/ ctx[3]), false, false, false),
					listen_dev(a0, "auxclick", openF(/*electronLicense*/ ctx[3]), false, false, false),
					listen_dev(a1, "click", openF(/*chromiumLicense*/ ctx[4]), false, false, false),
					listen_dev(a1, "auxclick", openF(/*chromiumLicense*/ ctx[4]), false, false, false)
				];

				mounted = true;
			}
		},
		p: function update(ctx, [dirty]) {
			if ((!current || dirty & /*t*/ 1) && title_value !== (title_value = /*t*/ ctx[0]('common.about'))) {
				document.title = title_value;
			}

			const header_changes = {};

			if (dirty & /*$$scope*/ 64) {
				header_changes.$$scope = { dirty, ctx };
			}

			header.$set(header_changes);
			const expander0_changes = {};

			if (dirty & /*$$scope*/ 64) {
				expander0_changes.$$scope = { dirty, ctx };
			}

			expander0.$set(expander0_changes);
			const expander1_changes = {};

			if (dirty & /*$$scope*/ 64) {
				expander1_changes.$$scope = { dirty, ctx };
			}

			expander1.$set(expander1_changes);
			const expander2_changes = {};

			if (dirty & /*$$scope*/ 64) {
				expander2_changes.$$scope = { dirty, ctx };
			}

			expander2.$set(expander2_changes);
			const expander3_changes = {};

			if (dirty & /*$$scope*/ 64) {
				expander3_changes.$$scope = { dirty, ctx };
			}

			expander3.$set(expander3_changes);
			const expander4_changes = {};

			if (dirty & /*$$scope*/ 64) {
				expander4_changes.$$scope = { dirty, ctx };
			}

			expander4.$set(expander4_changes);
			const expander5_changes = {};

			if (dirty & /*$$scope*/ 64) {
				expander5_changes.$$scope = { dirty, ctx };
			}

			expander5.$set(expander5_changes);
			const expander6_changes = {};

			if (dirty & /*$$scope*/ 64) {
				expander6_changes.$$scope = { dirty, ctx };
			}

			expander6.$set(expander6_changes);
		},
		i: function intro(local) {
			if (current) return;
			transition_in(header.$$.fragment, local);
			transition_in(expander0.$$.fragment, local);
			transition_in(expander1.$$.fragment, local);
			transition_in(expander2.$$.fragment, local);
			transition_in(expander3.$$.fragment, local);
			transition_in(expander4.$$.fragment, local);
			transition_in(expander5.$$.fragment, local);
			transition_in(expander6.$$.fragment, local);
			current = true;
		},
		o: function outro(local) {
			transition_out(header.$$.fragment, local);
			transition_out(expander0.$$.fragment, local);
			transition_out(expander1.$$.fragment, local);
			transition_out(expander2.$$.fragment, local);
			transition_out(expander3.$$.fragment, local);
			transition_out(expander4.$$.fragment, local);
			transition_out(expander5.$$.fragment, local);
			transition_out(expander6.$$.fragment, local);
			current = false;
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(t0);
			if (detaching) detach_dev(div0);
			destroy_component(header);
			if (detaching) detach_dev(t1);
			if (detaching) detach_dev(div1);
			if (detaching) detach_dev(t3);
			if (detaching) detach_dev(h2);
			if (detaching) detach_dev(t5);
			if (detaching) detach_dev(section0);
			if (detaching) detach_dev(t29);
			if (detaching) detach_dev(div2);
			if (detaching) detach_dev(t34);
			if (detaching) detach_dev(div3);
			destroy_component(expander0);
			destroy_component(expander1);
			destroy_component(expander2);
			destroy_component(expander3);
			destroy_component(expander4);
			destroy_component(expander5);
			destroy_component(expander6);
			if (detaching) detach_dev(t43);
			if (detaching) detach_dev(section1);
			mounted = false;
			run_all(dispose);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

function openF(url) {
	return function (e) {
		if (e.button == 2) return;
		window.nereid.tab.create(url);
	};
}

function instance($$self, $$props, $$invalidate) {
	let { $$slots: slots = {}, $$scope } = $$props;
	validate_slots('About', slots, []);
	const { t } = window.nereid.i18n;

	function tt(p, ...a) {
		return t(`pages.about.${p}`, ...a);
	}

	const about = window.nereid.app.about();
	const licensesPath = 'file://' + about.paths.exe.replaceAll('\\', '/').split('/').slice(0, -1).join('/');
	const electronLicense = licensesPath + '/LICENSE';
	const chromiumLicense = licensesPath + '/LICENSES.chromium.html';
	const writable_props = [];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== '$$' && key !== 'slot') console.warn(`<About> was created with unknown prop '${key}'`);
	});

	$$self.$capture_state = () => ({
		Header,
		Icons,
		Expander,
		t,
		tt,
		about,
		licensesPath,
		electronLicense,
		chromiumLicense,
		openF
	});

	return [t, tt, about, electronLicense, chromiumLicense];
}

class About extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance, create_fragment, safe_not_equal, {}, add_css);

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "About",
			options,
			id: create_fragment.name
		});
	}
}

export default About;