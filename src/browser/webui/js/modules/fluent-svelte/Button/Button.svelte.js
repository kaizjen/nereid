/* Button.svelte generated by Svelte v3.48.0 */
import {
	SvelteComponentDev,
	action_destroyer,
	add_location,
	append_styles,
	assign,
	binding_callbacks,
	compute_rest_props,
	create_slot,
	detach_dev,
	dispatch_dev,
	element as element_1,
	empty,
	exclude_internal_props,
	get_all_dirty_from_scope,
	get_slot_changes,
	get_spread_update,
	init,
	insert_dev,
	safe_not_equal,
	set_attributes,
	toggle_class,
	transition_in,
	transition_out,
	update_slot_base,
	validate_dynamic_element,
	validate_slots,
	validate_void_dynamic_element
} from "nereid://.svelte/internal/index.mjs";

import { get_current_component } from "nereid://.svelte/internal/index.mjs";
import { createEventForwarder } from "../internal.js";
const file = "Button.svelte";

function add_css(target) {
	append_styles(target, "svelte-1ulhukx", ".button.svelte-1ulhukx{align-items:center;border:none;border-radius:var(--fds-control-corner-radius);box-sizing:border-box;cursor:default;display:inline-flex;font-family:var(--fds-font-family-text);font-size:var(--fds-body-font-size);font-weight:400;justify-content:center;line-height:20px;outline:none;padding-block:4px 6px;padding-inline:11px;position:relative;text-decoration:none;transition:var(--fds-control-faster-duration) ease background;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.button.svelte-1ulhukx:focus-visible{box-shadow:var(--fds-focus-stroke)}.button.style-standard.svelte-1ulhukx{background-clip:padding-box;background-color:var(--fds-control-fill-default);border:1px solid;border-color:var(--fds-control-border-default);color:var(--fds-text-primary)}.button.style-standard.svelte-1ulhukx:hover{background-color:var(--fds-control-fill-secondary)}.button.style-standard.svelte-1ulhukx:active{background-color:var(--fds-control-fill-tertiary);border-color:var(--fds-control-stroke-default);color:var(--fds-text-secondary)}.button.style-standard.disabled.svelte-1ulhukx{background-color:var(--fds-control-fill-disabled);border-color:var(--fds-control-stroke-default);color:var(--fds-text-disabled)}.button.style-accent.svelte-1ulhukx{background-color:var(--fds-accent-default);border:1px solid var(--fds-control-stroke-on-accent-default);border-bottom-color:var(--fds-control-stroke-on-accent-secondary);color:var(--fds-text-on-accent-primary);transition:var(--fds-control-faster-duration) ease border-color}.button.style-accent.svelte-1ulhukx:hover{background-color:var(--fds-accent-secondary)}.button.style-accent.svelte-1ulhukx:active{background-color:var(--fds-accent-tertiary);border-color:transparent;color:var(--fds-text-on-accent-secondary)}.button.style-accent.disabled.svelte-1ulhukx{background-color:var(--fds-accent-disabled);border-color:transparent;color:var(--fds-text-on-accent-disabled)}.button.style-hyperlink.svelte-1ulhukx{background-color:var(--fds-subtle-fill-transparent);color:var(--fds-accent-text-primary);cursor:pointer}.button.style-hyperlink.svelte-1ulhukx:hover{background-color:var(--fds-subtle-fill-secondary)}.button.style-hyperlink.svelte-1ulhukx:active{background-color:var(--fds-subtle-fill-tertiary);color:var(--fds-accent-text-tertiary)}.button.style-hyperlink.disabled.svelte-1ulhukx{color:var(--fds-accent-text-disabled)}.button.disabled.svelte-1ulhukx{pointer-events:none}\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQnV0dG9uLnN2ZWx0ZSIsInNvdXJjZXMiOlsiQnV0dG9uLnN2ZWx0ZSJdLCJzb3VyY2VzQ29udGVudCI6WyI8c2NyaXB0ID5pbXBvcnQgeyBnZXRfY3VycmVudF9jb21wb25lbnQgfSBmcm9tIFwic3ZlbHRlL2ludGVybmFsXCI7XHJcbmltcG9ydCB7IGNyZWF0ZUV2ZW50Rm9yd2FyZGVyIH0gZnJvbSBcIi4uL2ludGVybmFsXCI7XHJcbi8qKiBAcmVzdFByb3BzIHtidXR0b24gfCBhfSAqL1xyXG4vKiogU3BlY2lmaWVzIHRoZSB2aXN1YWwgc3R5bGluZyBvZiB0aGUgYnV0dG9uLiAqL1xyXG5leHBvcnQgbGV0IHZhcmlhbnQgPSBcInN0YW5kYXJkXCI7XHJcbi8qKiBTZXRzIGFuIGhyZWYgdmFsdWUgYW5kIGNvbnZlcnRzIHRoZSBidXR0b24gZWxlbWVudCBpbnRvIGFuIGFuY2hvci8gKi9cclxuZXhwb3J0IGxldCBocmVmID0gXCJcIjtcclxuLyoqIENvbnRyb2xzIHdoZXRoZXIgdGhlIGJ1dHRvbiBpcyBpbnRlbmRlZCBmb3IgdXNlciBpbnRlcmFjdGlvbiwgYW5kIHN0eWxlcyBpdCBhY2NvcmRpbmdseS4gKi9cclxuZXhwb3J0IGxldCBkaXNhYmxlZCA9IGZhbHNlO1xyXG4vKiogU3BlY2lmaWVzIGEgY3VzdG9tIGNsYXNzIG5hbWUgZm9yIHRoZSBidXR0b24uICovXHJcbmxldCBjbGFzc05hbWUgPSBcIlwiO1xyXG5leHBvcnQgeyBjbGFzc05hbWUgYXMgY2xhc3MgfTtcclxuLyoqIE9idGFpbnMgYSBib3VuZCBET00gcmVmZXJlbmNlIHRvIHRoZSBidXR0b24gb3IgYW5jaG9yIGVsZW1lbnQuICovXHJcbmV4cG9ydCBsZXQgZWxlbWVudCA9IG51bGw7XHJcbmNvbnN0IGZvcndhcmRFdmVudHMgPSBjcmVhdGVFdmVudEZvcndhcmRlcihnZXRfY3VycmVudF9jb21wb25lbnQoKSk7XHJcbjwvc2NyaXB0PlxuXG48IS0tXG5AY29tcG9uZW50XG5BIGJ1dHRvbiBnaXZlcyB0aGUgdXNlciBhIHdheSB0byB0cmlnZ2VyIGFuIGltbWVkaWF0ZSBhY3Rpb24uIFNvbWUgYnV0dG9ucyBhcmUgc3BlY2lhbGl6ZWQgZm9yIHBhcnRpY3VsYXIgdGFza3MsIHN1Y2ggYXMgbmF2aWdhdGlvbiwgcmVwZWF0ZWQgYWN0aW9ucywgb3IgcHJlc2VudGluZyBtZW51cy4gW0RvY3NdKGh0dHBzOi8vZmx1ZW50LXN2ZWx0ZS52ZXJjZWwuYXBwL2RvY3MvY29tcG9uZW50cy9idXR0b24pXG4tIFVzYWdlOlxuICAgIGBgYHRzeFxuICAgIDxCdXR0b24+Q2xpY2sgbWUhPC9CdXR0b24+XG4gICAgYGBgXG4tLT5cbjxzdmVsdGU6ZWxlbWVudFxuXHR0aGlzPXtocmVmICYmICFkaXNhYmxlZCA/IFwiYVwiIDogXCJidXR0b25cIn1cblx0dXNlOmZvcndhcmRFdmVudHNcblx0YmluZDp0aGlzPXtlbGVtZW50fVxuXHRyb2xlPXtocmVmICYmICFkaXNhYmxlZCA/IFwiYnV0dG9uXCIgOiB1bmRlZmluZWR9XG5cdGhyZWY9e2hyZWYgJiYgIWRpc2FibGVkID8gaHJlZiA6IHVuZGVmaW5lZH1cblx0Y2xhc3M9XCJidXR0b24gc3R5bGUte3ZhcmlhbnR9IHtjbGFzc05hbWV9XCJcblx0Y2xhc3M6ZGlzYWJsZWRcblx0ey4uLiQkcmVzdFByb3BzfVxuPlxuXHQ8c2xvdCAvPlxuPC9zdmVsdGU6ZWxlbWVudD5cblxuPHN0eWxlID4uYnV0dG9ue2FsaWduLWl0ZW1zOmNlbnRlcjtib3JkZXI6bm9uZTtib3JkZXItcmFkaXVzOnZhcigtLWZkcy1jb250cm9sLWNvcm5lci1yYWRpdXMpO2JveC1zaXppbmc6Ym9yZGVyLWJveDtjdXJzb3I6ZGVmYXVsdDtkaXNwbGF5OmlubGluZS1mbGV4O2ZvbnQtZmFtaWx5OnZhcigtLWZkcy1mb250LWZhbWlseS10ZXh0KTtmb250LXNpemU6dmFyKC0tZmRzLWJvZHktZm9udC1zaXplKTtmb250LXdlaWdodDo0MDA7anVzdGlmeS1jb250ZW50OmNlbnRlcjtsaW5lLWhlaWdodDoyMHB4O291dGxpbmU6bm9uZTtwYWRkaW5nLWJsb2NrOjRweCA2cHg7cGFkZGluZy1pbmxpbmU6MTFweDtwb3NpdGlvbjpyZWxhdGl2ZTt0ZXh0LWRlY29yYXRpb246bm9uZTt0cmFuc2l0aW9uOnZhcigtLWZkcy1jb250cm9sLWZhc3Rlci1kdXJhdGlvbikgZWFzZSBiYWNrZ3JvdW5kOy13ZWJraXQtdXNlci1zZWxlY3Q6bm9uZTstbW96LXVzZXItc2VsZWN0Om5vbmU7LW1zLXVzZXItc2VsZWN0Om5vbmU7dXNlci1zZWxlY3Q6bm9uZX0uYnV0dG9uOmZvY3VzLXZpc2libGV7Ym94LXNoYWRvdzp2YXIoLS1mZHMtZm9jdXMtc3Ryb2tlKX0uYnV0dG9uLnN0eWxlLXN0YW5kYXJke2JhY2tncm91bmQtY2xpcDpwYWRkaW5nLWJveDtiYWNrZ3JvdW5kLWNvbG9yOnZhcigtLWZkcy1jb250cm9sLWZpbGwtZGVmYXVsdCk7Ym9yZGVyOjFweCBzb2xpZDtib3JkZXItY29sb3I6dmFyKC0tZmRzLWNvbnRyb2wtYm9yZGVyLWRlZmF1bHQpO2NvbG9yOnZhcigtLWZkcy10ZXh0LXByaW1hcnkpfS5idXR0b24uc3R5bGUtc3RhbmRhcmQ6aG92ZXJ7YmFja2dyb3VuZC1jb2xvcjp2YXIoLS1mZHMtY29udHJvbC1maWxsLXNlY29uZGFyeSl9LmJ1dHRvbi5zdHlsZS1zdGFuZGFyZDphY3RpdmV7YmFja2dyb3VuZC1jb2xvcjp2YXIoLS1mZHMtY29udHJvbC1maWxsLXRlcnRpYXJ5KTtib3JkZXItY29sb3I6dmFyKC0tZmRzLWNvbnRyb2wtc3Ryb2tlLWRlZmF1bHQpO2NvbG9yOnZhcigtLWZkcy10ZXh0LXNlY29uZGFyeSl9LmJ1dHRvbi5zdHlsZS1zdGFuZGFyZC5kaXNhYmxlZHtiYWNrZ3JvdW5kLWNvbG9yOnZhcigtLWZkcy1jb250cm9sLWZpbGwtZGlzYWJsZWQpO2JvcmRlci1jb2xvcjp2YXIoLS1mZHMtY29udHJvbC1zdHJva2UtZGVmYXVsdCk7Y29sb3I6dmFyKC0tZmRzLXRleHQtZGlzYWJsZWQpfS5idXR0b24uc3R5bGUtYWNjZW50e2JhY2tncm91bmQtY29sb3I6dmFyKC0tZmRzLWFjY2VudC1kZWZhdWx0KTtib3JkZXI6MXB4IHNvbGlkIHZhcigtLWZkcy1jb250cm9sLXN0cm9rZS1vbi1hY2NlbnQtZGVmYXVsdCk7Ym9yZGVyLWJvdHRvbS1jb2xvcjp2YXIoLS1mZHMtY29udHJvbC1zdHJva2Utb24tYWNjZW50LXNlY29uZGFyeSk7Y29sb3I6dmFyKC0tZmRzLXRleHQtb24tYWNjZW50LXByaW1hcnkpO3RyYW5zaXRpb246dmFyKC0tZmRzLWNvbnRyb2wtZmFzdGVyLWR1cmF0aW9uKSBlYXNlIGJvcmRlci1jb2xvcn0uYnV0dG9uLnN0eWxlLWFjY2VudDpob3ZlcntiYWNrZ3JvdW5kLWNvbG9yOnZhcigtLWZkcy1hY2NlbnQtc2Vjb25kYXJ5KX0uYnV0dG9uLnN0eWxlLWFjY2VudDphY3RpdmV7YmFja2dyb3VuZC1jb2xvcjp2YXIoLS1mZHMtYWNjZW50LXRlcnRpYXJ5KTtib3JkZXItY29sb3I6dHJhbnNwYXJlbnQ7Y29sb3I6dmFyKC0tZmRzLXRleHQtb24tYWNjZW50LXNlY29uZGFyeSl9LmJ1dHRvbi5zdHlsZS1hY2NlbnQuZGlzYWJsZWR7YmFja2dyb3VuZC1jb2xvcjp2YXIoLS1mZHMtYWNjZW50LWRpc2FibGVkKTtib3JkZXItY29sb3I6dHJhbnNwYXJlbnQ7Y29sb3I6dmFyKC0tZmRzLXRleHQtb24tYWNjZW50LWRpc2FibGVkKX0uYnV0dG9uLnN0eWxlLWh5cGVybGlua3tiYWNrZ3JvdW5kLWNvbG9yOnZhcigtLWZkcy1zdWJ0bGUtZmlsbC10cmFuc3BhcmVudCk7Y29sb3I6dmFyKC0tZmRzLWFjY2VudC10ZXh0LXByaW1hcnkpO2N1cnNvcjpwb2ludGVyfS5idXR0b24uc3R5bGUtaHlwZXJsaW5rOmhvdmVye2JhY2tncm91bmQtY29sb3I6dmFyKC0tZmRzLXN1YnRsZS1maWxsLXNlY29uZGFyeSl9LmJ1dHRvbi5zdHlsZS1oeXBlcmxpbms6YWN0aXZle2JhY2tncm91bmQtY29sb3I6dmFyKC0tZmRzLXN1YnRsZS1maWxsLXRlcnRpYXJ5KTtjb2xvcjp2YXIoLS1mZHMtYWNjZW50LXRleHQtdGVydGlhcnkpfS5idXR0b24uc3R5bGUtaHlwZXJsaW5rLmRpc2FibGVke2NvbG9yOnZhcigtLWZkcy1hY2NlbnQtdGV4dC1kaXNhYmxlZCl9LmJ1dHRvbi5kaXNhYmxlZHtwb2ludGVyLWV2ZW50czpub25lfTwvc3R5bGU+XG4iXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBc0NRLHNCQUFPLENBQUMsWUFBWSxNQUFNLENBQUMsT0FBTyxJQUFJLENBQUMsY0FBYyxJQUFJLDJCQUEyQixDQUFDLENBQUMsV0FBVyxVQUFVLENBQUMsT0FBTyxPQUFPLENBQUMsUUFBUSxXQUFXLENBQUMsWUFBWSxJQUFJLHNCQUFzQixDQUFDLENBQUMsVUFBVSxJQUFJLG9CQUFvQixDQUFDLENBQUMsWUFBWSxHQUFHLENBQUMsZ0JBQWdCLE1BQU0sQ0FBQyxZQUFZLElBQUksQ0FBQyxRQUFRLElBQUksQ0FBQyxjQUFjLEdBQUcsQ0FBQyxHQUFHLENBQUMsZUFBZSxJQUFJLENBQUMsU0FBUyxRQUFRLENBQUMsZ0JBQWdCLElBQUksQ0FBQyxXQUFXLElBQUksNkJBQTZCLENBQUMsQ0FBQyxJQUFJLENBQUMsVUFBVSxDQUFDLG9CQUFvQixJQUFJLENBQUMsaUJBQWlCLElBQUksQ0FBQyxnQkFBZ0IsSUFBSSxDQUFDLFlBQVksSUFBSSxDQUFDLHNCQUFPLGNBQWMsQ0FBQyxXQUFXLElBQUksa0JBQWtCLENBQUMsQ0FBQyxPQUFPLDhCQUFlLENBQUMsZ0JBQWdCLFdBQVcsQ0FBQyxpQkFBaUIsSUFBSSwwQkFBMEIsQ0FBQyxDQUFDLE9BQU8sR0FBRyxDQUFDLEtBQUssQ0FBQyxhQUFhLElBQUksNEJBQTRCLENBQUMsQ0FBQyxNQUFNLElBQUksa0JBQWtCLENBQUMsQ0FBQyxPQUFPLDhCQUFlLE1BQU0sQ0FBQyxpQkFBaUIsSUFBSSw0QkFBNEIsQ0FBQyxDQUFDLE9BQU8sOEJBQWUsT0FBTyxDQUFDLGlCQUFpQixJQUFJLDJCQUEyQixDQUFDLENBQUMsYUFBYSxJQUFJLDRCQUE0QixDQUFDLENBQUMsTUFBTSxJQUFJLG9CQUFvQixDQUFDLENBQUMsT0FBTyxlQUFlLHdCQUFTLENBQUMsaUJBQWlCLElBQUksMkJBQTJCLENBQUMsQ0FBQyxhQUFhLElBQUksNEJBQTRCLENBQUMsQ0FBQyxNQUFNLElBQUksbUJBQW1CLENBQUMsQ0FBQyxPQUFPLDRCQUFhLENBQUMsaUJBQWlCLElBQUksb0JBQW9CLENBQUMsQ0FBQyxPQUFPLEdBQUcsQ0FBQyxLQUFLLENBQUMsSUFBSSxzQ0FBc0MsQ0FBQyxDQUFDLG9CQUFvQixJQUFJLHdDQUF3QyxDQUFDLENBQUMsTUFBTSxJQUFJLDRCQUE0QixDQUFDLENBQUMsV0FBVyxJQUFJLDZCQUE2QixDQUFDLENBQUMsSUFBSSxDQUFDLFlBQVksQ0FBQyxPQUFPLDRCQUFhLE1BQU0sQ0FBQyxpQkFBaUIsSUFBSSxzQkFBc0IsQ0FBQyxDQUFDLE9BQU8sNEJBQWEsT0FBTyxDQUFDLGlCQUFpQixJQUFJLHFCQUFxQixDQUFDLENBQUMsYUFBYSxXQUFXLENBQUMsTUFBTSxJQUFJLDhCQUE4QixDQUFDLENBQUMsT0FBTyxhQUFhLHdCQUFTLENBQUMsaUJBQWlCLElBQUkscUJBQXFCLENBQUMsQ0FBQyxhQUFhLFdBQVcsQ0FBQyxNQUFNLElBQUksNkJBQTZCLENBQUMsQ0FBQyxPQUFPLCtCQUFnQixDQUFDLGlCQUFpQixJQUFJLDZCQUE2QixDQUFDLENBQUMsTUFBTSxJQUFJLHlCQUF5QixDQUFDLENBQUMsT0FBTyxPQUFPLENBQUMsT0FBTywrQkFBZ0IsTUFBTSxDQUFDLGlCQUFpQixJQUFJLDJCQUEyQixDQUFDLENBQUMsT0FBTywrQkFBZ0IsT0FBTyxDQUFDLGlCQUFpQixJQUFJLDBCQUEwQixDQUFDLENBQUMsTUFBTSxJQUFJLDBCQUEwQixDQUFDLENBQUMsT0FBTyxnQkFBZ0Isd0JBQVMsQ0FBQyxNQUFNLElBQUksMEJBQTBCLENBQUMsQ0FBQyxPQUFPLHdCQUFTLENBQUMsZUFBZSxJQUFJLENBQUMifQ== */");
}

// (26:0) <svelte:element  this={href && !disabled ? "a" : "button"}  use:forwardEvents  bind:this={element}  role={href && !disabled ? "button" : undefined}  href={href && !disabled ? href : undefined}  class="button style-{variant} {className}"  class:disabled  {...$$restProps} >
function create_dynamic_element(ctx) {
	let svelte_element;
	let svelte_element_role_value;
	let svelte_element_href_value;
	let svelte_element_class_value;
	let forwardEvents_action;
	let current;
	let mounted;
	let dispose;
	const default_slot_template = /*#slots*/ ctx[8].default;
	const default_slot = create_slot(default_slot_template, ctx, /*$$scope*/ ctx[7], null);

	let svelte_element_levels = [
		{
			role: svelte_element_role_value = /*href*/ ctx[2] && !/*disabled*/ ctx[3]
			? "button"
			: undefined
		},
		{
			href: svelte_element_href_value = /*href*/ ctx[2] && !/*disabled*/ ctx[3]
			? /*href*/ ctx[2]
			: undefined
		},
		{
			class: svelte_element_class_value = "button style-" + /*variant*/ ctx[1] + " " + /*className*/ ctx[4]
		},
		/*$$restProps*/ ctx[6]
	];

	let svelte_element_data = {};

	for (let i = 0; i < svelte_element_levels.length; i += 1) {
		svelte_element_data = assign(svelte_element_data, svelte_element_levels[i]);
	}

	const block = {
		c: function create() {
			svelte_element = element_1(/*href*/ ctx[2] && !/*disabled*/ ctx[3] ? "a" : "button");
			if (default_slot) default_slot.c();
			set_attributes(svelte_element, svelte_element_data);
			toggle_class(svelte_element, "disabled", /*disabled*/ ctx[3]);
			toggle_class(svelte_element, "svelte-1ulhukx", true);
			add_location(svelte_element, file, 25, 0, 1065);
		},
		m: function mount(target, anchor) {
			insert_dev(target, svelte_element, anchor);

			if (default_slot) {
				default_slot.m(svelte_element, null);
			}

			/*svelte_element_binding*/ ctx[9](svelte_element);
			current = true;

			if (!mounted) {
				dispose = action_destroyer(forwardEvents_action = /*forwardEvents*/ ctx[5].call(null, svelte_element));
				mounted = true;
			}
		},
		p: function update(ctx, dirty) {
			if (default_slot) {
				if (default_slot.p && (!current || dirty & /*$$scope*/ 128)) {
					update_slot_base(
						default_slot,
						default_slot_template,
						ctx,
						/*$$scope*/ ctx[7],
						!current
						? get_all_dirty_from_scope(/*$$scope*/ ctx[7])
						: get_slot_changes(default_slot_template, /*$$scope*/ ctx[7], dirty, null),
						null
					);
				}
			}

			set_attributes(svelte_element, svelte_element_data = get_spread_update(svelte_element_levels, [
				(!current || dirty & /*href, disabled*/ 12 && svelte_element_role_value !== (svelte_element_role_value = /*href*/ ctx[2] && !/*disabled*/ ctx[3]
				? "button"
				: undefined)) && { role: svelte_element_role_value },
				(!current || dirty & /*href, disabled*/ 12 && svelte_element_href_value !== (svelte_element_href_value = /*href*/ ctx[2] && !/*disabled*/ ctx[3]
				? /*href*/ ctx[2]
				: undefined)) && { href: svelte_element_href_value },
				(!current || dirty & /*variant, className*/ 18 && svelte_element_class_value !== (svelte_element_class_value = "button style-" + /*variant*/ ctx[1] + " " + /*className*/ ctx[4])) && { class: svelte_element_class_value },
				dirty & /*$$restProps*/ 64 && /*$$restProps*/ ctx[6]
			]));

			toggle_class(svelte_element, "disabled", /*disabled*/ ctx[3]);
			toggle_class(svelte_element, "svelte-1ulhukx", true);
		},
		i: function intro(local) {
			if (current) return;
			transition_in(default_slot, local);
			current = true;
		},
		o: function outro(local) {
			transition_out(default_slot, local);
			current = false;
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(svelte_element);
			if (default_slot) default_slot.d(detaching);
			/*svelte_element_binding*/ ctx[9](null);
			mounted = false;
			dispose();
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_dynamic_element.name,
		type: "child_dynamic_element",
		source: "(26:0) <svelte:element  this={href && !disabled ? \\\"a\\\" : \\\"button\\\"}  use:forwardEvents  bind:this={element}  role={href && !disabled ? \\\"button\\\" : undefined}  href={href && !disabled ? href : undefined}  class=\\\"button style-{variant} {className}\\\"  class:disabled  {...$$restProps} >",
		ctx
	});

	return block;
}

function create_fragment(ctx) {
	let previous_tag = /*href*/ ctx[2] && !/*disabled*/ ctx[3] ? "a" : "button";
	let svelte_element_anchor;
	let current;
	validate_dynamic_element(/*href*/ ctx[2] && !/*disabled*/ ctx[3] ? "a" : "button");
	validate_void_dynamic_element(/*href*/ ctx[2] && !/*disabled*/ ctx[3] ? "a" : "button");
	let svelte_element = (/*href*/ ctx[2] && !/*disabled*/ ctx[3] ? "a" : "button") && create_dynamic_element(ctx);

	const block = {
		c: function create() {
			if (svelte_element) svelte_element.c();
			svelte_element_anchor = empty();
		},
		l: function claim(nodes) {
			throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option");
		},
		m: function mount(target, anchor) {
			if (svelte_element) svelte_element.m(target, anchor);
			insert_dev(target, svelte_element_anchor, anchor);
			current = true;
		},
		p: function update(ctx, [dirty]) {
			if (/*href*/ ctx[2] && !/*disabled*/ ctx[3] ? "a" : "button") {
				if (!previous_tag) {
					svelte_element = create_dynamic_element(ctx);
					svelte_element.c();
					svelte_element.m(svelte_element_anchor.parentNode, svelte_element_anchor);
				} else if (safe_not_equal(previous_tag, /*href*/ ctx[2] && !/*disabled*/ ctx[3] ? "a" : "button")) {
					svelte_element.d(1);
					validate_dynamic_element(/*href*/ ctx[2] && !/*disabled*/ ctx[3] ? "a" : "button");
					validate_void_dynamic_element(/*href*/ ctx[2] && !/*disabled*/ ctx[3] ? "a" : "button");
					svelte_element = create_dynamic_element(ctx);
					svelte_element.c();
					svelte_element.m(svelte_element_anchor.parentNode, svelte_element_anchor);
				} else {
					svelte_element.p(ctx, dirty);
				}
			} else if (previous_tag) {
				svelte_element.d(1);
				svelte_element = null;
			}

			previous_tag = /*href*/ ctx[2] && !/*disabled*/ ctx[3] ? "a" : "button";
		},
		i: function intro(local) {
			if (current) return;
			transition_in(svelte_element);
			current = true;
		},
		o: function outro(local) {
			transition_out(svelte_element);
			current = false;
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(svelte_element_anchor);
			if (svelte_element) svelte_element.d(detaching);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

function instance($$self, $$props, $$invalidate) {
	const omit_props_names = ["variant","href","disabled","class","element"];
	let $$restProps = compute_rest_props($$props, omit_props_names);
	let { $$slots: slots = {}, $$scope } = $$props;
	validate_slots('Button', slots, ['default']);
	let { variant = "standard" } = $$props;
	let { href = "" } = $$props;
	let { disabled = false } = $$props;
	let { class: className = "" } = $$props;
	let { element = null } = $$props;
	const forwardEvents = createEventForwarder(get_current_component());

	function svelte_element_binding($$value) {
		binding_callbacks[$$value ? 'unshift' : 'push'](() => {
			element = $$value;
			$$invalidate(0, element);
		});
	}

	$$self.$$set = $$new_props => {
		$$props = assign(assign({}, $$props), exclude_internal_props($$new_props));
		$$invalidate(6, $$restProps = compute_rest_props($$props, omit_props_names));
		if ('variant' in $$new_props) $$invalidate(1, variant = $$new_props.variant);
		if ('href' in $$new_props) $$invalidate(2, href = $$new_props.href);
		if ('disabled' in $$new_props) $$invalidate(3, disabled = $$new_props.disabled);
		if ('class' in $$new_props) $$invalidate(4, className = $$new_props.class);
		if ('element' in $$new_props) $$invalidate(0, element = $$new_props.element);
		if ('$$scope' in $$new_props) $$invalidate(7, $$scope = $$new_props.$$scope);
	};

	$$self.$capture_state = () => ({
		get_current_component,
		createEventForwarder,
		variant,
		href,
		disabled,
		className,
		element,
		forwardEvents
	});

	$$self.$inject_state = $$new_props => {
		if ('variant' in $$props) $$invalidate(1, variant = $$new_props.variant);
		if ('href' in $$props) $$invalidate(2, href = $$new_props.href);
		if ('disabled' in $$props) $$invalidate(3, disabled = $$new_props.disabled);
		if ('className' in $$props) $$invalidate(4, className = $$new_props.className);
		if ('element' in $$props) $$invalidate(0, element = $$new_props.element);
	};

	if ($$props && "$$inject" in $$props) {
		$$self.$inject_state($$props.$$inject);
	}

	return [
		element,
		variant,
		href,
		disabled,
		className,
		forwardEvents,
		$$restProps,
		$$scope,
		slots,
		svelte_element_binding
	];
}

class Button extends SvelteComponentDev {
	constructor(options) {
		super(options);

		init(
			this,
			options,
			instance,
			create_fragment,
			safe_not_equal,
			{
				variant: 1,
				href: 2,
				disabled: 3,
				class: 4,
				element: 0
			},
			add_css
		);

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "Button",
			options,
			id: create_fragment.name
		});
	}

	get variant() {
		throw new Error("<Button>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set variant(value) {
		throw new Error("<Button>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get href() {
		throw new Error("<Button>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set href(value) {
		throw new Error("<Button>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get disabled() {
		throw new Error("<Button>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set disabled(value) {
		throw new Error("<Button>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get class() {
		throw new Error("<Button>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set class(value) {
		throw new Error("<Button>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get element() {
		throw new Error("<Button>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set element(value) {
		throw new Error("<Button>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}
}

export default Button;