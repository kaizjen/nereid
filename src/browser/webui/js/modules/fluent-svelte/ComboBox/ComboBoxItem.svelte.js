/* ComboBoxItem.svelte generated by Svelte v3.48.0 */
import {
	SvelteComponentDev,
	action_destroyer,
	add_location,
	append_dev,
	append_styles,
	assign,
	attr_dev,
	compute_rest_props,
	create_slot,
	detach_dev,
	dispatch_dev,
	element,
	exclude_internal_props,
	get_all_dirty_from_scope,
	get_slot_changes,
	get_spread_update,
	init,
	insert_dev,
	safe_not_equal,
	set_attributes,
	space,
	toggle_class,
	transition_in,
	transition_out,
	update_slot_base,
	validate_slots
} from "nereid://.svelte/internal/index.mjs";

import { createEventForwarder } from "../internal.js";
import { get_current_component } from "nereid://.svelte/internal/index.mjs";
const file = "ComboBoxItem.svelte";

function add_css(target) {
	append_styles(target, "svelte-and1le", ".combo-box-item.svelte-and1le.svelte-and1le{align-items:center;background-color:var(--fds-subtle-fill-transparent);block-size:32px;border-radius:var(--fds-control-corner-radius);box-sizing:border-box;color:var(--fds-text-primary);cursor:default;display:flex;flex:0 0 auto;font-family:var(--fds-font-family-text);font-size:var(--fds-body-font-size);font-weight:400;line-height:20px;margin:4px;outline:none;padding:0 11px;position:relative;text-decoration:none;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.combo-box-item.svelte-and1le.svelte-and1le:before{background-color:var(--fds-accent-default);block-size:0;border-radius:3px;content:\"\";inline-size:3px;inset-inline-start:0;opacity:0;position:absolute;transition:transform var(--fds-control-fast-duration) var(--fds-control-fast-out-slow-in-easing)}.combo-box-item.svelte-and1le.svelte-and1le:focus-visible{box-shadow:var(--fds-focus-stroke)}.combo-box-item.selected.svelte-and1le.svelte-and1le,.combo-box-item.svelte-and1le.svelte-and1le:hover{background-color:var(--fds-subtle-fill-secondary)}.combo-box-item.svelte-and1le.svelte-and1le:active{background-color:var(--fds-subtle-fill-tertiary);color:var(--fds-text-secondary)}.combo-box-item.svelte-and1le.svelte-and1le:active:before{transform:scaleY(.625)}.combo-box-item.disabled.svelte-and1le.svelte-and1le{background-color:var(--fds-subtle-fill-transparent);color:var(--fds-text-disabled);pointer-events:none}.combo-box-item.disabled.selected.svelte-and1le.svelte-and1le{background-color:var(--fds-subtle-fill-secondary)}.combo-box-item.disabled.selected.svelte-and1le.svelte-and1le:before{background-color:var(--fds-accent-disabled)}.combo-box-item.selected.svelte-and1le.svelte-and1le:before{block-size:16px;opacity:1}.combo-box-item.svelte-and1le>span.svelte-and1le{flex:1 1 auto;max-inline-size:100%;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.combo-box-item.svelte-and1le>svg{fill:currentColor;-webkit-margin-end:16px;block-size:auto;inline-size:16px;margin-inline-end:16px}\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQ29tYm9Cb3hJdGVtLnN2ZWx0ZSIsInNvdXJjZXMiOlsiQ29tYm9Cb3hJdGVtLnN2ZWx0ZSJdLCJzb3VyY2VzQ29udGVudCI6WyI8c2NyaXB0ID5pbXBvcnQgeyBjcmVhdGVFdmVudEZvcndhcmRlciB9IGZyb20gXCIuLi9pbnRlcm5hbFwiO1xyXG5pbXBvcnQgeyBnZXRfY3VycmVudF9jb21wb25lbnQgfSBmcm9tIFwic3ZlbHRlL2ludGVybmFsXCI7XHJcbmV4cG9ydCBsZXQgc2VsZWN0ZWQgPSBmYWxzZTtcclxuZXhwb3J0IGxldCBkaXNhYmxlZCA9IGZhbHNlO1xyXG5sZXQgY2xhc3NOYW1lID0gXCJcIjtcclxuZXhwb3J0IHsgY2xhc3NOYW1lIGFzIGNsYXNzIH07XHJcbmNvbnN0IGZvcndhcmRFdmVudHMgPSBjcmVhdGVFdmVudEZvcndhcmRlcihnZXRfY3VycmVudF9jb21wb25lbnQoKSk7XHJcbjwvc2NyaXB0PlxuXG48bGlcblx0dXNlOmZvcndhcmRFdmVudHNcblx0dGFiaW5kZXg9XCIwXCJcblx0Y2xhc3M9XCJjb21iby1ib3gtaXRlbSB7Y2xhc3NOYW1lfVwiXG5cdGNsYXNzOnNlbGVjdGVkXG5cdGNsYXNzOmRpc2FibGVkXG5cdHsuLi4kJHJlc3RQcm9wc31cbj5cblx0PHNsb3QgbmFtZT1cImljb25cIiAvPlxuXHQ8c3Bhbj5cblx0XHQ8c2xvdCAvPlxuXHQ8L3NwYW4+XG48L2xpPlxuXG48c3R5bGUgPi5jb21iby1ib3gtaXRlbXthbGlnbi1pdGVtczpjZW50ZXI7YmFja2dyb3VuZC1jb2xvcjp2YXIoLS1mZHMtc3VidGxlLWZpbGwtdHJhbnNwYXJlbnQpO2Jsb2NrLXNpemU6MzJweDtib3JkZXItcmFkaXVzOnZhcigtLWZkcy1jb250cm9sLWNvcm5lci1yYWRpdXMpO2JveC1zaXppbmc6Ym9yZGVyLWJveDtjb2xvcjp2YXIoLS1mZHMtdGV4dC1wcmltYXJ5KTtjdXJzb3I6ZGVmYXVsdDtkaXNwbGF5OmZsZXg7ZmxleDowIDAgYXV0bztmb250LWZhbWlseTp2YXIoLS1mZHMtZm9udC1mYW1pbHktdGV4dCk7Zm9udC1zaXplOnZhcigtLWZkcy1ib2R5LWZvbnQtc2l6ZSk7Zm9udC13ZWlnaHQ6NDAwO2xpbmUtaGVpZ2h0OjIwcHg7bWFyZ2luOjRweDtvdXRsaW5lOm5vbmU7cGFkZGluZzowIDExcHg7cG9zaXRpb246cmVsYXRpdmU7dGV4dC1kZWNvcmF0aW9uOm5vbmU7LXdlYmtpdC11c2VyLXNlbGVjdDpub25lOy1tb3otdXNlci1zZWxlY3Q6bm9uZTstbXMtdXNlci1zZWxlY3Q6bm9uZTt1c2VyLXNlbGVjdDpub25lfS5jb21iby1ib3gtaXRlbTpiZWZvcmV7YmFja2dyb3VuZC1jb2xvcjp2YXIoLS1mZHMtYWNjZW50LWRlZmF1bHQpO2Jsb2NrLXNpemU6MDtib3JkZXItcmFkaXVzOjNweDtjb250ZW50OlwiXCI7aW5saW5lLXNpemU6M3B4O2luc2V0LWlubGluZS1zdGFydDowO29wYWNpdHk6MDtwb3NpdGlvbjphYnNvbHV0ZTt0cmFuc2l0aW9uOnRyYW5zZm9ybSB2YXIoLS1mZHMtY29udHJvbC1mYXN0LWR1cmF0aW9uKSB2YXIoLS1mZHMtY29udHJvbC1mYXN0LW91dC1zbG93LWluLWVhc2luZyl9LmNvbWJvLWJveC1pdGVtOmZvY3VzLXZpc2libGV7Ym94LXNoYWRvdzp2YXIoLS1mZHMtZm9jdXMtc3Ryb2tlKX0uY29tYm8tYm94LWl0ZW0uc2VsZWN0ZWQsLmNvbWJvLWJveC1pdGVtOmhvdmVye2JhY2tncm91bmQtY29sb3I6dmFyKC0tZmRzLXN1YnRsZS1maWxsLXNlY29uZGFyeSl9LmNvbWJvLWJveC1pdGVtOmFjdGl2ZXtiYWNrZ3JvdW5kLWNvbG9yOnZhcigtLWZkcy1zdWJ0bGUtZmlsbC10ZXJ0aWFyeSk7Y29sb3I6dmFyKC0tZmRzLXRleHQtc2Vjb25kYXJ5KX0uY29tYm8tYm94LWl0ZW06YWN0aXZlOmJlZm9yZXt0cmFuc2Zvcm06c2NhbGVZKC42MjUpfS5jb21iby1ib3gtaXRlbS5kaXNhYmxlZHtiYWNrZ3JvdW5kLWNvbG9yOnZhcigtLWZkcy1zdWJ0bGUtZmlsbC10cmFuc3BhcmVudCk7Y29sb3I6dmFyKC0tZmRzLXRleHQtZGlzYWJsZWQpO3BvaW50ZXItZXZlbnRzOm5vbmV9LmNvbWJvLWJveC1pdGVtLmRpc2FibGVkLnNlbGVjdGVke2JhY2tncm91bmQtY29sb3I6dmFyKC0tZmRzLXN1YnRsZS1maWxsLXNlY29uZGFyeSl9LmNvbWJvLWJveC1pdGVtLmRpc2FibGVkLnNlbGVjdGVkOmJlZm9yZXtiYWNrZ3JvdW5kLWNvbG9yOnZhcigtLWZkcy1hY2NlbnQtZGlzYWJsZWQpfS5jb21iby1ib3gtaXRlbS5zZWxlY3RlZDpiZWZvcmV7YmxvY2stc2l6ZToxNnB4O29wYWNpdHk6MX0uY29tYm8tYm94LWl0ZW0+c3BhbntmbGV4OjEgMSBhdXRvO21heC1pbmxpbmUtc2l6ZToxMDAlO292ZXJmbG93OmhpZGRlbjt0ZXh0LW92ZXJmbG93OmVsbGlwc2lzO3doaXRlLXNwYWNlOm5vd3JhcH0uY29tYm8tYm94LWl0ZW0+Omdsb2JhbChzdmcpe2ZpbGw6Y3VycmVudENvbG9yOy13ZWJraXQtbWFyZ2luLWVuZDoxNnB4O2Jsb2NrLXNpemU6YXV0bztpbmxpbmUtc2l6ZToxNnB4O21hcmdpbi1pbmxpbmUtZW5kOjE2cHh9PC9zdHlsZT5cbiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUF1QlEsMkNBQWUsQ0FBQyxZQUFZLE1BQU0sQ0FBQyxpQkFBaUIsSUFBSSw2QkFBNkIsQ0FBQyxDQUFDLFdBQVcsSUFBSSxDQUFDLGNBQWMsSUFBSSwyQkFBMkIsQ0FBQyxDQUFDLFdBQVcsVUFBVSxDQUFDLE1BQU0sSUFBSSxrQkFBa0IsQ0FBQyxDQUFDLE9BQU8sT0FBTyxDQUFDLFFBQVEsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsWUFBWSxJQUFJLHNCQUFzQixDQUFDLENBQUMsVUFBVSxJQUFJLG9CQUFvQixDQUFDLENBQUMsWUFBWSxHQUFHLENBQUMsWUFBWSxJQUFJLENBQUMsT0FBTyxHQUFHLENBQUMsUUFBUSxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUMsSUFBSSxDQUFDLFNBQVMsUUFBUSxDQUFDLGdCQUFnQixJQUFJLENBQUMsb0JBQW9CLElBQUksQ0FBQyxpQkFBaUIsSUFBSSxDQUFDLGdCQUFnQixJQUFJLENBQUMsWUFBWSxJQUFJLENBQUMsMkNBQWUsT0FBTyxDQUFDLGlCQUFpQixJQUFJLG9CQUFvQixDQUFDLENBQUMsV0FBVyxDQUFDLENBQUMsY0FBYyxHQUFHLENBQUMsUUFBUSxFQUFFLENBQUMsWUFBWSxHQUFHLENBQUMsbUJBQW1CLENBQUMsQ0FBQyxRQUFRLENBQUMsQ0FBQyxTQUFTLFFBQVEsQ0FBQyxXQUFXLFNBQVMsQ0FBQyxJQUFJLDJCQUEyQixDQUFDLENBQUMsSUFBSSxxQ0FBcUMsQ0FBQyxDQUFDLDJDQUFlLGNBQWMsQ0FBQyxXQUFXLElBQUksa0JBQWtCLENBQUMsQ0FBQyxlQUFlLHFDQUFTLENBQUMsMkNBQWUsTUFBTSxDQUFDLGlCQUFpQixJQUFJLDJCQUEyQixDQUFDLENBQUMsMkNBQWUsT0FBTyxDQUFDLGlCQUFpQixJQUFJLDBCQUEwQixDQUFDLENBQUMsTUFBTSxJQUFJLG9CQUFvQixDQUFDLENBQUMsMkNBQWUsT0FBTyxPQUFPLENBQUMsVUFBVSxPQUFPLElBQUksQ0FBQyxDQUFDLGVBQWUscUNBQVMsQ0FBQyxpQkFBaUIsSUFBSSw2QkFBNkIsQ0FBQyxDQUFDLE1BQU0sSUFBSSxtQkFBbUIsQ0FBQyxDQUFDLGVBQWUsSUFBSSxDQUFDLGVBQWUsU0FBUyxxQ0FBUyxDQUFDLGlCQUFpQixJQUFJLDJCQUEyQixDQUFDLENBQUMsZUFBZSxTQUFTLHFDQUFTLE9BQU8sQ0FBQyxpQkFBaUIsSUFBSSxxQkFBcUIsQ0FBQyxDQUFDLGVBQWUscUNBQVMsT0FBTyxDQUFDLFdBQVcsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDLDZCQUFlLENBQUMsa0JBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLGdCQUFnQixJQUFJLENBQUMsU0FBUyxNQUFNLENBQUMsY0FBYyxRQUFRLENBQUMsWUFBWSxNQUFNLENBQUMsNkJBQWUsQ0FBQyxBQUFRLEdBQUcsQUFBQyxDQUFDLEtBQUssWUFBWSxDQUFDLG1CQUFtQixJQUFJLENBQUMsV0FBVyxJQUFJLENBQUMsWUFBWSxJQUFJLENBQUMsa0JBQWtCLElBQUksQ0FBQyJ9 */");
}

const get_icon_slot_changes = dirty => ({});
const get_icon_slot_context = ctx => ({});

function create_fragment(ctx) {
	let li;
	let t;
	let span;
	let li_class_value;
	let forwardEvents_action;
	let current;
	let mounted;
	let dispose;
	const icon_slot_template = /*#slots*/ ctx[6].icon;
	const icon_slot = create_slot(icon_slot_template, ctx, /*$$scope*/ ctx[5], get_icon_slot_context);
	const default_slot_template = /*#slots*/ ctx[6].default;
	const default_slot = create_slot(default_slot_template, ctx, /*$$scope*/ ctx[5], null);

	let li_levels = [
		{ tabindex: "0" },
		{
			class: li_class_value = "combo-box-item " + /*className*/ ctx[2]
		},
		/*$$restProps*/ ctx[4]
	];

	let li_data = {};

	for (let i = 0; i < li_levels.length; i += 1) {
		li_data = assign(li_data, li_levels[i]);
	}

	const block = {
		c: function create() {
			li = element("li");
			if (icon_slot) icon_slot.c();
			t = space();
			span = element("span");
			if (default_slot) default_slot.c();
			attr_dev(span, "class", "svelte-and1le");
			add_location(span, file, 18, 1, 462);
			set_attributes(li, li_data);
			toggle_class(li, "selected", /*selected*/ ctx[0]);
			toggle_class(li, "disabled", /*disabled*/ ctx[1]);
			toggle_class(li, "svelte-and1le", true);
			add_location(li, file, 9, 0, 314);
		},
		l: function claim(nodes) {
			throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option");
		},
		m: function mount(target, anchor) {
			insert_dev(target, li, anchor);

			if (icon_slot) {
				icon_slot.m(li, null);
			}

			append_dev(li, t);
			append_dev(li, span);

			if (default_slot) {
				default_slot.m(span, null);
			}

			current = true;

			if (!mounted) {
				dispose = action_destroyer(forwardEvents_action = /*forwardEvents*/ ctx[3].call(null, li));
				mounted = true;
			}
		},
		p: function update(ctx, [dirty]) {
			if (icon_slot) {
				if (icon_slot.p && (!current || dirty & /*$$scope*/ 32)) {
					update_slot_base(
						icon_slot,
						icon_slot_template,
						ctx,
						/*$$scope*/ ctx[5],
						!current
						? get_all_dirty_from_scope(/*$$scope*/ ctx[5])
						: get_slot_changes(icon_slot_template, /*$$scope*/ ctx[5], dirty, get_icon_slot_changes),
						get_icon_slot_context
					);
				}
			}

			if (default_slot) {
				if (default_slot.p && (!current || dirty & /*$$scope*/ 32)) {
					update_slot_base(
						default_slot,
						default_slot_template,
						ctx,
						/*$$scope*/ ctx[5],
						!current
						? get_all_dirty_from_scope(/*$$scope*/ ctx[5])
						: get_slot_changes(default_slot_template, /*$$scope*/ ctx[5], dirty, null),
						null
					);
				}
			}

			set_attributes(li, li_data = get_spread_update(li_levels, [
				{ tabindex: "0" },
				(!current || dirty & /*className*/ 4 && li_class_value !== (li_class_value = "combo-box-item " + /*className*/ ctx[2])) && { class: li_class_value },
				dirty & /*$$restProps*/ 16 && /*$$restProps*/ ctx[4]
			]));

			toggle_class(li, "selected", /*selected*/ ctx[0]);
			toggle_class(li, "disabled", /*disabled*/ ctx[1]);
			toggle_class(li, "svelte-and1le", true);
		},
		i: function intro(local) {
			if (current) return;
			transition_in(icon_slot, local);
			transition_in(default_slot, local);
			current = true;
		},
		o: function outro(local) {
			transition_out(icon_slot, local);
			transition_out(default_slot, local);
			current = false;
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(li);
			if (icon_slot) icon_slot.d(detaching);
			if (default_slot) default_slot.d(detaching);
			mounted = false;
			dispose();
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

function instance($$self, $$props, $$invalidate) {
	const omit_props_names = ["selected","disabled","class"];
	let $$restProps = compute_rest_props($$props, omit_props_names);
	let { $$slots: slots = {}, $$scope } = $$props;
	validate_slots('ComboBoxItem', slots, ['icon','default']);
	let { selected = false } = $$props;
	let { disabled = false } = $$props;
	let { class: className = "" } = $$props;
	const forwardEvents = createEventForwarder(get_current_component());

	$$self.$$set = $$new_props => {
		$$props = assign(assign({}, $$props), exclude_internal_props($$new_props));
		$$invalidate(4, $$restProps = compute_rest_props($$props, omit_props_names));
		if ('selected' in $$new_props) $$invalidate(0, selected = $$new_props.selected);
		if ('disabled' in $$new_props) $$invalidate(1, disabled = $$new_props.disabled);
		if ('class' in $$new_props) $$invalidate(2, className = $$new_props.class);
		if ('$$scope' in $$new_props) $$invalidate(5, $$scope = $$new_props.$$scope);
	};

	$$self.$capture_state = () => ({
		createEventForwarder,
		get_current_component,
		selected,
		disabled,
		className,
		forwardEvents
	});

	$$self.$inject_state = $$new_props => {
		if ('selected' in $$props) $$invalidate(0, selected = $$new_props.selected);
		if ('disabled' in $$props) $$invalidate(1, disabled = $$new_props.disabled);
		if ('className' in $$props) $$invalidate(2, className = $$new_props.className);
	};

	if ($$props && "$$inject" in $$props) {
		$$self.$inject_state($$props.$$inject);
	}

	return [selected, disabled, className, forwardEvents, $$restProps, $$scope, slots];
}

class ComboBoxItem extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance, create_fragment, safe_not_equal, { selected: 0, disabled: 1, class: 2 }, add_css);

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "ComboBoxItem",
			options,
			id: create_fragment.name
		});
	}

	get selected() {
		throw new Error("<ComboBoxItem>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set selected(value) {
		throw new Error("<ComboBoxItem>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get disabled() {
		throw new Error("<ComboBoxItem>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set disabled(value) {
		throw new Error("<ComboBoxItem>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get class() {
		throw new Error("<ComboBoxItem>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set class(value) {
		throw new Error("<ComboBoxItem>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}
}

export default ComboBoxItem;