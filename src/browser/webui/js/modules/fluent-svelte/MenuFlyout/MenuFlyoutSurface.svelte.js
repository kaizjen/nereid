/* MenuFlyoutSurface.svelte generated by Svelte v3.48.0 */
import {
	SvelteComponentDev,
	add_location,
	append_dev,
	append_styles,
	assign,
	attr_dev,
	binding_callbacks,
	compute_rest_props,
	create_slot,
	detach_dev,
	dispatch_dev,
	element as element_1,
	exclude_internal_props,
	get_all_dirty_from_scope,
	get_slot_changes,
	get_spread_update,
	init,
	insert_dev,
	listen_dev,
	safe_not_equal,
	set_attributes,
	toggle_class,
	transition_in,
	transition_out,
	update_slot_base,
	validate_slots
} from "nereid://.svelte/internal/index.mjs";

const file = "MenuFlyoutSurface.svelte";

function add_css(target) {
	append_styles(target, "svelte-1qibxfp", "@-webkit-keyframes svelte-1qibxfp-menu-open{0%{transform:translateY(var(--fds-menu-flyout-transition-offset,-50%))}to{transform:none}}@keyframes svelte-1qibxfp-menu-open{0%{transform:translateY(var(--fds-menu-flyout-transition-offset,-50%))}to{transform:none}}@-webkit-keyframes svelte-1qibxfp-menu-shadow{0%{box-shadow:none}to{box-shadow:var(--fds-flyout-shadow)}}@keyframes svelte-1qibxfp-menu-shadow{0%{box-shadow:none}to{box-shadow:var(--fds-flyout-shadow)}}.menu-flyout.svelte-1qibxfp{-webkit-animation:svelte-1qibxfp-menu-open var(--fds-control-normal-duration) var(--fds-control-fast-out-slow-in-easing),svelte-1qibxfp-menu-shadow var(--fds-control-fast-duration) var(--fds-control-fast-out-slow-in-easing) var(--fds-control-normal-duration) forwards;animation:svelte-1qibxfp-menu-open var(--fds-control-normal-duration) var(--fds-control-fast-out-slow-in-easing),svelte-1qibxfp-menu-shadow var(--fds-control-fast-duration) var(--fds-control-fast-out-slow-in-easing) var(--fds-control-normal-duration) forwards;background-clip:padding-box;background-color:var(--fds-solid-background-quarternary);border:1px solid var(--fds-surface-stroke-flyout);border-radius:var(--fds-overlay-corner-radius);box-sizing:border-box;color:var(--fds-text-primary);display:flex;flex-direction:column;font-family:var(--fds-font-family-text);font-size:var(--fds-body-font-size);font-weight:400;line-height:20px;margin:0;max-block-size:100vh;max-inline-size:100%;min-inline-size:120px;padding:0;padding-block:2px;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.menu-flyout-surface-container.svelte-1qibxfp{overflow:hidden}\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiTWVudUZseW91dFN1cmZhY2Uuc3ZlbHRlIiwic291cmNlcyI6WyJNZW51Rmx5b3V0U3VyZmFjZS5zdmVsdGUiXSwic291cmNlc0NvbnRlbnQiOlsiPHNjcmlwdCA+LyoqIFNwZWNpZmllcyBhIGN1c3RvbSBjbGFzcyBuYW1lIGZvciB0aGUgc3VyZmFjZS4gKi9cclxubGV0IGNsYXNzTmFtZSA9IFwiXCI7XHJcbmV4cG9ydCB7IGNsYXNzTmFtZSBhcyBjbGFzcyB9O1xyXG4vKiogT2J0YWlucyBhIGJvdW5kIERPTSByZWZlcmVuY2UgdG8gdGhlIHN1cmZhY2UgZWxlbWVudC4gKi9cclxuZXhwb3J0IGxldCBlbGVtZW50ID0gbnVsbDtcclxubGV0IGFuaW1hdGlvbkNvbXBsZXRlID0gZmFsc2U7XHJcbjwvc2NyaXB0PlxuXG48ZGl2XG5cdGNsYXNzPVwibWVudS1mbHlvdXQtc3VyZmFjZS1jb250YWluZXJcIlxuXHRzdHlsZT17YW5pbWF0aW9uQ29tcGxldGUgPyBcIm92ZXJmbG93OiB2aXNpYmxlO1wiIDogdW5kZWZpbmVkfVxuPlxuXHQ8dWxcblx0XHRvbjphbmltYXRpb25lbmR8b25jZT17KCkgPT4gKGFuaW1hdGlvbkNvbXBsZXRlID0gdHJ1ZSl9XG5cdFx0Y2xhc3M9XCJtZW51LWZseW91dCB7Y2xhc3NOYW1lfVwiXG5cdFx0YmluZDp0aGlzPXtlbGVtZW50fVxuXHRcdHsuLi4kJHJlc3RQcm9wc31cblx0PlxuXHRcdDxzbG90IC8+XG5cdDwvdWw+XG48L2Rpdj5cblxuPHN0eWxlID5ALXdlYmtpdC1rZXlmcmFtZXMgbWVudS1vcGVuezAle3RyYW5zZm9ybTp0cmFuc2xhdGVZKHZhcigtLWZkcy1tZW51LWZseW91dC10cmFuc2l0aW9uLW9mZnNldCwtNTAlKSl9dG97dHJhbnNmb3JtOm5vbmV9fUBrZXlmcmFtZXMgbWVudS1vcGVuezAle3RyYW5zZm9ybTp0cmFuc2xhdGVZKHZhcigtLWZkcy1tZW51LWZseW91dC10cmFuc2l0aW9uLW9mZnNldCwtNTAlKSl9dG97dHJhbnNmb3JtOm5vbmV9fUAtd2Via2l0LWtleWZyYW1lcyBtZW51LXNoYWRvd3swJXtib3gtc2hhZG93Om5vbmV9dG97Ym94LXNoYWRvdzp2YXIoLS1mZHMtZmx5b3V0LXNoYWRvdyl9fUBrZXlmcmFtZXMgbWVudS1zaGFkb3d7MCV7Ym94LXNoYWRvdzpub25lfXRve2JveC1zaGFkb3c6dmFyKC0tZmRzLWZseW91dC1zaGFkb3cpfX0ubWVudS1mbHlvdXR7LXdlYmtpdC1hbmltYXRpb246bWVudS1vcGVuIHZhcigtLWZkcy1jb250cm9sLW5vcm1hbC1kdXJhdGlvbikgdmFyKC0tZmRzLWNvbnRyb2wtZmFzdC1vdXQtc2xvdy1pbi1lYXNpbmcpLG1lbnUtc2hhZG93IHZhcigtLWZkcy1jb250cm9sLWZhc3QtZHVyYXRpb24pIHZhcigtLWZkcy1jb250cm9sLWZhc3Qtb3V0LXNsb3ctaW4tZWFzaW5nKSB2YXIoLS1mZHMtY29udHJvbC1ub3JtYWwtZHVyYXRpb24pIGZvcndhcmRzO2FuaW1hdGlvbjptZW51LW9wZW4gdmFyKC0tZmRzLWNvbnRyb2wtbm9ybWFsLWR1cmF0aW9uKSB2YXIoLS1mZHMtY29udHJvbC1mYXN0LW91dC1zbG93LWluLWVhc2luZyksbWVudS1zaGFkb3cgdmFyKC0tZmRzLWNvbnRyb2wtZmFzdC1kdXJhdGlvbikgdmFyKC0tZmRzLWNvbnRyb2wtZmFzdC1vdXQtc2xvdy1pbi1lYXNpbmcpIHZhcigtLWZkcy1jb250cm9sLW5vcm1hbC1kdXJhdGlvbikgZm9yd2FyZHM7YmFja2dyb3VuZC1jbGlwOnBhZGRpbmctYm94O2JhY2tncm91bmQtY29sb3I6dmFyKC0tZmRzLXNvbGlkLWJhY2tncm91bmQtcXVhcnRlcm5hcnkpO2JvcmRlcjoxcHggc29saWQgdmFyKC0tZmRzLXN1cmZhY2Utc3Ryb2tlLWZseW91dCk7Ym9yZGVyLXJhZGl1czp2YXIoLS1mZHMtb3ZlcmxheS1jb3JuZXItcmFkaXVzKTtib3gtc2l6aW5nOmJvcmRlci1ib3g7Y29sb3I6dmFyKC0tZmRzLXRleHQtcHJpbWFyeSk7ZGlzcGxheTpmbGV4O2ZsZXgtZGlyZWN0aW9uOmNvbHVtbjtmb250LWZhbWlseTp2YXIoLS1mZHMtZm9udC1mYW1pbHktdGV4dCk7Zm9udC1zaXplOnZhcigtLWZkcy1ib2R5LWZvbnQtc2l6ZSk7Zm9udC13ZWlnaHQ6NDAwO2xpbmUtaGVpZ2h0OjIwcHg7bWFyZ2luOjA7bWF4LWJsb2NrLXNpemU6MTAwdmg7bWF4LWlubGluZS1zaXplOjEwMCU7bWluLWlubGluZS1zaXplOjEyMHB4O3BhZGRpbmc6MDtwYWRkaW5nLWJsb2NrOjJweDstd2Via2l0LXVzZXItc2VsZWN0Om5vbmU7LW1vei11c2VyLXNlbGVjdDpub25lOy1tcy11c2VyLXNlbGVjdDpub25lO3VzZXItc2VsZWN0Om5vbmV9Lm1lbnUtZmx5b3V0LXN1cmZhY2UtY29udGFpbmVye292ZXJmbG93OmhpZGRlbn08L3N0eWxlPlxuIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQXNCUSxtQkFBbUIsd0JBQVMsQ0FBQyxFQUFFLENBQUMsVUFBVSxXQUFXLElBQUksbUNBQW1DLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsVUFBVSxJQUFJLENBQUMsQ0FBQyxXQUFXLHdCQUFTLENBQUMsRUFBRSxDQUFDLFVBQVUsV0FBVyxJQUFJLG1DQUFtQyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLFVBQVUsSUFBSSxDQUFDLENBQUMsbUJBQW1CLDBCQUFXLENBQUMsRUFBRSxDQUFDLFdBQVcsSUFBSSxDQUFDLEVBQUUsQ0FBQyxXQUFXLElBQUksbUJBQW1CLENBQUMsQ0FBQyxDQUFDLFdBQVcsMEJBQVcsQ0FBQyxFQUFFLENBQUMsV0FBVyxJQUFJLENBQUMsRUFBRSxDQUFDLFdBQVcsSUFBSSxtQkFBbUIsQ0FBQyxDQUFDLENBQUMsMkJBQVksQ0FBQyxrQkFBa0Isd0JBQVMsQ0FBQyxJQUFJLDZCQUE2QixDQUFDLENBQUMsSUFBSSxxQ0FBcUMsQ0FBQyxDQUFDLDBCQUFXLENBQUMsSUFBSSwyQkFBMkIsQ0FBQyxDQUFDLElBQUkscUNBQXFDLENBQUMsQ0FBQyxJQUFJLDZCQUE2QixDQUFDLENBQUMsUUFBUSxDQUFDLFVBQVUsd0JBQVMsQ0FBQyxJQUFJLDZCQUE2QixDQUFDLENBQUMsSUFBSSxxQ0FBcUMsQ0FBQyxDQUFDLDBCQUFXLENBQUMsSUFBSSwyQkFBMkIsQ0FBQyxDQUFDLElBQUkscUNBQXFDLENBQUMsQ0FBQyxJQUFJLDZCQUE2QixDQUFDLENBQUMsUUFBUSxDQUFDLGdCQUFnQixXQUFXLENBQUMsaUJBQWlCLElBQUksa0NBQWtDLENBQUMsQ0FBQyxPQUFPLEdBQUcsQ0FBQyxLQUFLLENBQUMsSUFBSSwyQkFBMkIsQ0FBQyxDQUFDLGNBQWMsSUFBSSwyQkFBMkIsQ0FBQyxDQUFDLFdBQVcsVUFBVSxDQUFDLE1BQU0sSUFBSSxrQkFBa0IsQ0FBQyxDQUFDLFFBQVEsSUFBSSxDQUFDLGVBQWUsTUFBTSxDQUFDLFlBQVksSUFBSSxzQkFBc0IsQ0FBQyxDQUFDLFVBQVUsSUFBSSxvQkFBb0IsQ0FBQyxDQUFDLFlBQVksR0FBRyxDQUFDLFlBQVksSUFBSSxDQUFDLE9BQU8sQ0FBQyxDQUFDLGVBQWUsS0FBSyxDQUFDLGdCQUFnQixJQUFJLENBQUMsZ0JBQWdCLEtBQUssQ0FBQyxRQUFRLENBQUMsQ0FBQyxjQUFjLEdBQUcsQ0FBQyxvQkFBb0IsSUFBSSxDQUFDLGlCQUFpQixJQUFJLENBQUMsZ0JBQWdCLElBQUksQ0FBQyxZQUFZLElBQUksQ0FBQyw2Q0FBOEIsQ0FBQyxTQUFTLE1BQU0sQ0FBQyJ9 */");
}

function create_fragment(ctx) {
	let div;
	let ul;
	let ul_class_value;
	let div_style_value;
	let current;
	let mounted;
	let dispose;
	const default_slot_template = /*#slots*/ ctx[5].default;
	const default_slot = create_slot(default_slot_template, ctx, /*$$scope*/ ctx[4], null);

	let ul_levels = [
		{
			class: ul_class_value = "menu-flyout " + /*className*/ ctx[1]
		},
		/*$$restProps*/ ctx[3]
	];

	let ul_data = {};

	for (let i = 0; i < ul_levels.length; i += 1) {
		ul_data = assign(ul_data, ul_levels[i]);
	}

	const block = {
		c: function create() {
			div = element_1("div");
			ul = element_1("ul");
			if (default_slot) default_slot.c();
			set_attributes(ul, ul_data);
			toggle_class(ul, "svelte-1qibxfp", true);
			add_location(ul, file, 12, 1, 359);
			attr_dev(div, "class", "menu-flyout-surface-container svelte-1qibxfp");

			attr_dev(div, "style", div_style_value = /*animationComplete*/ ctx[2]
			? "overflow: visible;"
			: undefined);

			add_location(div, file, 8, 0, 250);
		},
		l: function claim(nodes) {
			throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option");
		},
		m: function mount(target, anchor) {
			insert_dev(target, div, anchor);
			append_dev(div, ul);

			if (default_slot) {
				default_slot.m(ul, null);
			}

			/*ul_binding*/ ctx[7](ul);
			current = true;

			if (!mounted) {
				dispose = listen_dev(ul, "animationend", /*animationend_handler*/ ctx[6], { once: true }, false, false);
				mounted = true;
			}
		},
		p: function update(ctx, [dirty]) {
			if (default_slot) {
				if (default_slot.p && (!current || dirty & /*$$scope*/ 16)) {
					update_slot_base(
						default_slot,
						default_slot_template,
						ctx,
						/*$$scope*/ ctx[4],
						!current
						? get_all_dirty_from_scope(/*$$scope*/ ctx[4])
						: get_slot_changes(default_slot_template, /*$$scope*/ ctx[4], dirty, null),
						null
					);
				}
			}

			set_attributes(ul, ul_data = get_spread_update(ul_levels, [
				(!current || dirty & /*className*/ 2 && ul_class_value !== (ul_class_value = "menu-flyout " + /*className*/ ctx[1])) && { class: ul_class_value },
				dirty & /*$$restProps*/ 8 && /*$$restProps*/ ctx[3]
			]));

			toggle_class(ul, "svelte-1qibxfp", true);

			if (!current || dirty & /*animationComplete*/ 4 && div_style_value !== (div_style_value = /*animationComplete*/ ctx[2]
			? "overflow: visible;"
			: undefined)) {
				attr_dev(div, "style", div_style_value);
			}
		},
		i: function intro(local) {
			if (current) return;
			transition_in(default_slot, local);
			current = true;
		},
		o: function outro(local) {
			transition_out(default_slot, local);
			current = false;
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(div);
			if (default_slot) default_slot.d(detaching);
			/*ul_binding*/ ctx[7](null);
			mounted = false;
			dispose();
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

function instance($$self, $$props, $$invalidate) {
	const omit_props_names = ["class","element"];
	let $$restProps = compute_rest_props($$props, omit_props_names);
	let { $$slots: slots = {}, $$scope } = $$props;
	validate_slots('MenuFlyoutSurface', slots, ['default']);
	let { class: className = "" } = $$props;
	let { element = null } = $$props;
	let animationComplete = false;
	const animationend_handler = () => $$invalidate(2, animationComplete = true);

	function ul_binding($$value) {
		binding_callbacks[$$value ? 'unshift' : 'push'](() => {
			element = $$value;
			$$invalidate(0, element);
		});
	}

	$$self.$$set = $$new_props => {
		$$props = assign(assign({}, $$props), exclude_internal_props($$new_props));
		$$invalidate(3, $$restProps = compute_rest_props($$props, omit_props_names));
		if ('class' in $$new_props) $$invalidate(1, className = $$new_props.class);
		if ('element' in $$new_props) $$invalidate(0, element = $$new_props.element);
		if ('$$scope' in $$new_props) $$invalidate(4, $$scope = $$new_props.$$scope);
	};

	$$self.$capture_state = () => ({ className, element, animationComplete });

	$$self.$inject_state = $$new_props => {
		if ('className' in $$props) $$invalidate(1, className = $$new_props.className);
		if ('element' in $$props) $$invalidate(0, element = $$new_props.element);
		if ('animationComplete' in $$props) $$invalidate(2, animationComplete = $$new_props.animationComplete);
	};

	if ($$props && "$$inject" in $$props) {
		$$self.$inject_state($$props.$$inject);
	}

	return [
		element,
		className,
		animationComplete,
		$$restProps,
		$$scope,
		slots,
		animationend_handler,
		ul_binding
	];
}

class MenuFlyoutSurface extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance, create_fragment, safe_not_equal, { class: 1, element: 0 }, add_css);

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "MenuFlyoutSurface",
			options,
			id: create_fragment.name
		});
	}

	get class() {
		throw new Error("<MenuFlyoutSurface>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set class(value) {
		throw new Error("<MenuFlyoutSurface>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get element() {
		throw new Error("<MenuFlyoutSurface>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set element(value) {
		throw new Error("<MenuFlyoutSurface>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}
}

export default MenuFlyoutSurface;