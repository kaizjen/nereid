/* MenuFlyoutWrapper.svelte generated by Svelte v3.48.0 */
import {
	SvelteComponentDev,
	action_destroyer,
	add_flush_callback,
	add_location,
	append_dev,
	append_styles,
	assign,
	attr_dev,
	bind,
	binding_callbacks,
	check_outros,
	compute_rest_props,
	create_component,
	create_slot,
	destroy_component,
	detach_dev,
	dispatch_dev,
	element,
	exclude_internal_props,
	get_all_dirty_from_scope,
	get_slot_changes,
	get_spread_object,
	get_spread_update,
	group_outros,
	init,
	insert_dev,
	listen_dev,
	mount_component,
	run_all,
	safe_not_equal,
	set_style,
	space,
	transition_in,
	transition_out,
	update_slot_base,
	validate_slots
} from "nereid://.svelte/internal/index.mjs";

import { tabbable } from "../../tabbable/dist/index.esm.js";
import { createEventDispatcher, setContext } from "nereid://.svelte/index.mjs";
import { arrowNavigation, uid } from "../internal.js";
import MenuFlyoutSurface from "./MenuFlyoutSurface.svelte.js";
const file = "MenuFlyoutWrapper.svelte";

function add_css(target) {
	append_styles(target, "svelte-as1gqa", ".menu-flyout-wrapper.svelte-as1gqa{display:inline-block;height:auto;position:relative}.menu-flyout-backdrop.svelte-as1gqa{height:100%;left:0;position:fixed;top:0;width:100%;z-index:9999}.menu-flyout-anchor.svelte-as1gqa{position:absolute;z-index:10000}.menu-flyout-anchor.placement-top.svelte-as1gqa{--fds-menu-flyout-transition-offset:50%;bottom:calc(100% + var(--fds-menu-flyout-offset))}.menu-flyout-anchor.placement-bottom.svelte-as1gqa{top:calc(100% + var(--fds-menu-flyout-offset))}.menu-flyout-anchor.placement-left.svelte-as1gqa{right:calc(100% + var(--fds-menu-flyout-offset))}.menu-flyout-anchor.placement-right.svelte-as1gqa{left:calc(100% + var(--fds-menu-flyout-offset))}.menu-flyout-anchor.placement-bottom.alignment-start.svelte-as1gqa,.menu-flyout-anchor.placement-top.alignment-start.svelte-as1gqa{inset-inline-start:0}.menu-flyout-anchor.placement-bottom.alignment-end.svelte-as1gqa,.menu-flyout-anchor.placement-top.alignment-end.svelte-as1gqa{inset-inline-end:0}.menu-flyout-anchor.placement-bottom.alignment-center.svelte-as1gqa,.menu-flyout-anchor.placement-top.alignment-center.svelte-as1gqa{inset-inline-start:50%;transform:translateX(-50%)}.menu-flyout-anchor.placement-left.alignment-start.svelte-as1gqa,.menu-flyout-anchor.placement-right.alignment-start.svelte-as1gqa{inset-block-start:0}.menu-flyout-anchor.placement-left.alignment-end.svelte-as1gqa,.menu-flyout-anchor.placement-right.alignment-end.svelte-as1gqa{inset-block-end:0}.menu-flyout-anchor.placement-left.alignment-center.svelte-as1gqa,.menu-flyout-anchor.placement-right.alignment-center.svelte-as1gqa{inset-block-start:50%;transform:translateY(-50%)}\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiTWVudUZseW91dFdyYXBwZXIuc3ZlbHRlIiwic291cmNlcyI6WyJNZW51Rmx5b3V0V3JhcHBlci5zdmVsdGUiXSwic291cmNlc0NvbnRlbnQiOlsiPHNjcmlwdCA+aW1wb3J0IHsgdGFiYmFibGUgfSBmcm9tIFwidGFiYmFibGVcIjtcclxuaW1wb3J0IHsgY3JlYXRlRXZlbnREaXNwYXRjaGVyLCBzZXRDb250ZXh0IH0gZnJvbSBcInN2ZWx0ZVwiO1xyXG5pbXBvcnQgeyBhcnJvd05hdmlnYXRpb24sIHVpZCB9IGZyb20gXCIuLi9pbnRlcm5hbFwiO1xyXG5pbXBvcnQgTWVudUZseW91dFN1cmZhY2UgZnJvbSBcIi4vTWVudUZseW91dFN1cmZhY2Uuc3ZlbHRlXCI7XHJcbi8qKiBEZXRlcm1pbmVzIHRoZSBmbHlvdXQncyB2aXNpYmlsaXR5LiAqL1xyXG5leHBvcnQgbGV0IG9wZW4gPSBmYWxzZTtcclxuLyoqIERldGVybWluZXMgaWYgdGhlIGZseW91dCBjYW4gYmUgY2xvc2VkIHVzaW5nIGNvbnZlbnRpb25hbCB1c2VyIGludGVyYWN0aW9uLiAqL1xyXG5leHBvcnQgbGV0IGNsb3NhYmxlID0gdHJ1ZTtcclxuLyoqIENvbnRyb2xzIGlmIHRoZSBmbHlvdXQgd2lsbCBiZSBjbG9zZWQgd2hlbiBjbGlja2luZyBhIHN0YW5kYXJkIHZhcmlhbnQgaXRlbS4gT25seSBhcHBsaWVzIGlmIGBjbG9zYWJsZWAgaXMgc2V0IHRvIGB0cnVlYC4gKi9cclxuZXhwb3J0IGxldCBjbG9zZU9uU2VsZWN0ID0gdHJ1ZTtcclxuLyoqIERpcmVjdGlvbiB0aGF0IHRoZSBmbHlvdXQgd2lsbCBiZSBvcGVuZWQgZnJvbS4gKi9cclxuZXhwb3J0IGxldCBwbGFjZW1lbnQgPSBcInRvcFwiO1xyXG4vKiogQWxpZ25tZW50IG9mIHRoZSBtZW51IGFsb25nIHRoZSBjbGlja2FibGUgdGFyZ2V0J3MgZ2l2ZW4gYXhpcy4gKi9cclxuZXhwb3J0IGxldCBhbGlnbm1lbnQgPSBcImNlbnRlclwiO1xyXG4vKiogRGlzdGFuY2Ugb2YgdGhlIGZseW91dCBmcm9tIHRoZSBjb250cm9sIGJ1dHRvbiBpbiBwaXhlbHMuICovXHJcbmV4cG9ydCBsZXQgb2Zmc2V0ID0gNDtcclxuLyoqIFNwZWNpZmllcyBhIGN1c3RvbSBjbGFzcyBuYW1lIGZvciB0aGUgZmx5b3V0LiAqL1xyXG5sZXQgY2xhc3NOYW1lID0gXCJcIjtcclxuZXhwb3J0IHsgY2xhc3NOYW1lIGFzIGNsYXNzIH07XHJcbi8qKiBPYnRhaW5zIGEgYm91bmQgRE9NIHJlZmVyZW5jZSB0byB0aGUgY29udGVudCB3cmFwcGVyIGVsZW1lbnQuICovXHJcbmV4cG9ydCBsZXQgd3JhcHBlckVsZW1lbnQgPSBudWxsO1xyXG4vKiogT2J0YWlucyBhIGJvdW5kIERPTSByZWZlcmVuY2UgdG8gdGhlIG1lbnUncyBwb3NpdGlvbmluZyBhbmNob3IgZWxlbWVudC4gKi9cclxuZXhwb3J0IGxldCBhbmNob3JFbGVtZW50ID0gbnVsbDtcclxuLyoqIE9idGFpbnMgYSBib3VuZCBET00gcmVmZXJlbmNlIHRvIHRoZSBpbm5lciBtZW51IGVsZW1lbnQuICovXHJcbmV4cG9ydCBsZXQgbWVudUVsZW1lbnQgPSBudWxsO1xyXG4vKiogT2J0YWlucyBhIGJvdW5kIERPTSByZWZlcmVuY2UgdG8gdGhlIG1lbnUgYmFja2Ryb3AsIHdoaWNoIGlzIHByZXNlbnQgd2hpbGUgdGhlIG1lbnUgaXMgYG9wZW5gLiAqL1xyXG5leHBvcnQgbGV0IGJhY2tkcm9wRWxlbWVudCA9IG51bGw7XHJcbmNvbnN0IGRpc3BhdGNoID0gY3JlYXRlRXZlbnREaXNwYXRjaGVyKCk7XHJcbmNvbnN0IG1lbnVJZCA9IHVpZChcImZkcy1tZW51LWZseW91dC1hbmNob3ItXCIpO1xyXG5sZXQgbWVudSA9IG51bGw7XHJcbmxldCBwcmV2aW91c0ZvY3VzID0gbnVsbDtcclxuJDogZGlzcGF0Y2gob3BlbiA/IFwib3BlblwiIDogXCJjbG9zZVwiKTtcclxuJDogaWYgKG1lbnUgJiYgdGFiYmFibGUobWVudUVsZW1lbnQpLmxlbmd0aCA+IDApXHJcbiAgICB0YWJiYWJsZShtZW51RWxlbWVudClbMF0uZm9jdXMoKTtcclxuZnVuY3Rpb24gaGFuZGxlRXNjYXBlS2V5KHsga2V5IH0pIHtcclxuICAgIGlmIChrZXkgPT09IFwiRXNjYXBlXCIgJiYgY2xvc2FibGUpXHJcbiAgICAgICAgb3BlbiA9IGZhbHNlO1xyXG4gICAgcHJldmlvdXNGb2N1cyA9PT0gbnVsbCB8fCBwcmV2aW91c0ZvY3VzID09PSB2b2lkIDAgPyB2b2lkIDAgOiBwcmV2aW91c0ZvY3VzLmZvY3VzKCk7XHJcbn1cclxuZnVuY3Rpb24gdG9nZ2xlRmx5b3V0KCkge1xyXG4gICAgcHJldmlvdXNGb2N1cyA9IGRvY3VtZW50LmFjdGl2ZUVsZW1lbnQ7XHJcbiAgICBvcGVuID0gIW9wZW47XHJcbn1cclxuZnVuY3Rpb24gY2xvc2VGbHlvdXQoKSB7XHJcbiAgICBpZiAoY2xvc2FibGUpXHJcbiAgICAgICAgb3BlbiA9IGZhbHNlO1xyXG59XHJcbnNldENvbnRleHQoXCJjbG9zZUZseW91dFwiLCBldmVudCA9PiB7XHJcbiAgICBkaXNwYXRjaChcInNlbGVjdFwiKTtcclxuICAgIGlmIChjbG9zZU9uU2VsZWN0ICYmIGNsb3NhYmxlKSB7XHJcbiAgICAgICAgZXZlbnQuc3RvcFByb3BhZ2F0aW9uKCk7XHJcbiAgICAgICAgb3BlbiA9IGZhbHNlO1xyXG4gICAgfVxyXG59KTtcclxuPC9zY3JpcHQ+XG5cbjxzdmVsdGU6d2luZG93IG9uOmtleWRvd249e2hhbmRsZUVzY2FwZUtleX0gLz5cblxuPGRpdlxuXHRjbGFzcz1cIm1lbnUtZmx5b3V0LXdyYXBwZXIge2NsYXNzTmFtZX1cIlxuXHRhcmlhLWV4cGFuZGVkPXtvcGVufVxuXHRhcmlhLWhhc3BvcHVwPXtvcGVufVxuXHRhcmlhLWNvbnRyb2xzPXttZW51SWR9XG5cdG9uOmNsaWNrPXt0b2dnbGVGbHlvdXR9XG5cdGJpbmQ6dGhpcz17d3JhcHBlckVsZW1lbnR9XG4+XG5cdDxzbG90IC8+XG5cdHsjaWYgb3Blbn1cblx0XHQ8ZGl2XG5cdFx0XHRpZD17bWVudUlkfVxuXHRcdFx0Y2xhc3M9XCJtZW51LWZseW91dC1hbmNob3IgcGxhY2VtZW50LXtwbGFjZW1lbnR9IGFsaWdubWVudC17YWxpZ25tZW50fVwiXG5cdFx0XHRzdHlsZT1cIi0tZmRzLW1lbnUtZmx5b3V0LW9mZnNldDoge29mZnNldH1weDtcIlxuXHRcdFx0dGFiaW5kZXg9XCItMVwiXG5cdFx0XHRiaW5kOnRoaXM9e2FuY2hvckVsZW1lbnR9XG5cdFx0XHR1c2U6YXJyb3dOYXZpZ2F0aW9uPXt7IHByZXZlbnRUYWI6IHRydWUgfX1cblx0XHRcdG9uOmNsaWNrPXtlID0+IGUuc3RvcFByb3BhZ2F0aW9uKCl9XG5cdFx0PlxuXHRcdFx0PE1lbnVGbHlvdXRTdXJmYWNlIGJpbmQ6ZWxlbWVudD17bWVudUVsZW1lbnR9IGJpbmQ6dGhpcz17bWVudX0gey4uLiQkcmVzdFByb3BzfT5cblx0XHRcdFx0PHNsb3QgbmFtZT1cImZseW91dFwiIC8+XG5cdFx0XHQ8L01lbnVGbHlvdXRTdXJmYWNlPlxuXHRcdDwvZGl2PlxuXHRcdDxkaXZcblx0XHRcdGNsYXNzPVwibWVudS1mbHlvdXQtYmFja2Ryb3BcIlxuXHRcdFx0YmluZDp0aGlzPXtiYWNrZHJvcEVsZW1lbnR9XG5cdFx0XHRvbjpjbGljaz17ZSA9PiBlLnN0b3BQcm9wYWdhdGlvbigpfVxuXHRcdFx0b246bW91c2Vkb3duPXtjbG9zZUZseW91dH1cblx0XHQvPlxuXHR7L2lmfVxuPC9kaXY+XG5cbjxzdHlsZSA+Lm1lbnUtZmx5b3V0LXdyYXBwZXJ7ZGlzcGxheTppbmxpbmUtYmxvY2s7aGVpZ2h0OmF1dG87cG9zaXRpb246cmVsYXRpdmV9Lm1lbnUtZmx5b3V0LWJhY2tkcm9we2hlaWdodDoxMDAlO2xlZnQ6MDtwb3NpdGlvbjpmaXhlZDt0b3A6MDt3aWR0aDoxMDAlO3otaW5kZXg6OTk5OX0ubWVudS1mbHlvdXQtYW5jaG9ye3Bvc2l0aW9uOmFic29sdXRlO3otaW5kZXg6MTAwMDB9Lm1lbnUtZmx5b3V0LWFuY2hvci5wbGFjZW1lbnQtdG9wey0tZmRzLW1lbnUtZmx5b3V0LXRyYW5zaXRpb24tb2Zmc2V0OjUwJTtib3R0b206Y2FsYygxMDAlICsgdmFyKC0tZmRzLW1lbnUtZmx5b3V0LW9mZnNldCkpfS5tZW51LWZseW91dC1hbmNob3IucGxhY2VtZW50LWJvdHRvbXt0b3A6Y2FsYygxMDAlICsgdmFyKC0tZmRzLW1lbnUtZmx5b3V0LW9mZnNldCkpfS5tZW51LWZseW91dC1hbmNob3IucGxhY2VtZW50LWxlZnR7cmlnaHQ6Y2FsYygxMDAlICsgdmFyKC0tZmRzLW1lbnUtZmx5b3V0LW9mZnNldCkpfS5tZW51LWZseW91dC1hbmNob3IucGxhY2VtZW50LXJpZ2h0e2xlZnQ6Y2FsYygxMDAlICsgdmFyKC0tZmRzLW1lbnUtZmx5b3V0LW9mZnNldCkpfS5tZW51LWZseW91dC1hbmNob3IucGxhY2VtZW50LWJvdHRvbS5hbGlnbm1lbnQtc3RhcnQsLm1lbnUtZmx5b3V0LWFuY2hvci5wbGFjZW1lbnQtdG9wLmFsaWdubWVudC1zdGFydHtpbnNldC1pbmxpbmUtc3RhcnQ6MH0ubWVudS1mbHlvdXQtYW5jaG9yLnBsYWNlbWVudC1ib3R0b20uYWxpZ25tZW50LWVuZCwubWVudS1mbHlvdXQtYW5jaG9yLnBsYWNlbWVudC10b3AuYWxpZ25tZW50LWVuZHtpbnNldC1pbmxpbmUtZW5kOjB9Lm1lbnUtZmx5b3V0LWFuY2hvci5wbGFjZW1lbnQtYm90dG9tLmFsaWdubWVudC1jZW50ZXIsLm1lbnUtZmx5b3V0LWFuY2hvci5wbGFjZW1lbnQtdG9wLmFsaWdubWVudC1jZW50ZXJ7aW5zZXQtaW5saW5lLXN0YXJ0OjUwJTt0cmFuc2Zvcm06dHJhbnNsYXRlWCgtNTAlKX0ubWVudS1mbHlvdXQtYW5jaG9yLnBsYWNlbWVudC1sZWZ0LmFsaWdubWVudC1zdGFydCwubWVudS1mbHlvdXQtYW5jaG9yLnBsYWNlbWVudC1yaWdodC5hbGlnbm1lbnQtc3RhcnR7aW5zZXQtYmxvY2stc3RhcnQ6MH0ubWVudS1mbHlvdXQtYW5jaG9yLnBsYWNlbWVudC1sZWZ0LmFsaWdubWVudC1lbmQsLm1lbnUtZmx5b3V0LWFuY2hvci5wbGFjZW1lbnQtcmlnaHQuYWxpZ25tZW50LWVuZHtpbnNldC1ibG9jay1lbmQ6MH0ubWVudS1mbHlvdXQtYW5jaG9yLnBsYWNlbWVudC1sZWZ0LmFsaWdubWVudC1jZW50ZXIsLm1lbnUtZmx5b3V0LWFuY2hvci5wbGFjZW1lbnQtcmlnaHQuYWxpZ25tZW50LWNlbnRlcntpbnNldC1ibG9jay1zdGFydDo1MCU7dHJhbnNmb3JtOnRyYW5zbGF0ZVkoLTUwJSl9PC9zdHlsZT5cbiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUEwRlEsa0NBQW9CLENBQUMsUUFBUSxZQUFZLENBQUMsT0FBTyxJQUFJLENBQUMsU0FBUyxRQUFRLENBQUMsbUNBQXFCLENBQUMsT0FBTyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUMsU0FBUyxLQUFLLENBQUMsSUFBSSxDQUFDLENBQUMsTUFBTSxJQUFJLENBQUMsUUFBUSxJQUFJLENBQUMsaUNBQW1CLENBQUMsU0FBUyxRQUFRLENBQUMsUUFBUSxLQUFLLENBQUMsbUJBQW1CLDRCQUFjLENBQUMsb0NBQW9DLEdBQUcsQ0FBQyxPQUFPLEtBQUssSUFBSSxDQUFDLENBQUMsQ0FBQyxJQUFJLHdCQUF3QixDQUFDLENBQUMsQ0FBQyxtQkFBbUIsK0JBQWlCLENBQUMsSUFBSSxLQUFLLElBQUksQ0FBQyxDQUFDLENBQUMsSUFBSSx3QkFBd0IsQ0FBQyxDQUFDLENBQUMsbUJBQW1CLDZCQUFlLENBQUMsTUFBTSxLQUFLLElBQUksQ0FBQyxDQUFDLENBQUMsSUFBSSx3QkFBd0IsQ0FBQyxDQUFDLENBQUMsbUJBQW1CLDhCQUFnQixDQUFDLEtBQUssS0FBSyxJQUFJLENBQUMsQ0FBQyxDQUFDLElBQUksd0JBQXdCLENBQUMsQ0FBQyxDQUFDLG1CQUFtQixpQkFBaUIsOEJBQWdCLENBQUMsbUJBQW1CLGNBQWMsOEJBQWdCLENBQUMsbUJBQW1CLENBQUMsQ0FBQyxtQkFBbUIsaUJBQWlCLDRCQUFjLENBQUMsbUJBQW1CLGNBQWMsNEJBQWMsQ0FBQyxpQkFBaUIsQ0FBQyxDQUFDLG1CQUFtQixpQkFBaUIsK0JBQWlCLENBQUMsbUJBQW1CLGNBQWMsK0JBQWlCLENBQUMsbUJBQW1CLEdBQUcsQ0FBQyxVQUFVLFdBQVcsSUFBSSxDQUFDLENBQUMsbUJBQW1CLGVBQWUsOEJBQWdCLENBQUMsbUJBQW1CLGdCQUFnQiw4QkFBZ0IsQ0FBQyxrQkFBa0IsQ0FBQyxDQUFDLG1CQUFtQixlQUFlLDRCQUFjLENBQUMsbUJBQW1CLGdCQUFnQiw0QkFBYyxDQUFDLGdCQUFnQixDQUFDLENBQUMsbUJBQW1CLGVBQWUsK0JBQWlCLENBQUMsbUJBQW1CLGdCQUFnQiwrQkFBaUIsQ0FBQyxrQkFBa0IsR0FBRyxDQUFDLFVBQVUsV0FBVyxJQUFJLENBQUMsQ0FBQyJ9 */");
}

const get_flyout_slot_changes = dirty => ({});
const get_flyout_slot_context = ctx => ({});

// (68:1) {#if open}
function create_if_block(ctx) {
	let div0;
	let menuflyoutsurface;
	let updating_element;
	let div0_class_value;
	let arrowNavigation_action;
	let t;
	let div1;
	let current;
	let mounted;
	let dispose;
	const menuflyoutsurface_spread_levels = [/*$$restProps*/ ctx[14]];

	function menuflyoutsurface_element_binding(value) {
		/*menuflyoutsurface_element_binding*/ ctx[18](value);
	}

	let menuflyoutsurface_props = {
		$$slots: { default: [create_default_slot] },
		$$scope: { ctx }
	};

	for (let i = 0; i < menuflyoutsurface_spread_levels.length; i += 1) {
		menuflyoutsurface_props = assign(menuflyoutsurface_props, menuflyoutsurface_spread_levels[i]);
	}

	if (/*menuElement*/ ctx[1] !== void 0) {
		menuflyoutsurface_props.element = /*menuElement*/ ctx[1];
	}

	menuflyoutsurface = new MenuFlyoutSurface({
			props: menuflyoutsurface_props,
			$$inline: true
		});

	binding_callbacks.push(() => bind(menuflyoutsurface, 'element', menuflyoutsurface_element_binding));
	/*menuflyoutsurface_binding*/ ctx[19](menuflyoutsurface);

	const block = {
		c: function create() {
			div0 = element("div");
			create_component(menuflyoutsurface.$$.fragment);
			t = space();
			div1 = element("div");
			attr_dev(div0, "id", /*menuId*/ ctx[10]);
			attr_dev(div0, "class", div0_class_value = "menu-flyout-anchor placement-" + /*placement*/ ctx[5] + " alignment-" + /*alignment*/ ctx[6] + " svelte-as1gqa");
			set_style(div0, "--fds-menu-flyout-offset", /*offset*/ ctx[7] + "px");
			attr_dev(div0, "tabindex", "-1");
			add_location(div0, file, 68, 2, 2455);
			attr_dev(div1, "class", "menu-flyout-backdrop svelte-as1gqa");
			add_location(div1, file, 81, 2, 2879);
		},
		m: function mount(target, anchor) {
			insert_dev(target, div0, anchor);
			mount_component(menuflyoutsurface, div0, null);
			/*div0_binding*/ ctx[20](div0);
			insert_dev(target, t, anchor);
			insert_dev(target, div1, anchor);
			/*div1_binding*/ ctx[21](div1);
			current = true;

			if (!mounted) {
				dispose = [
					action_destroyer(arrowNavigation_action = arrowNavigation.call(null, div0, { preventTab: true })),
					listen_dev(div0, "click", click_handler, false, false, false),
					listen_dev(div1, "click", click_handler_1, false, false, false),
					listen_dev(div1, "mousedown", /*closeFlyout*/ ctx[13], false, false, false)
				];

				mounted = true;
			}
		},
		p: function update(ctx, dirty) {
			const menuflyoutsurface_changes = (dirty & /*$$restProps*/ 16384)
			? get_spread_update(menuflyoutsurface_spread_levels, [get_spread_object(/*$$restProps*/ ctx[14])])
			: {};

			if (dirty & /*$$scope*/ 8388608) {
				menuflyoutsurface_changes.$$scope = { dirty, ctx };
			}

			if (!updating_element && dirty & /*menuElement*/ 2) {
				updating_element = true;
				menuflyoutsurface_changes.element = /*menuElement*/ ctx[1];
				add_flush_callback(() => updating_element = false);
			}

			menuflyoutsurface.$set(menuflyoutsurface_changes);

			if (!current || dirty & /*placement, alignment*/ 96 && div0_class_value !== (div0_class_value = "menu-flyout-anchor placement-" + /*placement*/ ctx[5] + " alignment-" + /*alignment*/ ctx[6] + " svelte-as1gqa")) {
				attr_dev(div0, "class", div0_class_value);
			}

			if (!current || dirty & /*offset*/ 128) {
				set_style(div0, "--fds-menu-flyout-offset", /*offset*/ ctx[7] + "px");
			}
		},
		i: function intro(local) {
			if (current) return;
			transition_in(menuflyoutsurface.$$.fragment, local);
			current = true;
		},
		o: function outro(local) {
			transition_out(menuflyoutsurface.$$.fragment, local);
			current = false;
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(div0);
			/*menuflyoutsurface_binding*/ ctx[19](null);
			destroy_component(menuflyoutsurface);
			/*div0_binding*/ ctx[20](null);
			if (detaching) detach_dev(t);
			if (detaching) detach_dev(div1);
			/*div1_binding*/ ctx[21](null);
			mounted = false;
			run_all(dispose);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_if_block.name,
		type: "if",
		source: "(68:1) {#if open}",
		ctx
	});

	return block;
}

// (78:3) <MenuFlyoutSurface bind:element={menuElement} bind:this={menu} {...$$restProps}>
function create_default_slot(ctx) {
	let current;
	const flyout_slot_template = /*#slots*/ ctx[17].flyout;
	const flyout_slot = create_slot(flyout_slot_template, ctx, /*$$scope*/ ctx[23], get_flyout_slot_context);

	const block = {
		c: function create() {
			if (flyout_slot) flyout_slot.c();
		},
		m: function mount(target, anchor) {
			if (flyout_slot) {
				flyout_slot.m(target, anchor);
			}

			current = true;
		},
		p: function update(ctx, dirty) {
			if (flyout_slot) {
				if (flyout_slot.p && (!current || dirty & /*$$scope*/ 8388608)) {
					update_slot_base(
						flyout_slot,
						flyout_slot_template,
						ctx,
						/*$$scope*/ ctx[23],
						!current
						? get_all_dirty_from_scope(/*$$scope*/ ctx[23])
						: get_slot_changes(flyout_slot_template, /*$$scope*/ ctx[23], dirty, get_flyout_slot_changes),
						get_flyout_slot_context
					);
				}
			}
		},
		i: function intro(local) {
			if (current) return;
			transition_in(flyout_slot, local);
			current = true;
		},
		o: function outro(local) {
			transition_out(flyout_slot, local);
			current = false;
		},
		d: function destroy(detaching) {
			if (flyout_slot) flyout_slot.d(detaching);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_default_slot.name,
		type: "slot",
		source: "(78:3) <MenuFlyoutSurface bind:element={menuElement} bind:this={menu} {...$$restProps}>",
		ctx
	});

	return block;
}

function create_fragment(ctx) {
	let div;
	let t;
	let div_class_value;
	let current;
	let mounted;
	let dispose;
	const default_slot_template = /*#slots*/ ctx[17].default;
	const default_slot = create_slot(default_slot_template, ctx, /*$$scope*/ ctx[23], null);
	let if_block = /*open*/ ctx[0] && create_if_block(ctx);

	const block = {
		c: function create() {
			div = element("div");
			if (default_slot) default_slot.c();
			t = space();
			if (if_block) if_block.c();
			attr_dev(div, "class", div_class_value = "menu-flyout-wrapper " + /*className*/ ctx[8] + " svelte-as1gqa");
			attr_dev(div, "aria-expanded", /*open*/ ctx[0]);
			attr_dev(div, "aria-haspopup", /*open*/ ctx[0]);
			attr_dev(div, "aria-controls", /*menuId*/ ctx[10]);
			add_location(div, file, 58, 0, 2262);
		},
		l: function claim(nodes) {
			throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option");
		},
		m: function mount(target, anchor) {
			insert_dev(target, div, anchor);

			if (default_slot) {
				default_slot.m(div, null);
			}

			append_dev(div, t);
			if (if_block) if_block.m(div, null);
			/*div_binding*/ ctx[22](div);
			current = true;

			if (!mounted) {
				dispose = [
					listen_dev(window, "keydown", /*handleEscapeKey*/ ctx[11], false, false, false),
					listen_dev(div, "click", /*toggleFlyout*/ ctx[12], false, false, false)
				];

				mounted = true;
			}
		},
		p: function update(ctx, [dirty]) {
			if (default_slot) {
				if (default_slot.p && (!current || dirty & /*$$scope*/ 8388608)) {
					update_slot_base(
						default_slot,
						default_slot_template,
						ctx,
						/*$$scope*/ ctx[23],
						!current
						? get_all_dirty_from_scope(/*$$scope*/ ctx[23])
						: get_slot_changes(default_slot_template, /*$$scope*/ ctx[23], dirty, null),
						null
					);
				}
			}

			if (/*open*/ ctx[0]) {
				if (if_block) {
					if_block.p(ctx, dirty);

					if (dirty & /*open*/ 1) {
						transition_in(if_block, 1);
					}
				} else {
					if_block = create_if_block(ctx);
					if_block.c();
					transition_in(if_block, 1);
					if_block.m(div, null);
				}
			} else if (if_block) {
				group_outros();

				transition_out(if_block, 1, 1, () => {
					if_block = null;
				});

				check_outros();
			}

			if (!current || dirty & /*className*/ 256 && div_class_value !== (div_class_value = "menu-flyout-wrapper " + /*className*/ ctx[8] + " svelte-as1gqa")) {
				attr_dev(div, "class", div_class_value);
			}

			if (!current || dirty & /*open*/ 1) {
				attr_dev(div, "aria-expanded", /*open*/ ctx[0]);
			}

			if (!current || dirty & /*open*/ 1) {
				attr_dev(div, "aria-haspopup", /*open*/ ctx[0]);
			}
		},
		i: function intro(local) {
			if (current) return;
			transition_in(default_slot, local);
			transition_in(if_block);
			current = true;
		},
		o: function outro(local) {
			transition_out(default_slot, local);
			transition_out(if_block);
			current = false;
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(div);
			if (default_slot) default_slot.d(detaching);
			if (if_block) if_block.d();
			/*div_binding*/ ctx[22](null);
			mounted = false;
			run_all(dispose);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

const click_handler = e => e.stopPropagation();
const click_handler_1 = e => e.stopPropagation();

function instance($$self, $$props, $$invalidate) {
	const omit_props_names = [
		"open","closable","closeOnSelect","placement","alignment","offset","class","wrapperElement","anchorElement","menuElement","backdropElement"
	];

	let $$restProps = compute_rest_props($$props, omit_props_names);
	let { $$slots: slots = {}, $$scope } = $$props;
	validate_slots('MenuFlyoutWrapper', slots, ['default','flyout']);
	let { open = false } = $$props;
	let { closable = true } = $$props;
	let { closeOnSelect = true } = $$props;
	let { placement = "top" } = $$props;
	let { alignment = "center" } = $$props;
	let { offset = 4 } = $$props;
	let { class: className = "" } = $$props;
	let { wrapperElement = null } = $$props;
	let { anchorElement = null } = $$props;
	let { menuElement = null } = $$props;
	let { backdropElement = null } = $$props;
	const dispatch = createEventDispatcher();
	const menuId = uid("fds-menu-flyout-anchor-");
	let menu = null;
	let previousFocus = null;

	function handleEscapeKey({ key }) {
		if (key === "Escape" && closable) $$invalidate(0, open = false);

		previousFocus === null || previousFocus === void 0
		? void 0
		: previousFocus.focus();
	}

	function toggleFlyout() {
		previousFocus = document.activeElement;
		$$invalidate(0, open = !open);
	}

	function closeFlyout() {
		if (closable) $$invalidate(0, open = false);
	}

	setContext("closeFlyout", event => {
		dispatch("select");

		if (closeOnSelect && closable) {
			event.stopPropagation();
			$$invalidate(0, open = false);
		}
	});

	function menuflyoutsurface_element_binding(value) {
		menuElement = value;
		$$invalidate(1, menuElement);
	}

	function menuflyoutsurface_binding($$value) {
		binding_callbacks[$$value ? 'unshift' : 'push'](() => {
			menu = $$value;
			$$invalidate(9, menu);
		});
	}

	function div0_binding($$value) {
		binding_callbacks[$$value ? 'unshift' : 'push'](() => {
			anchorElement = $$value;
			$$invalidate(3, anchorElement);
		});
	}

	function div1_binding($$value) {
		binding_callbacks[$$value ? 'unshift' : 'push'](() => {
			backdropElement = $$value;
			$$invalidate(4, backdropElement);
		});
	}

	function div_binding($$value) {
		binding_callbacks[$$value ? 'unshift' : 'push'](() => {
			wrapperElement = $$value;
			$$invalidate(2, wrapperElement);
		});
	}

	$$self.$$set = $$new_props => {
		$$props = assign(assign({}, $$props), exclude_internal_props($$new_props));
		$$invalidate(14, $$restProps = compute_rest_props($$props, omit_props_names));
		if ('open' in $$new_props) $$invalidate(0, open = $$new_props.open);
		if ('closable' in $$new_props) $$invalidate(15, closable = $$new_props.closable);
		if ('closeOnSelect' in $$new_props) $$invalidate(16, closeOnSelect = $$new_props.closeOnSelect);
		if ('placement' in $$new_props) $$invalidate(5, placement = $$new_props.placement);
		if ('alignment' in $$new_props) $$invalidate(6, alignment = $$new_props.alignment);
		if ('offset' in $$new_props) $$invalidate(7, offset = $$new_props.offset);
		if ('class' in $$new_props) $$invalidate(8, className = $$new_props.class);
		if ('wrapperElement' in $$new_props) $$invalidate(2, wrapperElement = $$new_props.wrapperElement);
		if ('anchorElement' in $$new_props) $$invalidate(3, anchorElement = $$new_props.anchorElement);
		if ('menuElement' in $$new_props) $$invalidate(1, menuElement = $$new_props.menuElement);
		if ('backdropElement' in $$new_props) $$invalidate(4, backdropElement = $$new_props.backdropElement);
		if ('$$scope' in $$new_props) $$invalidate(23, $$scope = $$new_props.$$scope);
	};

	$$self.$capture_state = () => ({
		tabbable,
		createEventDispatcher,
		setContext,
		arrowNavigation,
		uid,
		MenuFlyoutSurface,
		open,
		closable,
		closeOnSelect,
		placement,
		alignment,
		offset,
		className,
		wrapperElement,
		anchorElement,
		menuElement,
		backdropElement,
		dispatch,
		menuId,
		menu,
		previousFocus,
		handleEscapeKey,
		toggleFlyout,
		closeFlyout
	});

	$$self.$inject_state = $$new_props => {
		if ('open' in $$props) $$invalidate(0, open = $$new_props.open);
		if ('closable' in $$props) $$invalidate(15, closable = $$new_props.closable);
		if ('closeOnSelect' in $$props) $$invalidate(16, closeOnSelect = $$new_props.closeOnSelect);
		if ('placement' in $$props) $$invalidate(5, placement = $$new_props.placement);
		if ('alignment' in $$props) $$invalidate(6, alignment = $$new_props.alignment);
		if ('offset' in $$props) $$invalidate(7, offset = $$new_props.offset);
		if ('className' in $$props) $$invalidate(8, className = $$new_props.className);
		if ('wrapperElement' in $$props) $$invalidate(2, wrapperElement = $$new_props.wrapperElement);
		if ('anchorElement' in $$props) $$invalidate(3, anchorElement = $$new_props.anchorElement);
		if ('menuElement' in $$props) $$invalidate(1, menuElement = $$new_props.menuElement);
		if ('backdropElement' in $$props) $$invalidate(4, backdropElement = $$new_props.backdropElement);
		if ('menu' in $$props) $$invalidate(9, menu = $$new_props.menu);
		if ('previousFocus' in $$props) previousFocus = $$new_props.previousFocus;
	};

	if ($$props && "$$inject" in $$props) {
		$$self.$inject_state($$props.$$inject);
	}

	$$self.$$.update = () => {
		if ($$self.$$.dirty & /*open*/ 1) {
			$: dispatch(open ? "open" : "close");
		}

		if ($$self.$$.dirty & /*menu, menuElement*/ 514) {
			$: if (menu && tabbable(menuElement).length > 0) tabbable(menuElement)[0].focus();
		}
	};

	return [
		open,
		menuElement,
		wrapperElement,
		anchorElement,
		backdropElement,
		placement,
		alignment,
		offset,
		className,
		menu,
		menuId,
		handleEscapeKey,
		toggleFlyout,
		closeFlyout,
		$$restProps,
		closable,
		closeOnSelect,
		slots,
		menuflyoutsurface_element_binding,
		menuflyoutsurface_binding,
		div0_binding,
		div1_binding,
		div_binding,
		$$scope
	];
}

class MenuFlyoutWrapper extends SvelteComponentDev {
	constructor(options) {
		super(options);

		init(
			this,
			options,
			instance,
			create_fragment,
			safe_not_equal,
			{
				open: 0,
				closable: 15,
				closeOnSelect: 16,
				placement: 5,
				alignment: 6,
				offset: 7,
				class: 8,
				wrapperElement: 2,
				anchorElement: 3,
				menuElement: 1,
				backdropElement: 4
			},
			add_css
		);

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "MenuFlyoutWrapper",
			options,
			id: create_fragment.name
		});
	}

	get open() {
		throw new Error("<MenuFlyoutWrapper>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set open(value) {
		throw new Error("<MenuFlyoutWrapper>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get closable() {
		throw new Error("<MenuFlyoutWrapper>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set closable(value) {
		throw new Error("<MenuFlyoutWrapper>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get closeOnSelect() {
		throw new Error("<MenuFlyoutWrapper>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set closeOnSelect(value) {
		throw new Error("<MenuFlyoutWrapper>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get placement() {
		throw new Error("<MenuFlyoutWrapper>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set placement(value) {
		throw new Error("<MenuFlyoutWrapper>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get alignment() {
		throw new Error("<MenuFlyoutWrapper>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set alignment(value) {
		throw new Error("<MenuFlyoutWrapper>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get offset() {
		throw new Error("<MenuFlyoutWrapper>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set offset(value) {
		throw new Error("<MenuFlyoutWrapper>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get class() {
		throw new Error("<MenuFlyoutWrapper>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set class(value) {
		throw new Error("<MenuFlyoutWrapper>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get wrapperElement() {
		throw new Error("<MenuFlyoutWrapper>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set wrapperElement(value) {
		throw new Error("<MenuFlyoutWrapper>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get anchorElement() {
		throw new Error("<MenuFlyoutWrapper>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set anchorElement(value) {
		throw new Error("<MenuFlyoutWrapper>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get menuElement() {
		throw new Error("<MenuFlyoutWrapper>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set menuElement(value) {
		throw new Error("<MenuFlyoutWrapper>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get backdropElement() {
		throw new Error("<MenuFlyoutWrapper>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set backdropElement(value) {
		throw new Error("<MenuFlyoutWrapper>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}
}

export default MenuFlyoutWrapper;