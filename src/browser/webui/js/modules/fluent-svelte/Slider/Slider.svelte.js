/* Slider.svelte generated by Svelte v3.48.0 */
import {
	SvelteComponentDev,
	action_destroyer,
	add_location,
	add_render_callback,
	add_resize_listener,
	append_dev,
	append_styles,
	assign,
	attr_dev,
	binding_callbacks,
	check_outros,
	compute_rest_props,
	create_component,
	create_slot,
	destroy_component,
	destroy_each,
	detach_dev,
	dispatch_dev,
	element,
	exclude_internal_props,
	get_all_dirty_from_scope,
	get_slot_changes,
	get_spread_update,
	globals,
	group_outros,
	init,
	insert_dev,
	listen_dev,
	mount_component,
	noop,
	prevent_default,
	prop_dev,
	run_all,
	safe_not_equal,
	set_attributes,
	set_data_dev,
	set_style,
	space,
	text,
	toggle_class,
	transition_in,
	transition_out,
	update_slot_base,
	validate_each_argument,
	validate_slots
} from "nereid://.svelte/internal/index.mjs";

const { window: window_1 } = globals;
import { createEventForwarder, TooltipSurface } from "../internal.js";
import { createEventDispatcher } from "nereid://.svelte/index.mjs";
import { get_current_component } from "nereid://.svelte/internal/index.mjs";
const file = "Slider.svelte";

function add_css(target) {
	append_styles(target, "svelte-1ikqxku", ".slider.svelte-1ikqxku.svelte-1ikqxku{align-items:center;border-radius:var(--fds-control-corner-radius);display:flex;justify-content:center;min-block-size:32px;min-inline-size:32px;position:relative}.slider.svelte-1ikqxku>*{direction:ltr}.slider.svelte-1ikqxku.svelte-1ikqxku:focus-visible{box-shadow:var(--fds-focus-stroke);outline:none}.slider-thumb.svelte-1ikqxku:active .slider-tooltip,.slider.svelte-1ikqxku:active .slider-tooltip,.slider.svelte-1ikqxku:focus-visible .slider-tooltip{opacity:1}.slider.orientation-horizontal.svelte-1ikqxku.svelte-1ikqxku{block-size:32px;inline-size:100%}.slider.orientation-horizontal.svelte-1ikqxku .slider-rail.svelte-1ikqxku{block-size:4px;inline-size:100%;justify-content:flex-start}.slider.orientation-horizontal.svelte-1ikqxku .slider-track.svelte-1ikqxku{block-size:100%;inline-size:var(--fds-slider-percentage)}.slider.orientation-horizontal.svelte-1ikqxku .slider-thumb.svelte-1ikqxku{inset-inline-start:calc(var(--fds-slider-percentage) + var(--fds-slider-thumb-offset));transform:translateX(-50%)}.slider.orientation-horizontal.svelte-1ikqxku .slider-tick.svelte-1ikqxku{flex-direction:column;height:100%;inset-inline-start:var(--fds-slider-tick-percentage);padding:6px 0}.slider.orientation-horizontal.svelte-1ikqxku .slider-tick.svelte-1ikqxku:after,.slider.orientation-horizontal.svelte-1ikqxku .slider-tick.svelte-1ikqxku:before{-webkit-border-start:1px solid var(--fds-control-strong-fill-default);border-inline-start:1px solid var(--fds-control-strong-fill-default);height:4px;width:1px}.slider.orientation-horizontal.reverse.svelte-1ikqxku .slider-rail.svelte-1ikqxku{justify-content:flex-end}.slider.orientation-horizontal.reverse.svelte-1ikqxku .slider-thumb.svelte-1ikqxku{inset-inline-end:calc(var(--fds-slider-percentage) + var(--fds-slider-thumb-offset));inset-inline-start:unset;transform:translateX(50%)}.slider.orientation-horizontal.reverse.svelte-1ikqxku .slider-tick.svelte-1ikqxku{inset-inline-end:var(--fds-slider-tick-percentage);inset-inline-start:unset}.slider.orientation-vertical.svelte-1ikqxku.svelte-1ikqxku{block-size:100%;inline-size:32px}.slider.orientation-vertical.svelte-1ikqxku .slider-rail.svelte-1ikqxku{align-items:flex-end;block-size:100%;inline-size:4px}.slider.orientation-vertical.svelte-1ikqxku .slider-track.svelte-1ikqxku{block-size:var(--fds-slider-percentage);inline-size:100%}.slider.orientation-vertical.svelte-1ikqxku .slider-thumb.svelte-1ikqxku{inset-block-end:calc(var(--fds-slider-percentage) + var(--fds-slider-thumb-offset));transform:translateY(50%)}.slider.orientation-vertical.svelte-1ikqxku .slider-tick.svelte-1ikqxku{inset-block-end:var(--fds-slider-tick-percentage);padding:0 6px;width:100%}.slider.orientation-vertical.svelte-1ikqxku .slider-tick.svelte-1ikqxku:after,.slider.orientation-vertical.svelte-1ikqxku .slider-tick.svelte-1ikqxku:before{-webkit-border-before:1px solid var(--fds-control-strong-fill-default);border-block-start:1px solid var(--fds-control-strong-fill-default);height:1px;width:4px}.slider.orientation-vertical.reverse.svelte-1ikqxku .slider-rail.svelte-1ikqxku{align-items:flex-start}.slider.orientation-vertical.reverse.svelte-1ikqxku .slider-thumb.svelte-1ikqxku{inset-block-end:unset;inset-block-start:calc(var(--fds-slider-percentage) + var(--fds-slider-thumb-offset));transform:translateY(-50%)}.slider.orientation-vertical.reverse.svelte-1ikqxku .slider-tick.svelte-1ikqxku{inset-block-end:unset;inset-block-start:var(--fds-slider-tick-percentage)}.slider.disabled.svelte-1ikqxku .slider-rail.svelte-1ikqxku,.slider.disabled.svelte-1ikqxku .slider-thumb.svelte-1ikqxku:before,.slider.disabled.svelte-1ikqxku .slider-track.svelte-1ikqxku{background-color:var(--fds-accent-disabled)}.slider.disabled.svelte-1ikqxku .slider-thumb.svelte-1ikqxku:before{transform:none}.slider.disabled.svelte-1ikqxku .slider-tick.svelte-1ikqxku:after,.slider.disabled.svelte-1ikqxku .slider-tick.svelte-1ikqxku:before{border-color:var(--fds-control-fill-disabled)}.slider-rail.svelte-1ikqxku.svelte-1ikqxku{align-items:center;background-color:var(--fds-control-strong-fill-default);border-radius:50px;display:flex;overflow:hidden}.slider-track.svelte-1ikqxku.svelte-1ikqxku{background-color:var(--fds-accent-default)}.slider-tick-bar.svelte-1ikqxku.svelte-1ikqxku{height:100%;inset-block-start:0;inset-inline-start:0;position:absolute;width:100%;z-index:-1}.slider-tick-bar.placement-after.svelte-1ikqxku .slider-tick.svelte-1ikqxku:before,.slider-tick-bar.placement-before.svelte-1ikqxku .slider-tick.svelte-1ikqxku:after{visibility:hidden}.slider-tick.svelte-1ikqxku.svelte-1ikqxku{align-items:center;box-sizing:border-box;display:flex;justify-content:space-between;position:absolute}.slider-tick.svelte-1ikqxku.svelte-1ikqxku:after,.slider-tick.svelte-1ikqxku.svelte-1ikqxku:before{content:\"\"}.slider-thumb.svelte-1ikqxku.svelte-1ikqxku{align-items:center;background-color:var(--fds-control-solid-fill-default);block-size:20px;box-shadow:0 0 0 1px var(--fds-control-stroke-default);display:flex;inline-size:20px;justify-content:center;z-index:10}.slider-thumb.svelte-1ikqxku.svelte-1ikqxku,.slider-thumb.svelte-1ikqxku.svelte-1ikqxku:before{border-radius:100%;position:absolute}.slider-thumb.svelte-1ikqxku.svelte-1ikqxku:before{background-color:var(--fds-accent-default);block-size:12px;content:\"\";inline-size:12px;transition:var(--fds-control-fast-duration) var(--fds-control-fast-out-slow-in-easing) transform}.slider-thumb.svelte-1ikqxku.svelte-1ikqxku:hover:before{transform:scale(1.167)}.slider-thumb.svelte-1ikqxku:hover .slider-tooltip{opacity:1;transition-delay:1s}.slider-thumb.svelte-1ikqxku.svelte-1ikqxku:active:before{background-color:var(--fds-accent-tertiary);transform:scale(.833)}.slider.svelte-1ikqxku .slider-tooltip{inset-block-end:calc(100% + 18px);inset-inline-start:50%;max-inline-size:unset;opacity:0;pointer-events:none;position:absolute;transform:translateX(-50%);transition:var(--fds-control-fast-duration) linear opacity;white-space:nowrap;z-index:100}\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */");
}

function get_each_context(ctx, list, i) {
	const child_ctx = ctx.slice();
	child_ctx[46] = list[i];
	return child_ctx;
}

const get_tooltip_slot_changes = dirty => ({
	prefix: dirty[0] & /*prefix*/ 8192,
	suffix: dirty[0] & /*suffix*/ 16384,
	value: dirty[0] & /*value*/ 1
});

const get_tooltip_slot_context = ctx => ({
	prefix: /*prefix*/ ctx[13],
	suffix: /*suffix*/ ctx[14],
	value: /*value*/ ctx[0]
});

// (200:2) {#if tooltip && !disabled}
function create_if_block_2(ctx) {
	let tooltipsurface;
	let current;

	tooltipsurface = new TooltipSurface({
			props: {
				class: "slider-tooltip",
				$$slots: { default: [create_default_slot] },
				$$scope: { ctx }
			},
			$$inline: true
		});

	const block = {
		c: function create() {
			create_component(tooltipsurface.$$.fragment);
		},
		m: function mount(target, anchor) {
			mount_component(tooltipsurface, target, anchor);
			current = true;
		},
		p: function update(ctx, dirty) {
			const tooltipsurface_changes = {};

			if (dirty[0] & /*suffix, value, prefix*/ 24577 | dirty[1] & /*$$scope*/ 4096) {
				tooltipsurface_changes.$$scope = { dirty, ctx };
			}

			tooltipsurface.$set(tooltipsurface_changes);
		},
		i: function intro(local) {
			if (current) return;
			transition_in(tooltipsurface.$$.fragment, local);
			current = true;
		},
		o: function outro(local) {
			transition_out(tooltipsurface.$$.fragment, local);
			current = false;
		},
		d: function destroy(detaching) {
			destroy_component(tooltipsurface, detaching);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_if_block_2.name,
		type: "if",
		source: "(200:2) {#if tooltip && !disabled}",
		ctx
	});

	return block;
}

// (202:51)       
function fallback_block(ctx) {
	let t0;
	let t1;
	let t2;

	const block = {
		c: function create() {
			t0 = text(/*prefix*/ ctx[13]);
			t1 = text(/*value*/ ctx[0]);
			t2 = text(/*suffix*/ ctx[14]);
		},
		m: function mount(target, anchor) {
			insert_dev(target, t0, anchor);
			insert_dev(target, t1, anchor);
			insert_dev(target, t2, anchor);
		},
		p: function update(ctx, dirty) {
			if (dirty[0] & /*prefix*/ 8192) set_data_dev(t0, /*prefix*/ ctx[13]);
			if (dirty[0] & /*value*/ 1) set_data_dev(t1, /*value*/ ctx[0]);
			if (dirty[0] & /*suffix*/ 16384) set_data_dev(t2, /*suffix*/ ctx[14]);
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(t0);
			if (detaching) detach_dev(t1);
			if (detaching) detach_dev(t2);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: fallback_block.name,
		type: "fallback",
		source: "(202:51)       ",
		ctx
	});

	return block;
}

// (201:3) <TooltipSurface class="slider-tooltip">
function create_default_slot(ctx) {
	let current;
	const tooltip_slot_template = /*#slots*/ ctx[34].tooltip;
	const tooltip_slot = create_slot(tooltip_slot_template, ctx, /*$$scope*/ ctx[43], get_tooltip_slot_context);
	const tooltip_slot_or_fallback = tooltip_slot || fallback_block(ctx);

	const block = {
		c: function create() {
			if (tooltip_slot_or_fallback) tooltip_slot_or_fallback.c();
		},
		m: function mount(target, anchor) {
			if (tooltip_slot_or_fallback) {
				tooltip_slot_or_fallback.m(target, anchor);
			}

			current = true;
		},
		p: function update(ctx, dirty) {
			if (tooltip_slot) {
				if (tooltip_slot.p && (!current || dirty[0] & /*prefix, suffix, value*/ 24577 | dirty[1] & /*$$scope*/ 4096)) {
					update_slot_base(
						tooltip_slot,
						tooltip_slot_template,
						ctx,
						/*$$scope*/ ctx[43],
						!current
						? get_all_dirty_from_scope(/*$$scope*/ ctx[43])
						: get_slot_changes(tooltip_slot_template, /*$$scope*/ ctx[43], dirty, get_tooltip_slot_changes),
						get_tooltip_slot_context
					);
				}
			} else {
				if (tooltip_slot_or_fallback && tooltip_slot_or_fallback.p && (!current || dirty[0] & /*suffix, value, prefix*/ 24577)) {
					tooltip_slot_or_fallback.p(ctx, !current ? [-1, -1] : dirty);
				}
			}
		},
		i: function intro(local) {
			if (current) return;
			transition_in(tooltip_slot_or_fallback, local);
			current = true;
		},
		o: function outro(local) {
			transition_out(tooltip_slot_or_fallback, local);
			current = false;
		},
		d: function destroy(detaching) {
			if (tooltip_slot_or_fallback) tooltip_slot_or_fallback.d(detaching);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_default_slot.name,
		type: "slot",
		source: "(201:3) <TooltipSurface class=\\\"slider-tooltip\\\">",
		ctx
	});

	return block;
}

// (210:2) {#if track}
function create_if_block_1(ctx) {
	let div;

	const block = {
		c: function create() {
			div = element("div");
			attr_dev(div, "class", "slider-track svelte-1ikqxku");
			add_location(div, file, 210, 3, 6833);
		},
		m: function mount(target, anchor) {
			insert_dev(target, div, anchor);
			/*div_binding*/ ctx[37](div);
		},
		p: noop,
		d: function destroy(detaching) {
			if (detaching) detach_dev(div);
			/*div_binding*/ ctx[37](null);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_if_block_1.name,
		type: "if",
		source: "(210:2) {#if track}",
		ctx
	});

	return block;
}

// (215:1) {#if ticks}
function create_if_block(ctx) {
	let div;
	let div_class_value;
	let each_value = /*ticks*/ ctx[10];
	validate_each_argument(each_value);
	let each_blocks = [];

	for (let i = 0; i < each_value.length; i += 1) {
		each_blocks[i] = create_each_block(get_each_context(ctx, each_value, i));
	}

	const block = {
		c: function create() {
			div = element("div");

			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].c();
			}

			attr_dev(div, "class", div_class_value = "slider-tick-bar placement-" + /*tickPlacement*/ ctx[11] + " svelte-1ikqxku");
			add_location(div, file, 215, 2, 6919);
		},
		m: function mount(target, anchor) {
			insert_dev(target, div, anchor);

			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].m(div, null);
			}

			/*div_binding_1*/ ctx[39](div);
		},
		p: function update(ctx, dirty) {
			if (dirty[0] & /*valueToPercentage, ticks*/ 33555456) {
				each_value = /*ticks*/ ctx[10];
				validate_each_argument(each_value);
				let i;

				for (i = 0; i < each_value.length; i += 1) {
					const child_ctx = get_each_context(ctx, each_value, i);

					if (each_blocks[i]) {
						each_blocks[i].p(child_ctx, dirty);
					} else {
						each_blocks[i] = create_each_block(child_ctx);
						each_blocks[i].c();
						each_blocks[i].m(div, null);
					}
				}

				for (; i < each_blocks.length; i += 1) {
					each_blocks[i].d(1);
				}

				each_blocks.length = each_value.length;
			}

			if (dirty[0] & /*tickPlacement*/ 2048 && div_class_value !== (div_class_value = "slider-tick-bar placement-" + /*tickPlacement*/ ctx[11] + " svelte-1ikqxku")) {
				attr_dev(div, "class", div_class_value);
			}
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(div);
			destroy_each(each_blocks, detaching);
			/*div_binding_1*/ ctx[39](null);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_if_block.name,
		type: "if",
		source: "(215:1) {#if ticks}",
		ctx
	});

	return block;
}

// (217:3) {#each ticks as tick}
function create_each_block(ctx) {
	let div;

	const block = {
		c: function create() {
			div = element("div");
			attr_dev(div, "class", "slider-tick svelte-1ikqxku");
			set_style(div, "--fds-slider-tick-percentage", /*valueToPercentage*/ ctx[25](/*tick*/ ctx[46]) + "%");
			add_location(div, file, 217, 4, 7031);
		},
		m: function mount(target, anchor) {
			insert_dev(target, div, anchor);
		},
		p: function update(ctx, dirty) {
			if (dirty[0] & /*ticks*/ 1024) {
				set_style(div, "--fds-slider-tick-percentage", /*valueToPercentage*/ ctx[25](/*tick*/ ctx[46]) + "%");
			}
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(div);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_each_block.name,
		type: "each",
		source: "(217:3) {#each ticks as tick}",
		ctx
	});

	return block;
}

function create_fragment(ctx) {
	let div2;
	let div0;
	let div0_resize_listener;
	let t0;
	let div1;
	let t1;
	let t2;
	let input;
	let div2_tabindex_value;
	let div2_style_value;
	let div2_class_value;
	let forwardEvents_action;
	let current;
	let mounted;
	let dispose;
	let if_block0 = /*tooltip*/ ctx[12] && !/*disabled*/ ctx[17] && create_if_block_2(ctx);
	let if_block1 = /*track*/ ctx[15] && create_if_block_1(ctx);
	let if_block2 = /*ticks*/ ctx[10] && create_if_block(ctx);

	let div2_levels = [
		{
			tabindex: div2_tabindex_value = /*disabled*/ ctx[17] ? -1 : 0
		},
		{
			style: div2_style_value = "--fds-slider-percentage: " + /*percentage*/ ctx[23] + "%; --fds-slider-thumb-offset: " + (/*thumbClientWidth*/ ctx[22] / 2 - linearScale([0, 50], [0, /*thumbClientWidth*/ ctx[22] / 2])(/*percentage*/ ctx[23])) + "px;"
		},
		{
			class: div2_class_value = "slider orientation-" + /*orientation*/ ctx[16] + " " + /*className*/ ctx[18]
		},
		/*$$restProps*/ ctx[30]
	];

	let div2_data = {};

	for (let i = 0; i < div2_levels.length; i += 1) {
		div2_data = assign(div2_data, div2_levels[i]);
	}

	const block = {
		c: function create() {
			div2 = element("div");
			div0 = element("div");
			if (if_block0) if_block0.c();
			t0 = space();
			div1 = element("div");
			if (if_block1) if_block1.c();
			t1 = space();
			if (if_block2) if_block2.c();
			t2 = space();
			input = element("input");
			attr_dev(div0, "class", "slider-thumb svelte-1ikqxku");
			attr_dev(div0, "role", "slider");
			attr_dev(div0, "aria-valuemin", /*min*/ ctx[7]);
			attr_dev(div0, "aria-valuemax", /*max*/ ctx[8]);
			attr_dev(div0, "aria-valuenow", /*value*/ ctx[0]);
			add_render_callback(() => /*div0_elementresize_handler*/ ctx[36].call(div0));
			add_location(div0, file, 190, 1, 6382);
			attr_dev(div1, "class", "slider-rail svelte-1ikqxku");
			add_location(div1, file, 208, 1, 6766);
			attr_dev(input, "type", "range");
			input.hidden = true;
			attr_dev(input, "min", /*min*/ ctx[7]);
			attr_dev(input, "max", /*max*/ ctx[8]);
			attr_dev(input, "step", /*step*/ ctx[9]);
			input.disabled = /*disabled*/ ctx[17];
			input.value = /*value*/ ctx[0];
			add_location(input, file, 225, 1, 7167);
			set_attributes(div2, div2_data);
			toggle_class(div2, "disabled", /*disabled*/ ctx[17]);
			toggle_class(div2, "reverse", /*directionAwareReverse*/ ctx[21]);
			toggle_class(div2, "svelte-1ikqxku", true);
			add_location(div2, file, 172, 0, 5857);
		},
		l: function claim(nodes) {
			throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option");
		},
		m: function mount(target, anchor) {
			insert_dev(target, div2, anchor);
			append_dev(div2, div0);
			if (if_block0) if_block0.m(div0, null);
			/*div0_binding*/ ctx[35](div0);
			div0_resize_listener = add_resize_listener(div0, /*div0_elementresize_handler*/ ctx[36].bind(div0));
			append_dev(div2, t0);
			append_dev(div2, div1);
			if (if_block1) if_block1.m(div1, null);
			/*div1_binding*/ ctx[38](div1);
			append_dev(div2, t1);
			if (if_block2) if_block2.m(div2, null);
			append_dev(div2, t2);
			append_dev(div2, input);
			/*input_binding*/ ctx[40](input);
			/*div2_binding*/ ctx[42](div2);
			current = true;

			if (!mounted) {
				dispose = [
					listen_dev(window_1, "mousemove", /*handleMove*/ ctx[27], false, false, false),
					listen_dev(window_1, "touchmove", /*handleMove*/ ctx[27], false, false, false),
					listen_dev(window_1, "mouseup", /*cancelMove*/ ctx[26], false, false, false),
					listen_dev(window_1, "touchend", /*cancelMove*/ ctx[26], false, false, false),
					listen_dev(window_1, "touchcancel", /*cancelMove*/ ctx[26], false, false, false),
					action_destroyer(forwardEvents_action = /*forwardEvents*/ ctx[24].call(null, div2)),
					listen_dev(div2, "mousedown", prevent_default(/*mousedown_handler*/ ctx[41]), false, true, false),
					listen_dev(div2, "touchstart", /*handleTouchStart*/ ctx[29], false, false, false),
					listen_dev(div2, "keydown", /*handleArrowKeys*/ ctx[28], false, false, false)
				];

				mounted = true;
			}
		},
		p: function update(ctx, dirty) {
			if (/*tooltip*/ ctx[12] && !/*disabled*/ ctx[17]) {
				if (if_block0) {
					if_block0.p(ctx, dirty);

					if (dirty[0] & /*tooltip, disabled*/ 135168) {
						transition_in(if_block0, 1);
					}
				} else {
					if_block0 = create_if_block_2(ctx);
					if_block0.c();
					transition_in(if_block0, 1);
					if_block0.m(div0, null);
				}
			} else if (if_block0) {
				group_outros();

				transition_out(if_block0, 1, 1, () => {
					if_block0 = null;
				});

				check_outros();
			}

			if (!current || dirty[0] & /*min*/ 128) {
				attr_dev(div0, "aria-valuemin", /*min*/ ctx[7]);
			}

			if (!current || dirty[0] & /*max*/ 256) {
				attr_dev(div0, "aria-valuemax", /*max*/ ctx[8]);
			}

			if (!current || dirty[0] & /*value*/ 1) {
				attr_dev(div0, "aria-valuenow", /*value*/ ctx[0]);
			}

			if (/*track*/ ctx[15]) {
				if (if_block1) {
					if_block1.p(ctx, dirty);
				} else {
					if_block1 = create_if_block_1(ctx);
					if_block1.c();
					if_block1.m(div1, null);
				}
			} else if (if_block1) {
				if_block1.d(1);
				if_block1 = null;
			}

			if (/*ticks*/ ctx[10]) {
				if (if_block2) {
					if_block2.p(ctx, dirty);
				} else {
					if_block2 = create_if_block(ctx);
					if_block2.c();
					if_block2.m(div2, t2);
				}
			} else if (if_block2) {
				if_block2.d(1);
				if_block2 = null;
			}

			if (!current || dirty[0] & /*min*/ 128) {
				attr_dev(input, "min", /*min*/ ctx[7]);
			}

			if (!current || dirty[0] & /*max*/ 256) {
				attr_dev(input, "max", /*max*/ ctx[8]);
			}

			if (!current || dirty[0] & /*step*/ 512) {
				attr_dev(input, "step", /*step*/ ctx[9]);
			}

			if (!current || dirty[0] & /*disabled*/ 131072) {
				prop_dev(input, "disabled", /*disabled*/ ctx[17]);
			}

			if (!current || dirty[0] & /*value*/ 1) {
				prop_dev(input, "value", /*value*/ ctx[0]);
			}

			set_attributes(div2, div2_data = get_spread_update(div2_levels, [
				(!current || dirty[0] & /*disabled*/ 131072 && div2_tabindex_value !== (div2_tabindex_value = /*disabled*/ ctx[17] ? -1 : 0)) && { tabindex: div2_tabindex_value },
				(!current || dirty[0] & /*percentage, thumbClientWidth*/ 12582912 && div2_style_value !== (div2_style_value = "--fds-slider-percentage: " + /*percentage*/ ctx[23] + "%; --fds-slider-thumb-offset: " + (/*thumbClientWidth*/ ctx[22] / 2 - linearScale([0, 50], [0, /*thumbClientWidth*/ ctx[22] / 2])(/*percentage*/ ctx[23])) + "px;")) && { style: div2_style_value },
				(!current || dirty[0] & /*orientation, className*/ 327680 && div2_class_value !== (div2_class_value = "slider orientation-" + /*orientation*/ ctx[16] + " " + /*className*/ ctx[18])) && { class: div2_class_value },
				dirty[0] & /*$$restProps*/ 1073741824 && /*$$restProps*/ ctx[30]
			]));

			toggle_class(div2, "disabled", /*disabled*/ ctx[17]);
			toggle_class(div2, "reverse", /*directionAwareReverse*/ ctx[21]);
			toggle_class(div2, "svelte-1ikqxku", true);
		},
		i: function intro(local) {
			if (current) return;
			transition_in(if_block0);
			current = true;
		},
		o: function outro(local) {
			transition_out(if_block0);
			current = false;
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(div2);
			if (if_block0) if_block0.d();
			/*div0_binding*/ ctx[35](null);
			div0_resize_listener();
			if (if_block1) if_block1.d();
			/*div1_binding*/ ctx[38](null);
			if (if_block2) if_block2.d();
			/*input_binding*/ ctx[40](null);
			/*div2_binding*/ ctx[42](null);
			mounted = false;
			run_all(dispose);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

function linearScale(input, output) {
	return value => {
		if (input[0] === input[1] || output[0] === output[1]) return output[0];
		const ratio = (output[1] - output[0]) / (input[1] - input[0]);
		return output[0] + ratio * (value - input[0]);
	};
}

function instance($$self, $$props, $$invalidate) {
	let percentage;

	const omit_props_names = [
		"value","min","max","step","ticks","tickPlacement","tooltip","prefix","suffix","track","orientation","reverse","disabled","class","inputElement","containerElement","tickBarElement","thumbElement","railElement","trackElement","stepUp","stepDown"
	];

	let $$restProps = compute_rest_props($$props, omit_props_names);
	let { $$slots: slots = {}, $$scope } = $$props;
	validate_slots('Slider', slots, ['tooltip']);
	let { value = 0 } = $$props;
	let { min = 0 } = $$props;
	let { max = 100 } = $$props;
	let { step = 1 } = $$props;
	let { ticks = [] } = $$props;
	let { tickPlacement = "around" } = $$props;
	let { tooltip = true } = $$props;
	let { prefix = "" } = $$props;
	let { suffix = "" } = $$props;
	let { track = true } = $$props;
	let { orientation = "horizontal" } = $$props;
	let { reverse = false } = $$props;
	let { disabled = false } = $$props;
	let { class: className = "" } = $$props;
	let { inputElement = null } = $$props;
	let { containerElement = null } = $$props;
	let { tickBarElement = null } = $$props;
	let { thumbElement = null } = $$props;
	let { railElement = null } = $$props;
	let { trackElement = null } = $$props;
	let dragging = false;
	let holding = false;
	let directionAwareReverse = false;
	let thumbClientWidth = 20;
	const dispatch = createEventDispatcher();
	const forwardEvents = createEventForwarder(get_current_component(), ["input", "change", "beforeinput"]);

	// Divides the current value minus the minimum value
	// by the difference between the max and min values,
	// and multiplies by 100 to get a percentage.
	const valueToPercentage = v => (v - min) / (max - min) * 100;

	function cancelMove() {
		$$invalidate(20, holding = false);
		$$invalidate(19, dragging = false);
	}

	function handleMove() {
		if (holding) $$invalidate(19, dragging = true);
	}

	function calculateValue(event) {
		if (disabled || !railElement) return;
		const { top, bottom, left, right, width, height } = railElement.getBoundingClientRect();
		const percentageX = event.touches ? event.touches[0].clientX : event.clientX;
		const percentageY = event.touches ? event.touches[0].clientY : event.clientY;
		const position = orientation === "horizontal" ? percentageX : percentageY;

		const startingPos = orientation === "horizontal"
		? directionAwareReverse ? right : left
		: directionAwareReverse ? top : bottom;

		const length = orientation === "horizontal" ? width : height;
		let nextStep = min + Math.round((max - min) * ((position - startingPos) / length) * (directionAwareReverse ? -1 : 1) * (orientation === "vertical" ? -1 : 1) / step) * step;
		if (nextStep <= min) nextStep = min; else if (nextStep >= max) nextStep = max;
		$$invalidate(0, value = nextStep);
	}

	function handleArrowKeys(event) {
		const { key } = event;
		if (key === "ArrowDown" || key === "ArrowUp") event.preventDefault();

		if (key === "ArrowLeft" || key === "ArrowDown" && !disabled) {
			if (reverse) {
				stepUp();
			} else {
				stepDown();
			}
		} else if (key === "ArrowRight" || key === "ArrowUp" && !disabled) {
			if (reverse) {
				stepDown();
			} else {
				stepUp();
			}
		}
	}

	function handleTouchStart(event) {
		if (event.cancelable) event.preventDefault();
		$$invalidate(20, holding = true);
	}

	function stepUp() {
		$$invalidate(0, value += step);
		if (value > max) $$invalidate(0, value = max);
	}

	function stepDown() {
		$$invalidate(0, value -= step);
		if (value < min) $$invalidate(0, value = min);
	}

	function div0_binding($$value) {
		binding_callbacks[$$value ? 'unshift' : 'push'](() => {
			thumbElement = $$value;
			$$invalidate(4, thumbElement);
		});
	}

	function div0_elementresize_handler() {
		thumbClientWidth = this.clientWidth;
		$$invalidate(22, thumbClientWidth);
	}

	function div_binding($$value) {
		binding_callbacks[$$value ? 'unshift' : 'push'](() => {
			trackElement = $$value;
			$$invalidate(6, trackElement);
		});
	}

	function div1_binding($$value) {
		binding_callbacks[$$value ? 'unshift' : 'push'](() => {
			railElement = $$value;
			$$invalidate(5, railElement);
		});
	}

	function div_binding_1($$value) {
		binding_callbacks[$$value ? 'unshift' : 'push'](() => {
			tickBarElement = $$value;
			$$invalidate(3, tickBarElement);
		});
	}

	function input_binding($$value) {
		binding_callbacks[$$value ? 'unshift' : 'push'](() => {
			inputElement = $$value;
			$$invalidate(2, inputElement);
		});
	}

	const mousedown_handler = () => {
		$$invalidate(20, holding = true);
		$$invalidate(19, dragging = true);
	};

	function div2_binding($$value) {
		binding_callbacks[$$value ? 'unshift' : 'push'](() => {
			containerElement = $$value;
			$$invalidate(1, containerElement);
		});
	}

	$$self.$$set = $$new_props => {
		$$props = assign(assign({}, $$props), exclude_internal_props($$new_props));
		$$invalidate(30, $$restProps = compute_rest_props($$props, omit_props_names));
		if ('value' in $$new_props) $$invalidate(0, value = $$new_props.value);
		if ('min' in $$new_props) $$invalidate(7, min = $$new_props.min);
		if ('max' in $$new_props) $$invalidate(8, max = $$new_props.max);
		if ('step' in $$new_props) $$invalidate(9, step = $$new_props.step);
		if ('ticks' in $$new_props) $$invalidate(10, ticks = $$new_props.ticks);
		if ('tickPlacement' in $$new_props) $$invalidate(11, tickPlacement = $$new_props.tickPlacement);
		if ('tooltip' in $$new_props) $$invalidate(12, tooltip = $$new_props.tooltip);
		if ('prefix' in $$new_props) $$invalidate(13, prefix = $$new_props.prefix);
		if ('suffix' in $$new_props) $$invalidate(14, suffix = $$new_props.suffix);
		if ('track' in $$new_props) $$invalidate(15, track = $$new_props.track);
		if ('orientation' in $$new_props) $$invalidate(16, orientation = $$new_props.orientation);
		if ('reverse' in $$new_props) $$invalidate(31, reverse = $$new_props.reverse);
		if ('disabled' in $$new_props) $$invalidate(17, disabled = $$new_props.disabled);
		if ('class' in $$new_props) $$invalidate(18, className = $$new_props.class);
		if ('inputElement' in $$new_props) $$invalidate(2, inputElement = $$new_props.inputElement);
		if ('containerElement' in $$new_props) $$invalidate(1, containerElement = $$new_props.containerElement);
		if ('tickBarElement' in $$new_props) $$invalidate(3, tickBarElement = $$new_props.tickBarElement);
		if ('thumbElement' in $$new_props) $$invalidate(4, thumbElement = $$new_props.thumbElement);
		if ('railElement' in $$new_props) $$invalidate(5, railElement = $$new_props.railElement);
		if ('trackElement' in $$new_props) $$invalidate(6, trackElement = $$new_props.trackElement);
		if ('$$scope' in $$new_props) $$invalidate(43, $$scope = $$new_props.$$scope);
	};

	$$self.$capture_state = () => ({
		createEventForwarder,
		TooltipSurface,
		createEventDispatcher,
		get_current_component,
		value,
		min,
		max,
		step,
		ticks,
		tickPlacement,
		tooltip,
		prefix,
		suffix,
		track,
		orientation,
		reverse,
		disabled,
		className,
		inputElement,
		containerElement,
		tickBarElement,
		thumbElement,
		railElement,
		trackElement,
		dragging,
		holding,
		directionAwareReverse,
		thumbClientWidth,
		dispatch,
		forwardEvents,
		valueToPercentage,
		cancelMove,
		handleMove,
		calculateValue,
		handleArrowKeys,
		handleTouchStart,
		linearScale,
		stepUp,
		stepDown,
		percentage
	});

	$$self.$inject_state = $$new_props => {
		if ('value' in $$props) $$invalidate(0, value = $$new_props.value);
		if ('min' in $$props) $$invalidate(7, min = $$new_props.min);
		if ('max' in $$props) $$invalidate(8, max = $$new_props.max);
		if ('step' in $$props) $$invalidate(9, step = $$new_props.step);
		if ('ticks' in $$props) $$invalidate(10, ticks = $$new_props.ticks);
		if ('tickPlacement' in $$props) $$invalidate(11, tickPlacement = $$new_props.tickPlacement);
		if ('tooltip' in $$props) $$invalidate(12, tooltip = $$new_props.tooltip);
		if ('prefix' in $$props) $$invalidate(13, prefix = $$new_props.prefix);
		if ('suffix' in $$props) $$invalidate(14, suffix = $$new_props.suffix);
		if ('track' in $$props) $$invalidate(15, track = $$new_props.track);
		if ('orientation' in $$props) $$invalidate(16, orientation = $$new_props.orientation);
		if ('reverse' in $$props) $$invalidate(31, reverse = $$new_props.reverse);
		if ('disabled' in $$props) $$invalidate(17, disabled = $$new_props.disabled);
		if ('className' in $$props) $$invalidate(18, className = $$new_props.className);
		if ('inputElement' in $$props) $$invalidate(2, inputElement = $$new_props.inputElement);
		if ('containerElement' in $$props) $$invalidate(1, containerElement = $$new_props.containerElement);
		if ('tickBarElement' in $$props) $$invalidate(3, tickBarElement = $$new_props.tickBarElement);
		if ('thumbElement' in $$props) $$invalidate(4, thumbElement = $$new_props.thumbElement);
		if ('railElement' in $$props) $$invalidate(5, railElement = $$new_props.railElement);
		if ('trackElement' in $$props) $$invalidate(6, trackElement = $$new_props.trackElement);
		if ('dragging' in $$props) $$invalidate(19, dragging = $$new_props.dragging);
		if ('holding' in $$props) $$invalidate(20, holding = $$new_props.holding);
		if ('directionAwareReverse' in $$props) $$invalidate(21, directionAwareReverse = $$new_props.directionAwareReverse);
		if ('thumbClientWidth' in $$props) $$invalidate(22, thumbClientWidth = $$new_props.thumbClientWidth);
		if ('percentage' in $$props) $$invalidate(23, percentage = $$new_props.percentage);
	};

	if ($$props && "$$inject" in $$props) {
		$$self.$inject_state($$props.$$inject);
	}

	$$self.$$.update = () => {
		if ($$self.$$.dirty[0] & /*containerElement*/ 2 | $$self.$$.dirty[1] & /*reverse*/ 1) {
			$: if (containerElement) {
				$$invalidate(21, directionAwareReverse = (window === null || window === void 0
				? void 0
				: window.getComputedStyle(containerElement).direction) === "ltr"
				? reverse
				: !reverse);
			}
		}

		if ($$self.$$.dirty[0] & /*value, min, max, dragging*/ 524673) {
			$: {
				if (value <= min) $$invalidate(0, value = min); else if (value >= max) $$invalidate(0, value = max);

				if (dragging) {
					calculateValue(event);
					$$invalidate(19, dragging = false);
				}
			}
		}

		if ($$self.$$.dirty[0] & /*value*/ 1) {
			$: dispatch("change", value);
		}

		if ($$self.$$.dirty[0] & /*value*/ 1) {
			$: $$invalidate(23, percentage = valueToPercentage(value));
		}
	};

	return [
		value,
		containerElement,
		inputElement,
		tickBarElement,
		thumbElement,
		railElement,
		trackElement,
		min,
		max,
		step,
		ticks,
		tickPlacement,
		tooltip,
		prefix,
		suffix,
		track,
		orientation,
		disabled,
		className,
		dragging,
		holding,
		directionAwareReverse,
		thumbClientWidth,
		percentage,
		forwardEvents,
		valueToPercentage,
		cancelMove,
		handleMove,
		handleArrowKeys,
		handleTouchStart,
		$$restProps,
		reverse,
		stepUp,
		stepDown,
		slots,
		div0_binding,
		div0_elementresize_handler,
		div_binding,
		div1_binding,
		div_binding_1,
		input_binding,
		mousedown_handler,
		div2_binding,
		$$scope
	];
}

class Slider extends SvelteComponentDev {
	constructor(options) {
		super(options);

		init(
			this,
			options,
			instance,
			create_fragment,
			safe_not_equal,
			{
				value: 0,
				min: 7,
				max: 8,
				step: 9,
				ticks: 10,
				tickPlacement: 11,
				tooltip: 12,
				prefix: 13,
				suffix: 14,
				track: 15,
				orientation: 16,
				reverse: 31,
				disabled: 17,
				class: 18,
				inputElement: 2,
				containerElement: 1,
				tickBarElement: 3,
				thumbElement: 4,
				railElement: 5,
				trackElement: 6,
				stepUp: 32,
				stepDown: 33
			},
			add_css,
			[-1, -1]
		);

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "Slider",
			options,
			id: create_fragment.name
		});
	}

	get value() {
		throw new Error("<Slider>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set value(value) {
		throw new Error("<Slider>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get min() {
		throw new Error("<Slider>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set min(value) {
		throw new Error("<Slider>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get max() {
		throw new Error("<Slider>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set max(value) {
		throw new Error("<Slider>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get step() {
		throw new Error("<Slider>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set step(value) {
		throw new Error("<Slider>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get ticks() {
		throw new Error("<Slider>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set ticks(value) {
		throw new Error("<Slider>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get tickPlacement() {
		throw new Error("<Slider>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set tickPlacement(value) {
		throw new Error("<Slider>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get tooltip() {
		throw new Error("<Slider>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set tooltip(value) {
		throw new Error("<Slider>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get prefix() {
		throw new Error("<Slider>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set prefix(value) {
		throw new Error("<Slider>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get suffix() {
		throw new Error("<Slider>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set suffix(value) {
		throw new Error("<Slider>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get track() {
		throw new Error("<Slider>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set track(value) {
		throw new Error("<Slider>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get orientation() {
		throw new Error("<Slider>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set orientation(value) {
		throw new Error("<Slider>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get reverse() {
		throw new Error("<Slider>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set reverse(value) {
		throw new Error("<Slider>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get disabled() {
		throw new Error("<Slider>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set disabled(value) {
		throw new Error("<Slider>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get class() {
		throw new Error("<Slider>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set class(value) {
		throw new Error("<Slider>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get inputElement() {
		throw new Error("<Slider>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set inputElement(value) {
		throw new Error("<Slider>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get containerElement() {
		throw new Error("<Slider>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set containerElement(value) {
		throw new Error("<Slider>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get tickBarElement() {
		throw new Error("<Slider>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set tickBarElement(value) {
		throw new Error("<Slider>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get thumbElement() {
		throw new Error("<Slider>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set thumbElement(value) {
		throw new Error("<Slider>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get railElement() {
		throw new Error("<Slider>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set railElement(value) {
		throw new Error("<Slider>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get trackElement() {
		throw new Error("<Slider>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set trackElement(value) {
		throw new Error("<Slider>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get stepUp() {
		return this.$$.ctx[32];
	}

	set stepUp(value) {
		throw new Error("<Slider>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get stepDown() {
		return this.$$.ctx[33];
	}

	set stepDown(value) {
		throw new Error("<Slider>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}
}

export default Slider;